{"mappings":"A,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,K,E,A,W,iB,C,E,E,Q,A,Q,oB,C,C,qB,C,C,a,C,K,S,A,Q,Y,C,C,Q,C,C,W,C,C,W,C,K,W,A,Q,S,C,C,a,C,K,oB,A,Q,Y,C,C,Y,C,C,Y,C,K,a,A,Q,a,C,K,W,A,W,M,Q,A,Q,a,C,K,M,C,E,Q,S,C,C,C,E,E,E,O,C,a,I,G,I,E,E,S,E,E,S,E,E,S,E,E,SEkBA,IAAM86F,EAAW,CAChB13F,4BAA6B,CAAA,CAC9B,EAEM23F,EAAe,CACpBz3F,MAAO,CAAA,CACR,CAyDO,OAAM03F,UAAiBx3F,EAAAA,KAAAA,CAcbC,SAAiB,IAAjBA,AAoBAC,CAAAA,MAAc,IAAdA,AAKAC,CAAAA,MAAc,IAAdA,AAiBhBC,aAAYC,CAA6B,CAAE,CAC1C,KAAK,CAACA,GAEN,IAAI,CAACC,OAAO,CAAGD,EAAKC,OAAO,CAC3B,IAAI,CAACC,IAAI,CAAGF,EAAKE,IAAI,CACrB,IAAI,CAACC,IAAI,CAAGH,EAAKG,IAAI,CACrB,IAAI,CAACC,GAAG,CAAGJ,EAAKI,GAAG,CACnB,IAAI,CAACC,GAAG,CAAGL,EAAKK,GAAG,CACnB,IAAI,CAACC,KAAK,CAAGN,EAAKM,KAAK,CACvB,IAAI,CAACC,KAAK,CAAGP,EAAKO,KAAK,AACxB,CAOA,IAAWC,aAAc,CACxB,MAAOC,AAAAA,CAAAA,EAAAA,EAAAA,gBAAAA,AAAAA,EAAiB,IAAI,CAACC,OAAO,CACrC,CAOA,IAAWC,UAAW,CACrB,MAAOC,AAAAA,CAAAA,EAAAA,EAAAA,aAAAA,AAAAA,EAAcH,AAAAA,CAAAA,EAAAA,EAAAA,gBAAAA,AAAAA,EAAiB,IAAI,CAACI,IAAI,EAChD,CACD,CAKO,MAAMu2F,UAAmBt2F,EAAAA,OAAAA,CAI/B,OAAuBC,gBAA6C,CACnE,OACA,OACA,OACA,AAJD,AASA,QAAuBC,kBAA6B,CAAA,CAApD,AAKgBrB,CAAAA,MAAQw3F,CAARx3F,AAKTsB,CAAAA,WAAa,IAAIC,EAAAA,OAAAA,AAAjBD,AAKAE,CAAAA,SAAW,CAAA,CAAXA,AAOPpB,aAAYc,CAAY,CAAE,CACzB,KAAK,CAACA,EACP,CAKA,MAAaO,KAAKC,CAA4C,CAAE,CAC/D,MAAM,KAAK,CAACD,KAAKC,EAClB,CAKA,MAAgBC,MAAMD,CAA4C,CAAE,CACnE,GAAM,CAAA,WAACJ,CAAU,CAAA,SAAEE,CAAAA,CAAS,CAAG,IAAI,CAU7BI,EAAO,MAAOC,EAAkBd,EAAiBe,KACtD,IAAMC,EAAOC,AAAAA,CAAAA,EAAAA,EAAAA,cAAAA,AAAAA,EAAeF,GAC5B,GAAIC,AAAS,OAATA,EACH,MAAO,CAAA,EAGR,GAAM,CAAA,KAACxB,CAAI,CAAA,KAAEC,CAAI,CAAA,IAAEC,CAAG,CAAA,IAAEC,CAAG,CAAA,MAAEC,CAAK,CAAA,MAAEC,CAAAA,CAAM,CAAGkB,EAEvCG,EACLF,IAASG,AAAAA,EAAAA,QAAAA,CAASC,IAAI,CAGnB,SAAY3E,AAAAA,EAAiBqE,GAC7B,KAEEO,EACLL,IAASG,AAAAA,EAAAA,QAAAA,CAASG,OAAO,CACtB,SAAYC,AAAAA,CAAAA,EAAAA,EAAAA,aAAAA,AAAAA,EAAcT,GAC1B,KAEEU,EAAQ,IAAI,IAAI,CAACvC,KAAK,CAAC,CAC5BM,QAAS,IAAI,CACbyB,KAAAA,EACAhB,QAAAA,EACAR,KAAAA,EACAC,KAAAA,EACAC,IAAAA,EACAC,IAAAA,EACAC,MAAAA,EACAC,MAAAA,EACAqB,SAAAA,EACAG,YAAAA,CACD,GAEMI,EAAM,MAAMD,EAAME,OAAO,CAACf,GAChC,GAAIc,AAAQ,CAAA,IAARA,EACH,OAAO,KAER,GAAIA,AAAQ,OAARA,EACH,MAAO,CAAA,EAGR,GAAIT,IAASG,AAAAA,EAAAA,QAAAA,CAASC,IAAI,CAAE,CAC3B,IAAMO,EAAe5B,AAAAA,CAAAA,EAAAA,EAAAA,gBAAAA,AAAAA,EAAiBe,GAChCc,EAAW,MAAMC,AAAAA,CAAAA,EAAAA,EAAAA,aAAAA,AAAAA,EAAcF,GAErC,GAAIC,EAAU,CACb,IAAME,EAAWF,EAASpC,IAAI,CAQxBuC,EAAW,SAAYtF,AAAAA,EAAiBkF,GAExCK,EAAY,IAAI,IAAI,CAAC/C,KAAK,CAAC,CAChCM,QAAS,IAAI,CACbyB,KAAMG,AAAAA,EAAAA,QAAAA,CAASc,aAAa,CAC5BjC,QAAAA,EACAR,KAAMsC,EACNrC,KAAAA,EACAC,IAAAA,EACAC,IAAAA,EACAC,MAAAA,EACAC,MAAAA,EACAkC,SAAAA,CACD,GAEMN,EAAM,MAAMO,EAAUN,OAAO,CAACf,GACpC,GAAIc,AAAQ,CAAA,IAARA,EACH,OAAO,KAER,GAAIA,AAAQ,OAARA,EACH,MAAO,CAAA,CAET,CACD,CAEA,MAAO,CAAA,CACR,EAGMnC,EAAO,MAAMiB,EAAW2B,MAAM,CACnC,IAAI,CAAC/B,IAAI,CACT,CACCM,SAAAA,EACA0B,SAAU,CAAA,CACX,EACAq0F,GAID,GAAI,CACH,IAAK,IAAMp0F,KAAU9C,EAAK+C,OAAO,CAAE,CAClC,GAAM,CAAA,WAACC,CAAAA,CAAW,CAAGF,EACrB,GAAI,CAACE,EACJ,SAGD,IAAMC,EAAaxF,AAAAA,EAASuF,EAE5B,OAAME,AAAAA,CAAAA,EAAAA,EAAAA,MAAAA,AAAAA,EACLF,EACA,MAAOG,EAAS1B,KACf,IAAMD,EAAWw1F,AAAAA,EAASh0F,EAAYG,GAChCzC,EAAUs2F,AAAAA,EAAS/zF,EAAYE,GACrC,OAAO5B,EAAKC,EAAUd,EAASe,EAChC,EACAw1F,EAEF,CACD,QAAU,CACT,MAAMj3F,EAAKoD,KAAK,CAAC8zF,EAClB,CACD,CACD,C,G,E,Q,S,C,C,C,E,E,E,O,C,U,I,G,I,E,E,S,E,E,S,E,E,S,E,E,S,E,E,QElQO,OAAMh2F,EAWZnB,YAAY4D,EAA4C,IAAI,CAAE,CAC7D,IAAI,CAACC,OAAO,CAAID,AAAAA,CAAAA,EAAUA,EAAQC,OAAO,CAAG,IAAA,GAAS,SACtD,CAUA,MAAahB,OACZiB,CAAY,CACZF,EAAkD,IAAI,CACtDG,EAAqD,IAAI,CAC3B,CAC9B,IAAMf,EAAU,MAAM,IAAI,CAACgB,UAAU,CAAC,IAAI,CAACC,WAAW,CAACH,EAAMF,IACvD,CAAA,MAACP,CAAK,CAAA,UAAEa,CAAAA,CAAU,CAAG,IAAI,CAACC,aAAa,CAACnB,GAC9C,MAAO,CACNA,QAAAA,EACAK,MAAAA,EACAa,UAAAA,CACD,CACD,CAUOE,WACNN,CAAY,CACZF,EAAkD,IAAI,CACtDG,EAAqD,IAAI,CACpC,CAErB,IAAMf,EAAU,IAAI,CAACqB,cAAc,CAAC,IAAI,CAACJ,WAAW,CAACH,EAAMF,IACrD,CAAA,MAACP,CAAK,CAAA,UAAEa,CAAAA,CAAU,CAAG,IAAI,CAACC,aAAa,CAACnB,GAC9C,MAAO,CACNA,QAAAA,EACAK,MAAAA,EACAa,UAAAA,CACD,CACD,CAQA,MAAab,MACZS,CAAY,CACZF,EAAiD,IAAI,CACpD,CACD,MAAM,IAAI,CAACU,SAAS,CAAC,IAAI,CAACC,UAAU,CAACT,EAAMF,GAC5C,CAQOM,UACNJ,CAAY,CACZF,EAAiD,IAAI,CACpD,CAED,IAAI,CAACY,aAAa,CAAC,IAAI,CAACD,UAAU,CAACT,EAAMF,GAC1C,CASUK,YACTH,CAAY,CACZF,EAAkD,IAAI,CACrD,CACD,IAAMa,EAAO,CAAC,SAAU,SAAS,CAUjC,OATIb,IACCA,EAAQd,QAAQ,EACnB2B,EAAKC,IAAI,CAAC,aAEPd,EAAQxC,QAAQ,EACnBqD,EAAKC,IAAI,CAAC,cAGZD,EAAKC,IAAI,CAAC,IAAI,CAACC,QAAQ,CAACb,IACjBW,CACR,CASUF,WACTT,CAAY,CACZF,EAAiD,IAAI,CACpD,CACD,IAAMa,EAAO,CAAC,QAAQ,CAKtB,OAJIb,GAAWA,EAAQlE,KAAK,EAC3B+E,EAAKC,IAAI,CAAC,UAEXD,EAAKC,IAAI,CAAC,IAAI,CAACC,QAAQ,CAACb,IACjBW,CACR,CAQA,MAAgBT,WAAWS,CAAuB,CAAE,CACnD,IAAMG,EAAoB,EAAE,CACtBC,EAAO3G,AAAAA,EAAM,IAAI,CAAC2F,OAAO,CAAEY,GACjCI,EAAKC,MAAM,CAACC,EAAE,CAAC,OAASC,AAAAA,IACvBJ,EAAQF,IAAI,CAACM,EACd,GACA,IAAMC,EAAO,MAAM,IAAIC,QAAuB,CAAClH,EAASmH,KACvDN,EAAKO,IAAI,CAAC,OAAQpH,GAClB6G,EAAKO,IAAI,CAAC,QAASD,EACpB,GACA,GAAIF,EACH,MAAM,AAAII,MAAM,qCAAqCJ,GAEtD,OAAO,IAAI,CAACK,aAAa,CAACC,OAAOC,MAAM,CAACZ,GAASa,QAAQ,GAC1D,CAQUpB,eAAeI,CAAuB,CAAE,CACjD,GAAM,CAAA,OAACiB,CAAM,CAAA,MAAEC,CAAK,CAAA,OAAEb,CAAAA,CAAO,CAAG1G,AAAAA,EAAU,IAAI,CAACyF,OAAO,CAAEY,GACxD,GAAIkB,EACH,MAAMA,EAEP,GAAID,EACH,MAAM,AAAIL,MAAM,qCAAqCK,GAEtD,OAAO,IAAI,CAACJ,aAAa,CAACR,EAAOW,QAAQ,GAC1C,CAOA,MAAgBnB,UAAUG,CAAuB,CAAE,CAClD,IAAMI,EAAO3G,AAAAA,EAAM,IAAI,CAAC2F,OAAO,CAAEY,GAC3BiB,EAAS,MAAM,IAAIR,QAAuB,CAAClH,EAASmH,KACzDN,EAAKO,IAAI,CAAC,OAAQpH,GAClB6G,EAAKO,IAAI,CAAC,QAASD,EACpB,GACA,GAAIO,EACH,MAAM,AAAIL,MAAM,oCAAoCK,EAEtD,CAOUlB,cAAcC,CAAuB,CAAE,CAChD,GAAM,CAAA,OAACiB,CAAM,CAAA,MAAEC,CAAAA,CAAM,CAAGvH,AAAAA,EAAU,IAAI,CAACyF,OAAO,CAAEY,GAChD,GAAIkB,EACH,MAAMA,EAEP,GAAID,EACH,MAAM,AAAIL,MAAM,oCAAoCK,EAEtD,CAQUf,SAASb,CAAY,CAAE,CAEhC,OAAOA,EAAK8B,UAAU,CAAC,KAAO,KAAK9B,EAASA,CAC7C,CAQUwB,cAAcO,CAAW,CAAE,CACpC,IAAMC,EAAQ,IAAIC,EAAAA,KAAAA,CAClBD,EAAME,OAAO,CAACH,GACd,IAAMI,EAAiBH,EACrBI,WAAW,CAACC,EAAAA,SAAAA,EACZC,QAAQ,CAAC,mBACTC,MAAM,CAACC,EAAAA,UAAAA,EAEHC,EAAsB,EAAE,CAC9B,IAAK,IAAMC,KAASP,EAAeO,KAAK,CAAE,CACzC,IAAMC,EAAOD,EAAMH,MAAM,CAACF,EAAAA,SAAAA,EACpBO,EAAWD,EACfL,QAAQ,CAAC,aACTC,MAAM,CAACM,EAAAA,WAAAA,EAAaH,KAAK,CACrBI,EAAuBH,EAC3BL,QAAQ,CAAC,yBACTC,MAAM,CAACQ,EAAAA,YAAAA,EAAcL,KAAK,CACtBM,EAAcL,EAAK9J,GAAG,CAAC,gBACvBoK,EAAsBN,EAAK9J,GAAG,CAAC,yBAC/BqK,EAAaP,EAAK9J,GAAG,CAAC,eACtBsG,EAAawD,EAAK9J,GAAG,CAAC,eAEtBoG,EAAyB,CAC9B2D,SAAAA,EACAE,qBAAAA,CACD,EACIE,GACH/D,CAAAA,EAAO+D,WAAW,CAAGA,EAAYT,MAAM,CAACM,EAAAA,WAAAA,EAAaH,KAAK,AAALA,EAElDO,GACHhE,CAAAA,EAAOgE,mBAAmB,CACzBA,EAAoBV,MAAM,CAACM,EAAAA,WAAAA,EAAaH,KAAK,AAALA,EAEtCQ,GACHjE,CAAAA,EAAOiE,UAAU,CAAGA,EAAWX,MAAM,CAACM,EAAAA,WAAAA,EAAaH,KAAK,AAALA,EAEhDvD,GACHF,CAAAA,EAAOE,UAAU,CAAGA,EAAWoD,MAAM,CAACM,EAAAA,WAAAA,EAAaH,KAAK,AAALA,EAEpDD,EAAE7B,IAAI,CAAC3B,EACR,CACA,OAAOwD,CACR,CAQUU,gBAAgBjE,CAA4C,CAAE,CACvE,IAAIuD,EAA2B,KAC/B,IAAK,IAAMxD,KAAUC,EAChBuD,CAAAA,AAAM,OAANA,GAAcA,EAAEG,QAAQ,CAACQ,MAAM,CAAGnE,EAAO2D,QAAQ,CAACQ,MAAM,AAANA,GACrDX,CAAAA,EAAIxD,CAFN,EAKA,OAAOwD,CACR,CASUpC,cACTnB,CAA4C,CAC5Ce,EAAc,IAAI,CACjB,CAED,IAAI2C,EAAW,IAAI,CAACO,eAAe,CAACjE,IAAU0D,SAE1CS,EAAgC,KAC9BlH,EAAO,CAMZoD,MAAO,MAAOO,EAAuC,IAAI,IACpD8C,IACH,MAAM,IAAI,CAACrD,KAAK,CAACqD,EAAU9C,GAC3B8C,EAAW,GACPS,GACHC,QAAQC,GAAG,CAAC,OAAQF,GAGvB,EAOAjD,UAAWA,CAACN,EAAuC,IAAI,IAClD8C,IAEH,IAAI,CAACxC,SAAS,CAACwC,EAAU9C,GACzB8C,EAAW,GACPS,GACHC,QAAQC,GAAG,CAAC,OAAQF,GAGvB,CACD,EAeA,OAbIpD,IAMHoD,EAAWA,KAEVlH,EAAKiE,SAAS,CAACH,EAChB,EACAqD,QAAQhC,IAAI,CAAC,OAAQ+B,IAGflH,CACR,CACD,C,G,E,Q,S,C,C,C,E,E,E,O,C,Q,I,G,I,E,E,S,E,E,S,E,E,SEzaA,IAAM4H,EAAiB,yCACjBC,EACL,wGAKM,OAAM/B,EAIZ,OAAuB4B,gBAAkBE,CAAzC,AAKA,QAAuBD,YAAcE,CAArC,AAKOD,CAAAA,eAAiBA,CAAjBA,AAKAC,CAAAA,WAAaA,CAAbA,AAKAtB,CAAAA,MAAsB,IAAtBA,AAOPxG,aAAYwG,EAAsB,IAAI,CAAE,CACvC,IAAI,CAACA,KAAK,CAAGA,CACd,CAOOJ,UAAW,CACjB,GAAM,CAAA,MAACI,CAAAA,CAAM,CAAG,IAAI,CACpB,GAAI,CAACA,EACJ,MAAM,AAAInB,MAAM,iBAEjB,OAAOmB,CACR,CAQOuB,YAAoCC,CAAO,CAAyB,CAC1E,GAAM,CAAA,MAACxB,CAAAA,CAAM,CAAG,IAAI,CACpB,OAAOA,EAAQA,EAAMyB,MAAM,CAACD,GAAQ,IACrC,CAQO9B,YAAoC8B,CAAO,CAAkB,CACnE,IAAME,EAAS,IAAI,CAACH,WAAW,CAACC,GAChC,GAAI,CAACE,EACJ,MAAM,AAAI7C,MAAM,CAAA,2BAAA,EAA8B2C,EAAKG,IAAI,CAAA,CAAA,CAAG,EAE3D,OAAOD,CACR,CAOOlC,QAAQH,CAAW,CAAE,CAC3B,GAAM,CAAA,YAACuC,CAAW,CAAA,QAAEC,CAAO,CAAA,gBAAEC,CAAAA,CAAgB,CAAGC,AAAAA,CAAAA,EAAAA,EAAAA,SAAAA,AAAAA,EAAU1C,GAC1D,IAAI,CAAC2C,cAAc,CAACF,EAAiBF,EAAaC,EACnD,CASOG,eACNC,CAA2B,CAC3BL,EAA6B,IAAI,CACjCC,EAAyB,IAAI,CAC5B,CACD,GAAM,CAAA,QAACK,CAAAA,CAAQ,CAAGD,EAClB,GAAIC,AAAY,UAAZA,EACH,MAAM,AAAIrD,MAAM,mCAAmCqD,GAGpD,IAAMC,EAAgBC,AAAAA,CAAAA,EAAAA,EAAAA,uBAAAA,AAAAA,EAAwBH,GACxCI,EAAiBF,EAAczB,MAAM,CAC3C,GAAI2B,EAAiB,EACpB,MAAM,AAAIxD,MAAM,kCAAkCwD,EAGnD,CAAA,IAAI,CAACrC,KAAK,CAAGqC,EACV,IAAI,CAACC,mBAAmB,CAACH,CAAa,CAAC,EAAE,EACzC,KACH,IAAI,CAACd,cAAc,CAAGO,GAAe,GACrC,IAAI,CAACN,UAAU,CAAGO,GAAW,EAC9B,CAQOS,oBAAoBL,CAAiB,CAAE,CAE7C,OAAOM,AADG,IAAI5C,EAAAA,SAAAA,GACL2C,mBAAmB,CAACL,EAC9B,CAQOO,MAAMpF,EAA0C,IAAI,CAAE,CAC5D,IAAMqF,EAAKrF,GAASsF,YAAcC,EAAAA,WAAAA,CAC5B7M,EAAIsH,GAASwF,eAAiBC,EAAAA,cAAAA,CAE9B9M,EAAI,IAAI,CAACiK,KAAK,CACpB,MAAO,IACH,CAAC,IAAI,CAACqB,cAAc,CAAE,IAAI,CAACC,UAAU,CAAC,CAACwB,MAAM,CAACC,SACjD,2BACIhN,EAAI,CAACA,EAAEyM,KAAK,CAACpF,EAASqF,EAAK,EAAI,GAAG,CAAG,EAAE,CAC3C,WACA,GACA,CAACrL,IAAI,CAACtB,EACR,CACD,C,G,E,Q,S,C,C,C,E,E,E,O,C,gB,I,G,E,E,O,C,iB,I,G,E,E,O,C,e,I,G,E,E,O,C,c,I,GE3JO,IAAM4xF,EAAgB,IAChB7kF,EAAiB,KACjB8lF,EAAe,GACfhmF,EAAc,CAAA,C,G,E,Q,S,C,C,C,M,EE+BpB,SAASZ,EAAU1C,CAAW,EACpC,IAAIuC,EAA6B,KAC7BC,EAAyB,KAEvByB,EAAmB,EAAE,CAgCrBC,EAAMC,AA/BG,IAAIC,EAAAA,SAAAA,CAAU,CAC5BC,QAAS,CAAC,EACVC,aAAc,CAMH9N,AAAV+N,QAAU/N,GACT,EAQOA,AAARsJ,MAAQtJ,GACPyN,EAAOpF,IAAI,CAACrI,EACb,EAOaA,AAAbgO,WAAahO,GACZyN,EAAOpF,IAAI,CAACrI,EACb,CACD,CACD,GACmBiO,eAAe,CAACzE,EAAK,YAIxC,GAAIiE,EAAO5C,MAAM,CAChB,MAAM,AAAI7B,MAAM,qBAAqByE,CAAM,CAAC,EAAE,EAG/C,GAAM,CAAA,WAACS,CAAAA,CAAW,CAAGR,EACfzB,EAAkByB,EAAIzB,eAAe,EAAI,KAE/C,IAAK,IAAIkC,EAAI,EAAGC,EAAIF,EAAWrD,MAAM,CAAEsD,AAAIC,EAAJD,EAAOA,IAAK,CAClD,IAAME,EAAYH,CAAU,CAACC,EAAE,CAC/B,GAAIE,IAAcpC,EACjB,MAED,IAAMqC,EAAMD,EAAUjF,QAAQ,GAC1B,mBAAmBmF,IAAI,CAACD,IAC3BvC,CAAAA,EAAcuC,CADf,EAGI,oBAAoBC,IAAI,CAACD,IAC5BtC,CAAAA,EAAUsC,CADX,CAGD,CAEA,GAAI,CAACrC,EACJ,MAAM,AAAIjD,MAAM,yCAGjB,MAAO,CACN+C,YAAAA,EACAC,QAAAA,EACAC,gBAAAA,CACD,CACD,CASO,SAASM,EACfH,CAAU,EAEV,GAAM,CAAA,WAAC8B,CAAAA,CAAW,CAAG9B,EACflC,EAAI,EAAE,CACZ,IAAK,IAAIiE,EAAI,EAAGC,EAAIF,EAAWrD,MAAM,CAAEsD,AAAIC,EAAJD,EAAOA,IAAK,CAClD,IAAME,EAAYH,CAAU,CAACC,EAAE,CAC/B,GAAI,YAAaE,EAAW,CAC3BnE,EAAE7B,IAAI,CAACgG,GACP,QACD,CACA,GAAM,CAAA,UAACI,CAAAA,CAAU,CAAGJ,EACpB,GAAII,GAAa,CAAC,QAAQF,IAAI,CAACE,GAC9B,MAAM,AAAIzF,MAAM,2BAA2BoD,EAAQC,OAAO,CAE5D,CACA,OAAOnC,CACR,CASO,SAASwnF,EAAetlF,CAA2B,EACzD,GAAM,CAAA,WAAC8B,CAAAA,CAAW,CAAG9B,EACjBlC,EAAkB,KACtB,IAAK,IAAIiE,EAAI,EAAGC,EAAIF,EAAWrD,MAAM,CAAEsD,AAAIC,EAAJD,EAAOA,IAAK,CAClD,GAAIA,EACH,MAAM,AAAInF,MAAM,+BAA+BoD,EAAQC,OAAO,EAG/D,IAAMgC,EAAYH,CAAU,CAACC,EAAE,CAC/B,GACC,CAAE,CAAA,YAAaE,CAAAA,GACf,SAAUA,GACV,cAAeA,EAEfnE,EAAImE,OAEJ,MAAM,AAAIrF,MAAM,gCAAgCoD,EAAQC,OAAO,CAEjE,CACA,OAAOnC,CACR,CAQO,SAASonF,EAAiBllF,CAA2B,CAAEC,CAAe,EAE5E,GAAIuC,AADOxC,EAAQC,OAAO,GACfA,EACV,MAAM,AAAIrD,MAAM,uBAAuBqD,EAEzC,CAOO,SAASqmF,EAA6BtmF,CAA2B,EACvE,GAAM,CAAA,WAAC8B,CAAAA,CAAW,CAAG9B,EACrB,GAAI8B,EAAWrD,MAAM,CACpB,MAAM,AAAI7B,MAAM,2BAA2BoD,EAAQC,OAAO,CAE5D,CAQO,SAAS0mF,EAAapqF,CAAgB,EAC5C,IAAMyF,EAAIzF,EAAKkC,MAAM,CACjBX,EAAI,GACR,IAAK,IAAIiE,EAAI,EAAGA,AAAIC,EAAJD,GAAS,CACxB,IAAMzB,EAAI/D,CAAI,CAACwF,IAAI,CACbY,EAAIZ,AAAIC,EAAJD,EAAQxF,CAAI,CAACwF,IAAI,CAAG,KACxBa,EAAIb,AAAIC,EAAJD,EAAQxF,CAAI,CAACwF,IAAI,CAAG,KAExBc,EAAKvC,GAAK,GAAQqC,AAAAA,CAAAA,GAAK,CAAA,GAAM,EAAMC,CAAAA,GAAK,CAAA,EAC9C9E,GAECixF,CAAG,CAAClsF,GAAK,GAAG,CAEZksF,CAAG,CAAElsF,GAAK,GAAMgsF,EAAG,CAEnBE,CAAG,CAACpsF,AAAM,OAANA,EAAa,GAAME,GAAK,EAAKgsF,EAAG,CAEpCE,CAAG,CAACnsF,AAAM,OAANA,EAAa,GAAKC,EAAIgsF,EAAG,AAC/B,CACA,OAAO/wF,CACR,CAQO,SAAS0oF,EAAavjF,CAAc,EAC1C,IAAMjB,EAAIiB,EAAOxE,MAAM,CACjBX,EAAI,EAAE,CACZoF,EAAO,IAAK,IAAI5C,EAAGqC,EAAGC,EAAGO,EAAGC,EAAGC,EAAGtB,EAAI,EAAGA,AAAIC,EAAJD,GAAS,CACjD,OAAS,CAER,GAAI,AAACqB,CAAAA,EAAI4rF,CAAI,CAAC/rF,EAAOM,UAAU,CAACxB,KAAI,AAAJA,GAAU,EAAG,CAC5CzB,EAAI8C,EACJ,KACD,CACA,GAAIrB,GAAKC,EACR,MAAMkB,CAER,CACA,OAAS,CAER,GAAI,AAACE,CAAAA,EAAI4rF,CAAI,CAAC/rF,EAAOM,UAAU,CAACxB,KAAI,AAAJA,GAAU,EAAG,CAC5CY,EAAIS,EACJ,KACD,CACA,GAAIrB,GAAKC,EACR,MAAMkB,CAER,CACA,OAAS,CAER,GAAI,AAACE,CAAAA,EAAI4rF,CAAI,CAAC/rF,EAAOM,UAAU,CAACxB,KAAI,AAAJA,GAAU,EAAG,CAC5Ca,EAAIQ,EACJ,KACD,CACA,GAAIrB,GAAKC,EACR,MAAMkB,CAER,CACA,OAAS,CAER,GAAI,AAACE,CAAAA,EAAI4rF,CAAI,CAAC/rF,EAAOM,UAAU,CAACxB,KAAI,AAAJA,GAAU,EAAG,CAC5CoB,EAAIC,EACJ,KACD,CACA,GAAIrB,GAAKC,EACR,MAAMkB,CAER,CAIA,OAFAG,EAAM/C,AAAAA,CAAAA,EAAIuuF,CAAAA,GAAO,GAAQlsF,AAAAA,CAAAA,EAAIksF,CAAAA,GAAO,GAAO,AAACjsF,CAAAA,EAAIisF,CAAAA,GAAO,EAAM1rF,EAAI0rF,EAEzDjsF,EAAIisF,EAAM1rF,EAAI0rF,EAAK,EAAI,EAAK1rF,EAAI0rF,EAAK,EAAI,GAChD,KAAK,EAEJ/wF,EAAE7B,IAAI,CAAEoH,GAAK,GAAMyrF,EAAKzrF,GAAK,EAAKyrF,EAAIzrF,EAAIyrF,GAC1C,KAED,MAAK,EAEJhxF,EAAE7B,IAAI,CAAEoH,GAAK,GAAMyrF,EAAKzrF,GAAK,EAAKyrF,GAClC,KAED,MAAK,EAEJhxF,EAAE7B,IAAI,CAAEoH,GAAK,GAAMyrF,EAGrB,CACD,CACA,OAAO,IAAIrrF,WAAW3F,EACvB,C,E,E,O,C,Y,I,G,E,E,O,C,0B,I,G,E,E,O,C,iB,I,G,E,E,O,C,mB,I,G,E,E,O,C,+B,I,G,E,E,O,C,e,I,G,E,E,O,C,e,I,G,E,E,SA5RA,IAAM+wF,EAAK,GACLC,EAAK,IACLC,EAAM,oEACNC,EAAO,CACZ,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GACtE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxB,A,G,E,Q,S,C,C,C,E,E,E,O,C,Y,I,E,A,G,E,G,ICVD,E,E,E,QAF4B,CAAA,EAA5B,iBAAA,CACwB,EAAxB,aAAA,CACA,EAAoB,AAApB,EAAA,SAAA,SAAA,A,G,E,Q,S,C,C,C,MCuyDC,EAIA,E,EA5yDG,EACA,EA0FA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAGA,EACA,EAGA,EAKA,EAEA,EA7GJ,SAAS,EAAgB,CAAK,EAC7B,MAAO,AAAU,KAAV,CACR,CAoBA,SAAS,EAAmB,CAAO,CAAE,CAAO,EAI3C,OAHK,EAAQ,cAAc,CAAC,IAC3B,CAAA,CAAO,CAAC,EAAQ,CAAG,CAAA,CADpB,EAGO,CACR,CAOA,SAAS,EAAa,CAAK,SAC1B,AAAK,EAEE,OAAO,IAAI,CAAC,AAzBZ,CAAA,AAwB2B,EAxBnB,AAwBmB,EAxBb,KAAK,CAAC,gBAAgB,MAAM,CAAC,GAAkB,EAAE,AAAF,EAyB5C,MAAM,CAAC,EAAmB,CAAC,IAFhC,EAAE,AAGtB,CAeA,SAAS,EAAK,CAAG,CAAC,CAAI,EACrB,IAAI,IAAI,KAAK,EACR,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,EAAK,IAC7C,CAAA,CAAI,CAAC,EAAE,CAAG,CAAG,CAAC,EAAE,AAAF,CAGjB,CAMA,SAAS,EAAS,CAAK,CAAC,CAAK,EAC5B,IAAI,EAAK,EAAM,SAAS,CACxB,GAAG,CAAE,CAAA,aAAc,CAAA,EAAO,CACzB,SAAS,IAAI,CACb,EAAE,SAAS,CAAG,EAAM,SAAS,CAE7B,EAAK,EADL,EAAI,IAAI,GAER,EAAM,SAAS,CAAG,EAAK,CACxB,CACG,EAAG,WAAW,EAAI,IACD,YAAhB,OAAO,GACT,QAAQ,KAAK,CAAC,iBAAiB,GAEhC,EAAG,WAAW,CAAG,EAEnB,CA2CA,SAAS,EAAa,CAAI,CAAE,CAAO,EAClC,GAAG,aAAmB,MACrB,IAAI,EAAQ,OAEZ,EAAQ,IAAI,CACZ,MAAM,IAAI,CAAC,IAAI,CAAE,CAAgB,CAAC,EAAK,EACvC,IAAI,CAAC,OAAO,CAAG,CAAgB,CAAC,EAAK,CAClC,MAAM,iBAAiB,EAAE,MAAM,iBAAiB,CAAC,IAAI,CAAE,GAI3D,OAFA,EAAM,IAAI,CAAG,EACV,GAAS,CAAA,IAAI,CAAC,OAAO,CAAG,IAAI,CAAC,OAAO,CAAG,KAAO,CAAjD,EACO,CACR,CASA,SAAS,IACT,CA0CA,SAAS,EAAa,CAAI,CAAC,CAAO,EACjC,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,QAAQ,CAAG,EAChB,EAAgB,IAAI,CACrB,CACA,SAAS,EAAgB,CAAI,EAC5B,IAAI,EAAM,EAAK,KAAK,CAAC,IAAI,EAAI,EAAK,KAAK,CAAC,aAAa,CAAC,IAAI,CAC1D,GAAI,EAAK,IAAI,GAAK,EAAK,CACtB,IAAI,EAAK,EAAK,QAAQ,CAAC,EAAK,KAAK,EAEjC,GADA,GAAQ,EAAK,SAAS,EAAG,MAAM,EAC3B,CAAC,EAAK,QAAQ,EAAI,EAAG,MAAM,CAAG,EAAK,QAAQ,CAC9C,IAAK,IAAI,EAAI,EAAG,MAAM,CAAE,KAAK,EAAM,IAC9B,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,EAAM,IAC9C,OAAO,CAAI,CAAC,EAAE,CAIjB,EAAK,EAAG,GACR,EAAK,IAAI,CAAG,CACb,CACD,CAmBA,SAAS,IACT,CAEA,SAAS,EAAe,CAAI,CAAC,CAAI,EAEhC,IADA,IAAI,EAAI,EAAK,MAAM,CACb,KACL,GAAG,CAAI,CAAC,EAAE,GAAK,EAAM,OAAO,CAE9B,CAEA,SAAS,EAAc,CAAE,CAAC,CAAI,CAAC,CAAO,CAAC,CAAO,EAM7C,GALG,EACF,CAAI,CAAC,EAAe,EAAK,GAAS,CAAG,EAErC,CAAI,CAAC,EAAK,MAAM,GAAG,CAAG,EAEpB,EAAG,CACL,EAAQ,YAAY,CAAG,EACvB,IA2VuB,EAAI,EAAG,EA3V1B,EAAM,EAAG,aAAa,CACvB,IACF,GAAW,EAAmB,EAAI,EAAG,GAyVf,EAxVN,EAwVU,EAxVN,EAwVS,EAxVN,EAyVzB,GAAO,EAAI,IAAI,GACN,EAAQ,YAAY,GACnB,EAAU,KAAK,EAExB,CAAA,EAAG,MAAM,CAAC,EAAQ,MAAM,CAAC,EAAQ,SAAS,CAAC,GAAG,CAAG,EAAQ,KAAK,AAAL,EA3V1D,CACD,CACA,SAAS,EAAiB,CAAE,CAAC,CAAI,CAAC,CAAI,EAErC,IAAI,EAAI,EAAe,EAAK,GAC5B,GAAG,GAAG,EAAE,CAEP,IADA,IAAI,EAAY,EAAK,MAAM,CAAC,EACtB,AAAE,EAAF,GACL,CAAI,CAAC,EAAE,CAAG,CAAI,CAAC,EAAE,EAAE,CAGpB,GADA,EAAK,MAAM,CAAG,EACX,EAAG,CACL,IAAI,EAAM,EAAG,aAAa,CACvB,IACF,EAAmB,EAAI,EAAG,GAC1B,EAAK,YAAY,CAAG,KAEtB,CACD,MACC,MAAM,IAAI,EAAa,EAAc,AAAI,MAAM,EAAG,OAAO,CAAC,IAAI,GAEhE,CAgFA,SAAS,IACT,CA8FA,SAAS,IACT,CAgHA,SAAS,EAAY,CAAC,EACrB,MAAO,AAAK,KAAL,GAAY,QACX,AAAK,KAAL,GAAY,QACZ,AAAK,KAAL,GAAY,SACZ,AAAK,KAAL,GAAY,UACZ,KAAK,EAAE,UAAU,GAAG,GAC7B,CAUA,SAAS,EAAW,CAAI,CAAC,CAAQ,EAChC,GAAG,EAAS,GACX,MAAO,CAAA,EAER,GAAG,EAAO,EAAK,UAAU,CACxB,GACC,GAAG,EAAW,EAAK,GAAW,MAAO,CAAA,QACzB,EAAK,EAAK,WAAW,CAAC,AAErC,CAIA,SAAS,IACR,IAAI,CAAC,aAAa,CAAG,IAAI,AAC1B,CAWA,SAAS,EAAmB,CAAG,CAAC,CAAE,CAAC,CAAO,CAAC,CAAM,EAChD,GAAO,EAAI,IAAI,GACN,EAAQ,YAAY,GACnB,EAAU,KAAK,EAExB,OAAO,EAAG,MAAM,CAAC,EAAQ,MAAM,CAAC,EAAQ,SAAS,CAAC,GAAG,AAEvD,CAcA,SAAS,EAAgB,CAAG,CAAE,CAAE,CAAE,CAAQ,EACzC,GAAG,GAAO,EAAI,IAAI,CAAC,CAClB,EAAI,IAAI,GAER,IAAI,EAAK,EAAG,UAAU,CACtB,GAAI,EACH,CAAE,CAAC,EAAG,MAAM,GAAG,CAAG,MACZ,CAGN,IAFA,IAAI,EAAQ,EAAG,UAAU,CACrB,EAAI,EACD,GACN,CAAE,CAAC,IAAI,CAAG,EACV,EAAQ,EAAM,WAAW,AAE1B,CAAA,EAAG,MAAM,CAAG,EACZ,OAAO,CAAE,CAAC,EAAG,MAAM,CAAC,AACrB,CACD,CACD,CAcA,SAAS,EAAc,CAAU,CAAE,CAAK,EACvC,IAAI,EAAW,EAAM,eAAe,CAChC,EAAO,EAAM,WAAW,CAe5B,OAdI,EACH,EAAS,WAAW,CAAG,EAEvB,EAAW,UAAU,CAAG,EAErB,EACH,EAAK,eAAe,CAAG,EAEvB,EAAW,SAAS,CAAG,EAExB,EAAM,UAAU,CAAG,KACnB,EAAM,eAAe,CAAG,KACxB,EAAM,WAAW,CAAG,KACpB,EAAe,EAAW,aAAa,CAAE,GAClC,CACR,CAoCA,SAAS,EAAc,CAAI,EAC1B,OAAO,GAAQ,EAAK,QAAQ,GAAK,EAAK,kBAAkB,AACzD,CAOA,SAAS,EAAc,CAAI,EAC1B,OAAO,GAAQ,EAAK,QAAQ,GAAK,EAAK,YAAY,AACnD,CAMA,SAAS,EAAW,CAAI,EACvB,OAAO,GAAQ,EAAK,QAAQ,GAAK,EAAK,SAAS,AAChD,CAYA,SAAS,EAA2B,CAAG,CAAE,CAAK,EAC7C,IAAI,EAAmB,EAAI,UAAU,EAAI,EAAE,CAC3C,GAAI,EAAK,EAAkB,IAAkB,EAAc,GAC1D,MAAO,CAAA,EAER,IAAI,EAAc,EAAK,EAAkB,GACzC,MAAO,CAAE,CAAA,GAAS,GAAe,EAAiB,OAAO,CAAC,GAAe,EAAiB,OAAO,CAAC,EAAA,CACnG,CAYA,SAAS,EAA6B,CAAG,CAAE,CAAK,MAU3C,EATA,EAAmB,EAAI,UAAU,EAAI,EAAE,OAM3C,CAAI,EAAK,EAJT,SAAuC,CAAI,EAC1C,OAAO,EAAc,IAAS,IAAS,CACxC,KAKI,EAAc,EAAK,EAAkB,GAClC,CAAE,CAAA,GAAS,GAAe,EAAiB,OAAO,CAAC,GAAe,EAAiB,OAAO,CAAC,EAAA,EACnG,CA+GA,SAAS,EAAuC,CAAM,CAAE,CAAI,CAAE,CAAK,EAClE,IAAI,EAAmB,EAAO,UAAU,EAAI,EAAE,CAC1C,EAAiB,EAAK,UAAU,EAAI,EAAE,CAG1C,GAAI,EAAK,QAAQ,GAAK,EAAK,sBAAsB,CAAE,CAClD,IAAI,EAAoB,EAAe,MAAM,CAAC,GAE9C,GAAI,EAAkB,MAAM,CAAG,GAAK,EAAK,EAAgB,GACxD,MAAM,IAAI,EAAa,EAAuB,6CAG/C,GAAI,AAA6B,IAA7B,EAAkB,MAAM,EAAU,CAAC,EAA6B,EAAQ,GAC3E,MAAM,IAAI,EAAa,EAAuB,yDAEhD,CAEA,GAAI,EAAc,IAEb,CAAC,EAA6B,EAAQ,GACzC,MAAM,IAAI,EAAa,EAAuB,wDAIhD,GAAI,EAAc,GAAO,CAMxB,GAAI,EAAK,EALT,SAAuC,CAAI,EAC1C,OAAO,EAAc,IAAS,IAAS,CACxC,GAIC,MAAM,IAAI,EAAa,EAAuB,+BAE/C,IAAI,EAAqB,EAAK,EAAkB,GAEhD,GAAI,GAAS,EAAiB,OAAO,CAAC,GAAsB,EAAiB,OAAO,CAAC,GACpF,MAAM,IAAI,EAAa,EAAuB,iDAEhD,CACD,CAYA,SAAS,GAAc,CAAM,CAAE,CAAI,CAAE,CAAK,CAAE,CAAoB,EAE/D,AArJD,CAAA,SAAwC,CAAM,CAAE,CAAI,CAAE,CAAK,EAE1D,GAAI,CA1GH,CAAA,AA0G2B,GAzG1B,CAAA,AAyG0B,EAzGrB,QAAQ,GAAK,EAAK,aAAa,EAAI,AAyGd,EAzGmB,QAAQ,GAAK,EAAK,sBAAsB,EAAI,AAyG/D,EAzGoE,QAAQ,GAAK,EAAK,YAAY,AAAZ,CAAY,EA0G7H,MAAM,IAAI,EAAa,EAAuB,+BAAiC,EAAO,QAAQ,EAK/F,GAAI,GAAS,EAAM,UAAU,GAAK,EACjC,MAAM,IAAI,EAAa,EAAe,uBAEvC,GAEC,CAzGA,CAAA,AAyGuB,GAxGtB,CAAA,EAwGsB,IAvGtB,EAuGsB,IAtGtB,EAsGsB,IArGtB,AAqGsB,EArGjB,QAAQ,GAAK,EAAK,sBAAsB,EAC7C,AAoGsB,EApGjB,QAAQ,GAAK,EAAK,YAAY,EACnC,AAmGsB,EAnGjB,QAAQ,GAAK,EAAK,2BAA0B,AAA1B,CAA0B,GAwGjD,EAAc,IAAS,EAAO,QAAQ,GAAK,EAAK,aAAa,CAE9D,MAAM,IAAI,EACT,EACA,wBAA0B,EAAK,QAAQ,CAAG,yBAA2B,EAAO,QAAQ,CAGvF,CAAA,EA4HgC,EAAQ,EAAM,GAIzC,EAAO,QAAQ,GAAK,EAAK,aAAa,EACzC,AAAC,CAAA,GAlHH,SAA8C,CAAM,CAAE,CAAI,CAAE,CAAK,EAChE,IAAI,EAAmB,EAAO,UAAU,EAAI,EAAE,CAC1C,EAAiB,EAAK,UAAU,EAAI,EAAE,CAG1C,GAAI,EAAK,QAAQ,GAAK,EAAK,sBAAsB,CAAE,CAClD,IAAI,EAAoB,EAAe,MAAM,CAAC,GAE9C,GAAI,EAAkB,MAAM,CAAG,GAAK,EAAK,EAAgB,GACxD,MAAM,IAAI,EAAa,EAAuB,6CAI/C,GAAI,AAA6B,IAA7B,EAAkB,MAAM,EAAU,CAAC,EAA2B,EAAQ,GACzE,MAAM,IAAI,EAAa,EAAuB,yDAEhD,CAEA,GAAI,EAAc,IAGb,CAAC,EAA2B,EAAQ,GACvC,MAAM,IAAI,EAAa,EAAuB,wDAIhD,GAAI,EAAc,GAAO,CAExB,GAAI,EAAK,EAAkB,GAC1B,MAAM,IAAI,EAAa,EAAuB,+BAE/C,IAAI,EAAqB,EAAK,EAAkB,GAEhD,GAAI,GAAS,EAAiB,OAAO,CAAC,GAAsB,EAAiB,OAAO,CAAC,GACpF,MAAM,IAAI,EAAa,EAAuB,kDAG/C,GAAI,CAAC,GAAS,EACb,MAAM,IAAI,EAAa,EAAuB,uDAEhD,CACD,CAyE2B,EAAsC,EAAQ,EAAM,GAG9E,IAAI,EAAK,EAAK,UAAU,CAIxB,GAHG,GACF,EAAG,WAAW,CAAC,GAEb,EAAK,QAAQ,GAAK,EAAuB,CAC3C,IAAI,EAAW,EAAK,UAAU,CAC9B,GAAI,AAAY,MAAZ,EACH,OAAO,EAER,IAAI,EAAU,EAAK,SAAS,AAC7B,MACC,EAAW,EAAU,EAEtB,IAAI,EAAM,EAAQ,EAAM,eAAe,CAAG,EAAO,SAAS,AAE1D,CAAA,EAAS,eAAe,CAAG,EAC3B,EAAQ,WAAW,CAAG,EAGnB,EACF,EAAI,WAAW,CAAG,EAElB,EAAO,UAAU,CAAG,EAElB,AAAS,MAAT,EACF,EAAO,SAAS,CAAG,EAEnB,EAAM,eAAe,CAAG,EAEzB,GACC,EAAS,UAAU,CAAG,QAChB,IAAa,GAAY,CAAA,EAAU,EAAS,WAAU,AAAV,EAAa,AAMhE,OALA,EAAe,EAAO,aAAa,EAAE,EAAQ,GAEzC,EAAK,QAAQ,EAAI,GACpB,CAAA,EAAK,UAAU,CAAG,EAAK,SAAS,CAAG,IADpC,EAGO,CACR,CAiPA,SAAS,KACR,IAAI,CAAC,MAAM,CAAG,CAAC,CAChB,CA4FA,SAAS,KACT,CAKA,SAAS,KACT,CA8BA,SAAS,KACT,CAkBA,SAAS,KACT,CAOA,SAAS,KACT,CAQA,SAAS,KACT,CAIA,SAAS,KACT,CAIA,SAAS,KACT,CAIA,SAAS,KACT,CAIA,SAAS,KACT,CAMA,SAAS,KACT,CAGA,SAAS,KAAgB,CAKzB,SAAS,GAAsB,CAAM,CAAC,CAAU,EAC/C,IAAI,EAAM,EAAE,CACR,EAAU,AAAiB,GAAjB,IAAI,CAAC,QAAQ,EAAS,IAAI,CAAC,eAAe,EAAI,IAAI,CAC5D,EAAS,EAAQ,MAAM,CACvB,EAAM,EAAQ,YAAY,CAE9B,GAAG,GAAO,AAAU,MAAV,EAAe,CAExB,IAAI,EAAS,EAAQ,YAAY,CAAC,GAClC,GAAG,AAAU,MAAV,EAEF,IAAI,EAAkB,CACtB,CAAC,UAAU,EAAI,OAAO,IAAI,EAEzB,AAEH,CAGA,OAFA,GAAkB,IAAI,CAAC,EAAI,EAAO,EAAW,GAEtC,EAAI,IAAI,CAAC,GACjB,CAEA,SAAS,GAAoB,CAAI,CAAE,CAAM,CAAE,CAAiB,EAC3D,IAAI,EAAS,EAAK,MAAM,EAAI,GACxB,EAAM,EAAK,YAAY,CAQ3B,GAAI,CAAC,GAGD,AAAW,QAAX,GAAoB,IAAQ,EAAU,GAAG,EAAI,IAAQ,EAAU,KAAK,CAFvE,MAAO,CAAA,EAOR,IADA,IAAI,EAAI,EAAkB,MAAM,CACzB,KAAK,CACX,IAAI,EAAK,CAAiB,CAAC,EAAE,CAE7B,GAAI,EAAG,MAAM,GAAK,EACjB,OAAO,EAAG,SAAS,GAAK,CAE1B,CACA,MAAO,CAAA,CACR,CAcA,SAAS,GAAuB,CAAG,CAAE,CAAa,CAAE,CAAK,EACxD,EAAI,IAAI,CAAC,IAAK,EAAe,KAAM,EAAM,OAAO,CAAC,gBAAiB,GAAc,IACjF,CAEA,SAAS,GAAkB,CAAI,CAAC,CAAG,CAAC,CAAM,CAAC,CAAU,CAAC,CAAiB,EAKtE,GAJK,GACJ,CAAA,EAAoB,EAAE,AAAF,EAGlB,EAAW,CAEb,IADA,CAAA,EAAO,EAAW,EAAlB,EAOC,OALA,GAAG,AAAe,UAAf,OAAO,EAAiB,CAC1B,EAAI,IAAI,CAAC,GACT,MACD,CAKF,CAEA,OAAO,EAAK,QAAQ,EACpB,KAAK,EACJ,IASK,EATD,EAAQ,EAAK,UAAU,CACvB,EAAM,EAAM,MAAM,CAClB,EAAQ,EAAK,UAAU,CACvB,EAAW,EAAK,OAAO,CAE3B,EAAS,EAAU,MAAM,CAAC,EAAK,YAAY,GAAK,EAEhD,IAAI,EAAmB,EACvB,GAAI,CAAC,GAAU,CAAC,EAAK,MAAM,EAAI,EAAK,YAAY,CAAE,CAGjD,IAAK,IAAI,EAAK,EAAG,EAAK,EAAM,MAAM,CAAE,IACnC,GAAI,AAAwB,UAAxB,EAAM,IAAI,CAAC,GAAI,IAAI,CAAc,CACpC,EAAY,EAAM,IAAI,CAAC,GAAI,KAAK,CAChC,KACD,CAED,GAAI,CAAC,EAEJ,IAAK,IAAI,EAAM,EAAkB,MAAM,CAAG,EAAG,GAAO,EAAG,IAAO,CAC7D,IAAI,EAAY,CAAiB,CAAC,EAAI,CACtC,GAAI,AAAqB,KAArB,EAAU,MAAM,EAAW,EAAU,SAAS,GAAK,EAAK,YAAY,CAAE,CACzE,EAAY,EAAU,SAAS,CAC/B,KACD,CACD,CAED,GAAI,IAAc,EAAK,YAAY,CAClC,IAAK,IAAI,EAAM,EAAkB,MAAM,CAAG,EAAG,GAAO,EAAG,IAAO,CAC7D,IAAI,EAAY,CAAiB,CAAC,EAAI,CACtC,GAAI,EAAU,SAAS,GAAK,EAAK,YAAY,CAAE,CAC1C,EAAU,MAAM,EACnB,CAAA,EAAmB,EAAU,MAAM,CAAG,IAAM,CAD7C,EAGA,KACD,CACD,CAEF,CAEA,EAAI,IAAI,CAAC,IAAK,GAEd,IAAI,IAAI,EAAE,EAAE,AAAE,EAAF,EAAM,IAAI,CAErB,IAAI,EAAO,EAAM,IAAI,CAAC,EAClB,AAAe,CAAA,SAAf,EAAK,MAAM,CACd,EAAkB,IAAI,CAAC,CAAE,OAAQ,EAAK,SAAS,CAAE,UAAW,EAAK,KAAK,AAAC,GAC9C,SAAjB,EAAK,QAAQ,EACrB,EAAkB,IAAI,CAAC,CAAE,OAAQ,GAAI,UAAW,EAAK,KAAK,AAAC,EAE7D,CAEA,IAAI,IAAI,EAAE,EAAE,AAAE,EAAF,EAAM,IAAI,CACrB,IAAI,EAAO,EAAM,IAAI,CAAC,GACtB,GAAI,GAAoB,EAAK,EAAQ,GAAoB,CACxD,IAAI,EAAS,EAAK,MAAM,EAAE,GACtB,EAAM,EAAK,YAAY,CAC3B,GAAuB,EAAK,EAAS,SAAW,EAAS,QAAS,GAClE,EAAkB,IAAI,CAAC,CAAE,OAAQ,EAAQ,UAAU,CAAI,EACxD,CACA,GAAkB,EAAK,EAAI,EAAO,EAAW,EAC9C,CAGA,GAAI,IAAa,GAAoB,GAAoB,EAAM,EAAQ,GAAoB,CAC1F,IAAI,EAAS,EAAK,MAAM,EAAE,GACtB,EAAM,EAAK,YAAY,CAC3B,GAAuB,EAAK,EAAS,SAAW,EAAS,QAAS,GAClE,EAAkB,IAAI,CAAC,CAAE,OAAQ,EAAQ,UAAU,CAAI,EACxD,CAEA,GAAG,GAAS,GAAU,CAAC,mCAAmC,IAAI,CAAC,GAAU,CAGxE,GAFA,EAAI,IAAI,CAAC,KAEN,GAAU,YAAY,IAAI,CAAC,GAC7B,KAAM,GACF,EAAM,IAAI,CACZ,EAAI,IAAI,CAAC,EAAM,IAAI,EAEnB,GAAkB,EAAO,EAAK,EAAQ,EAAY,EAAkB,KAAK,IAE1E,EAAQ,EAAM,WAAW,MAI1B,KAAM,GACL,GAAkB,EAAO,EAAK,EAAQ,EAAY,EAAkB,KAAK,IACzE,EAAQ,EAAM,WAAW,CAG3B,EAAI,IAAI,CAAC,KAAK,EAAiB,IAChC,MACC,EAAI,IAAI,CAAC,MAIV,MACD,MAAK,EACL,KAAK,EAEJ,IADA,IAAI,EAAQ,EAAK,UAAU,CACrB,GACL,GAAkB,EAAO,EAAK,EAAQ,EAAY,EAAkB,KAAK,IACzE,EAAQ,EAAM,WAAW,CAE1B,MACD,MAAK,EACJ,OAAO,GAAuB,EAAK,EAAK,IAAI,CAAE,EAAK,KAAK,CACzD,MAAK,EAiBJ,OAAO,EAAI,IAAI,CAAC,EAAK,IAAI,CACvB,OAAO,CAAC,SAAS,GAEpB,MAAK,EACJ,OAAO,EAAI,IAAI,CAAE,YAAY,EAAK,IAAI,CAAC,MACxC,MAAK,EACJ,OAAO,EAAI,IAAI,CAAE,OAAO,EAAK,IAAI,CAAC,MACnC,MAAK,EACJ,IAAI,EAAQ,EAAK,QAAQ,CACrB,EAAQ,EAAK,QAAQ,CAEzB,GADA,EAAI,IAAI,CAAC,aAAa,EAAK,IAAI,EAC5B,EACF,EAAI,IAAI,CAAC,WAAY,GACjB,GAAS,AAAO,KAAP,GACZ,EAAI,IAAI,CAAC,IAAK,GAEf,EAAI,IAAI,CAAC,UACJ,GAAG,GAAS,AAAO,KAAP,EACjB,EAAI,IAAI,CAAC,WAAY,EAAO,SACxB,CACJ,IAAI,EAAM,EAAK,cAAc,CAC1B,GACF,EAAI,IAAI,CAAC,KAAK,EAAI,KAEnB,EAAI,IAAI,CAAC,IACV,CACA,MACD,MAAK,EACJ,OAAO,EAAI,IAAI,CAAE,KAAK,EAAK,MAAM,CAAC,IAAI,EAAK,IAAI,CAAC,KACjD,MAAK,EACJ,OAAO,EAAI,IAAI,CAAE,IAAI,EAAK,QAAQ,CAAC,IAGpC,SACC,EAAI,IAAI,CAAC,KAAK,EAAK,QAAQ,CAC5B,CACD,CAwFA,SAAS,GAAQ,CAAM,CAAC,CAAG,CAAC,CAAK,EAChC,CAAM,CAAC,EAAI,CAAG,CACf,C,E,E,O,C,oB,I,E,A,G,E,G,E,E,O,C,gB,I,E,A,G,E,GAvuDI,EAAO,A,C,E,E,Q,EAAX,IAAA,CACI,EAAY,EAAhB,SAAA,CA2FI,EAA8B,AAD9B,CAAA,EAAW,CAAC,CAAA,EAC2B,YAAY,CAAkB,EACrE,EAA8B,EAAS,cAAc,CAAgB,EACrE,EAA8B,EAAS,SAAS,CAAqB,EACrE,EAA8B,EAAS,kBAAkB,CAAY,EACrE,EAA8B,EAAS,qBAAqB,CAAS,EACrE,EAA8B,EAAS,WAAW,CAAmB,EACrE,EAA8B,EAAS,2BAA2B,CAAG,EACrE,EAA8B,EAAS,YAAY,CAAkB,EACrE,EAA8B,EAAS,aAAa,CAAiB,EACrE,EAA8B,EAAS,kBAAkB,CAAY,GACrE,EAA8B,EAAS,sBAAsB,CAAQ,GACrE,EAA8B,EAAS,aAAa,CAAiB,GAIrE,EAAmB,CAAC,EACU,AAF9B,CAAA,EAAgB,CAAC,CAAA,EAE2B,cAAc,CAAkB,CAAA,CAAgB,CAAC,EAAE,CAAC,mBAAoB,CAAA,EACtF,EAAc,kBAAkB,CAAc,CAAA,CAAgB,CAAC,EAAE,CAAC,uBAAwB,CAAA,EACxH,EAA8B,EAAc,qBAAqB,CAAW,CAAA,CAAgB,CAAC,EAAE,CAAC,0BAA2B,CAAA,EAC7F,EAAc,kBAAkB,CAAc,CAAA,CAAgB,CAAC,EAAE,CAAC,iBAAkB,CAAA,EACpF,EAAc,qBAAqB,CAAW,CAAA,CAAgB,CAAC,EAAE,CAAC,oBAAqB,CAAA,EACvF,EAAc,mBAAmB,CAAa,CAAA,CAAgB,CAAC,EAAE,CAAC,kBAAmB,CAAA,EACrF,EAAc,2BAA2B,CAAK,CAAA,CAAgB,CAAC,EAAE,CAAC,0BAA2B,CAAA,EAC3H,EAA8B,EAAc,aAAa,CAAmB,CAAA,CAAgB,CAAC,EAAE,CAAC,YAAa,CAAA,EAC/E,EAAc,iBAAiB,CAAe,CAAA,CAAgB,CAAC,EAAE,CAAC,gBAAiB,CAAA,EACjH,EAA8B,EAAc,mBAAmB,CAAa,CAAA,CAAgB,CAAC,GAAG,CAAC,mBAAoB,EAAA,EAEzF,EAAc,iBAAiB,CAAa,CAAA,CAAgB,CAAC,GAAG,CAAC,gBAAiB,EAAA,EAClF,EAAc,UAAU,CAAoB,CAAA,CAAgB,CAAC,GAAG,CAAC,eAAgB,EAAA,EACjF,EAAc,wBAAwB,CAAM,CAAA,CAAgB,CAAC,GAAG,CAAC,uBAAwB,EAAA,EACzF,EAAc,aAAa,CAAgB,CAAA,CAAgB,CAAC,GAAG,CAAC,oBAAqB,EAAA,EACrF,EAAc,kBAAkB,CAAW,CAAA,CAAgB,CAAC,GAAG,CAAC,iBAAkB,EAAA,EAqBlH,EAAa,SAAS,CAAG,MAAM,SAAS,CACxC,EAAK,EAAc,GASnB,EAAS,SAAS,CAAG,CAKpB,OAAO,EASP,KAAM,SAAS,CAAK,EACnB,OAAO,GAAS,GAAK,EAAQ,IAAI,CAAC,MAAM,CAAG,IAAI,CAAC,EAAM,CAAG,IAC1D,EACA,SAAS,SAAS,CAAM,CAAC,CAAU,EAClC,IAAI,IAAI,EAAM,EAAE,CAAE,EAAI,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,IACrC,GAAkB,IAAI,CAAC,EAAE,CAAC,EAAI,EAAO,GAEtC,OAAO,EAAI,IAAI,CAAC,GACjB,EAMA,OAAQ,SAAU,CAAS,EAC1B,OAAO,MAAM,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAE,EAC1C,EAMA,QAAS,SAAU,CAAI,EACtB,OAAO,MAAM,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAE,EAC3C,CACD,EAuBA,EAAa,SAAS,CAAC,IAAI,CAAG,SAAS,CAAC,EAEvC,OADA,EAAgB,IAAI,EACb,IAAI,CAAC,EAAE,EAAI,IACnB,EAEA,EAAS,EAAa,GA0DtB,EAAa,SAAS,CAAG,CACxB,OAAO,EACP,KAAK,EAAS,SAAS,CAAC,IAAI,CAC5B,aAAc,SAAS,CAAG,EAMzB,IADA,IAAI,EAAI,IAAI,CAAC,MAAM,CACb,KAAI,CACT,IAAI,EAAO,IAAI,CAAC,EAAE,CAElB,GAAG,EAAK,QAAQ,EAAI,EACnB,OAAO,CAET,CACD,EACA,aAAc,SAAS,CAAI,EAC1B,IAAI,EAAK,EAAK,YAAY,CAC1B,GAAG,GAAM,GAAI,IAAI,CAAC,aAAa,CAC9B,MAAM,IAAI,EAAa,GAExB,IAAI,EAAU,IAAI,CAAC,YAAY,CAAC,EAAK,QAAQ,EAE7C,OADA,EAAc,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAK,GACpC,CACR,EAEA,eAAgB,SAAS,CAAI,EAC5B,IAA4B,EAAxB,EAAK,EAAK,YAAY,CAC1B,GAAG,GAAM,GAAI,IAAI,CAAC,aAAa,CAC9B,MAAM,IAAI,EAAa,GAIxB,OAFA,EAAU,IAAI,CAAC,cAAc,CAAC,EAAK,YAAY,CAAC,EAAK,SAAS,EAC9D,EAAc,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAK,GACpC,CACR,EAGA,gBAAiB,SAAS,CAAG,EAC5B,IAAI,EAAO,IAAI,CAAC,YAAY,CAAC,GAE7B,OADA,EAAiB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAClC,CAGR,EAGA,kBAAkB,SAAS,CAAY,CAAC,CAAS,EAChD,IAAI,EAAO,IAAI,CAAC,cAAc,CAAC,EAAa,GAE5C,OADA,EAAiB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAClC,CACR,EACA,eAAgB,SAAS,CAAY,CAAE,CAAS,EAE/C,IADA,IAAI,EAAI,IAAI,CAAC,MAAM,CACb,KAAI,CACT,IAAI,EAAO,IAAI,CAAC,EAAE,CAClB,GAAG,EAAK,SAAS,EAAI,GAAa,EAAK,YAAY,EAAI,EACtD,OAAO,CAET,CACA,OAAO,IACR,CACD,EAoBA,EAAkB,SAAS,CAAG,CAgB7B,WAAY,SAAS,CAAO,CAAE,CAAO,EACnC,MAAO,CAAA,CACT,EAuBA,eAAgB,SAAS,CAAY,CAAG,CAAa,CAAE,CAAO,EAC7D,IAAI,EAAM,IAAI,EAOd,GANA,EAAI,cAAc,CAAG,IAAI,CACzB,EAAI,UAAU,CAAG,IAAI,EACrB,EAAI,OAAO,CAAG,GAAW,KACrB,GACH,EAAI,WAAW,CAAC,GAEb,EAAc,CACjB,IAAI,EAAO,EAAI,eAAe,CAAC,EAAc,GAC7C,EAAI,WAAW,CAAC,EACjB,CACA,OAAO,CACR,EAsBA,mBAAoB,SAAS,CAAa,CAAE,CAAQ,CAAE,CAAQ,EAC7D,IAAI,EAAO,IAAI,GAMf,OALA,EAAK,IAAI,CAAG,EACZ,EAAK,QAAQ,CAAG,EAChB,EAAK,QAAQ,CAAG,GAAY,GAC5B,EAAK,QAAQ,CAAG,GAAY,GAErB,CACR,CACD,EAUA,EAAK,SAAS,CAAG,CAChB,WAAa,KACb,UAAY,KACZ,gBAAkB,KAClB,YAAc,KACd,WAAa,KACb,WAAa,KACb,WAAa,KACb,cAAgB,KAChB,UAAY,KACZ,aAAe,KACf,OAAS,KACT,UAAY,KAEZ,aAAa,SAAS,CAAQ,CAAE,CAAQ,EACvC,OAAO,GAAc,IAAI,CAAC,EAAS,EACpC,EACA,aAAa,SAAS,CAAQ,CAAE,CAAQ,EACvC,GAAc,IAAI,CAAE,EAAS,EAAU,GACpC,GACF,IAAI,CAAC,WAAW,CAAC,EAEnB,EACA,YAAY,SAAS,CAAQ,EAC5B,OAAO,EAAa,IAAI,CAAC,EAC1B,EACA,YAAY,SAAS,CAAQ,EAC5B,OAAO,IAAI,CAAC,YAAY,CAAC,EAAS,KACnC,EACA,cAAc,WACb,OAAO,AAAmB,MAAnB,IAAI,CAAC,UAAU,AACvB,EACA,UAAU,SAAS,CAAI,EACtB,OAAO,AAqtCT,SAAS,EAAU,CAAG,CAAC,CAAI,CAAC,CAAI,EAC/B,IAAI,EAAQ,IAAI,EAAK,WAAW,CAChC,IAAK,IAAI,KAAK,EACb,GAAI,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,EAAM,GAAI,CAClD,IAAI,EAAI,CAAI,CAAC,EAAE,AACC,CAAA,UAAZ,OAAO,GACN,GAAK,CAAK,CAAC,EAAE,EAChB,CAAA,CAAK,CAAC,EAAE,CAAG,CAAA,CAGd,CAMD,OAJG,EAAK,UAAU,EACjB,CAAA,EAAM,UAAU,CAAG,IAAI,CADxB,EAGA,EAAM,aAAa,CAAG,EACd,EAAM,QAAQ,EACtB,KAAK,EACJ,IAAI,EAAQ,EAAK,UAAU,CACvB,EAAS,EAAM,UAAU,CAAG,IAAI,EAChC,EAAM,EAAM,MAAM,AACtB,CAAA,EAAO,aAAa,CAAG,EACvB,IAAI,IAAI,EAAE,EAAE,AAAE,EAAF,EAAM,IACjB,EAAM,gBAAgB,CAAC,EAAU,EAAI,EAAM,IAAI,CAAC,GAAG,CAAA,IAEpD,KACD,MAAK,EACJ,EAAO,CAAA,CACR,CACA,GAAG,EAEF,IADA,IAAI,EAAQ,EAAK,UAAU,CACrB,GACL,EAAM,WAAW,CAAC,EAAU,EAAI,EAAM,IACtC,EAAQ,EAAM,WAAW,CAG3B,OAAO,CACR,EA1vCmB,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,EAChD,EAEA,UAAU,WAET,IADA,IAAI,EAAQ,IAAI,CAAC,UAAU,CACrB,GAAM,CACX,IAAI,EAAO,EAAM,WAAW,AACzB,CAAA,GAAQ,EAAK,QAAQ,EAAI,GAAa,EAAM,QAAQ,EAAI,GAC1D,IAAI,CAAC,WAAW,CAAC,GACjB,EAAM,UAAU,CAAC,EAAK,IAAI,IAE1B,EAAM,SAAS,GACf,EAAQ,EAEV,CACD,EAEA,YAAY,SAAS,CAAO,CAAE,CAAO,EACpC,OAAO,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,UAAU,CAAC,EAAQ,EAC7D,EAEG,cAAc,WACb,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAC/B,EAeA,aAAa,SAAS,CAAY,EAEjC,IADA,IAAI,EAAK,IAAI,CACP,GAAG,CACR,IAAI,EAAM,EAAG,MAAM,CAEnB,GAAG,EACF,CAAA,IAAI,IAAI,KAAK,EACd,GAAI,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,EAAK,IAAM,CAAG,CAAC,EAAE,GAAK,EAC9D,OAAO,CAEP,CAED,EAAK,EAAG,QAAQ,EAAI,EAAe,EAAG,aAAa,CAAG,EAAG,UAAU,AACpE,CACA,OAAO,IACR,EAEA,mBAAmB,SAAS,CAAM,EAEjC,IADA,IAAI,EAAK,IAAI,CACP,GAAG,CACR,IAAI,EAAM,EAAG,MAAM,CAEnB,GAAG,GACC,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,EAAK,GAC5C,OAAO,CAAG,CAAC,EAAO,CAGpB,EAAK,EAAG,QAAQ,EAAI,EAAe,EAAG,aAAa,CAAG,EAAG,UAAU,AACpE,CACA,OAAO,IACR,EAEA,mBAAmB,SAAS,CAAY,EAEvC,OAAO,AAAU,MADJ,IAAI,CAAC,YAAY,CAAC,EAEhC,CACJ,EAYA,EAAK,EAAS,GACd,EAAK,EAAS,EAAK,SAAS,EAyb5B,EAAS,SAAS,CAAG,CAEpB,SAAY,YACZ,SAAY,EAOZ,QAAW,KACX,gBAAmB,KACnB,KAAO,EAEP,aAAgB,SAAS,CAAQ,CAAE,CAAQ,EAC1C,GAAG,EAAS,QAAQ,EAAI,EAAuB,CAE9C,IADA,IAAI,EAAQ,EAAS,UAAU,CACzB,GAAM,CACX,IAAI,EAAO,EAAM,WAAW,CAC5B,IAAI,CAAC,YAAY,CAAC,EAAM,GACxB,EAAQ,CACT,CACA,OAAO,CACR,CAOA,OANA,GAAc,IAAI,CAAE,EAAU,GAC9B,EAAS,aAAa,CAAG,IAAI,CACA,OAAzB,IAAI,CAAC,eAAe,EAAa,EAAS,QAAQ,GAAK,GAC1D,CAAA,IAAI,CAAC,eAAe,CAAG,CADxB,EAIO,CACR,EACA,YAAe,SAAS,CAAQ,EAI/B,OAHG,IAAI,CAAC,eAAe,EAAI,GAC1B,CAAA,IAAI,CAAC,eAAe,CAAG,IADxB,EAGO,EAAa,IAAI,CAAC,EAC1B,EACA,aAAc,SAAU,CAAQ,CAAE,CAAQ,EAEzC,GAAc,IAAI,CAAE,EAAU,EAAU,GACxC,EAAS,aAAa,CAAG,IAAI,CACzB,GACH,IAAI,CAAC,WAAW,CAAC,GAEd,EAAc,IACjB,CAAA,IAAI,CAAC,eAAe,CAAG,CADxB,CAGD,EAEA,WAAa,SAAS,CAAY,CAAC,CAAI,EACtC,OAAO,AAkmBT,SAAS,EAAW,CAAG,CAAC,CAAI,CAAC,CAAI,EAChC,IAAI,EACJ,OAAQ,EAAK,QAAQ,EACrB,KAAK,EAEJ,AADA,CAAA,EAAQ,EAAK,SAAS,CAAC,CAAA,EAAvB,EACM,aAAa,CAAG,CAMvB,MAAK,EACJ,KACD,MAAK,EACJ,EAAO,CAAA,CAgBR,CAMA,GALI,GACH,CAAA,EAAQ,EAAK,SAAS,CAAC,CAAA,EAAA,EAExB,EAAM,aAAa,CAAG,EACtB,EAAM,UAAU,CAAG,KAChB,EAEF,IADA,IAAI,EAAQ,EAAK,UAAU,CACrB,GACL,EAAM,WAAW,CAAC,EAAW,EAAI,EAAM,IACvC,EAAQ,EAAM,WAAW,CAG3B,OAAO,CACR,EA9oBoB,IAAI,CAAC,EAAa,EACrC,EAEA,eAAiB,SAAS,CAAE,EAC3B,IAAI,EAAM,KASV,OARA,EAAW,IAAI,CAAC,eAAe,CAAC,SAAS,CAAI,EAC5C,GAAG,EAAK,QAAQ,EAAI,GAChB,EAAK,YAAY,CAAC,OAAS,EAE7B,OADA,EAAM,EACC,CAAA,CAGV,GACO,CACR,EAmBA,uBAAwB,SAAS,CAAU,EAC1C,IAAI,EAAgB,EAAa,GACjC,OAAO,IAAI,EAAa,IAAI,CAAE,SAAS,CAAI,EAC1C,IAAI,EAAK,EAAE,CAoBX,OAnBI,EAAc,MAAM,CAAG,GAC1B,EAAW,EAAK,eAAe,CAAE,SAAS,CAAI,EAC7C,GAAG,IAAS,GAAQ,EAAK,QAAQ,GAAK,EAAc,CACnD,IAAI,EAAiB,EAAK,YAAY,CAAC,SAEvC,GAAI,EAAgB,CAEnB,IAAI,EAAU,IAAe,EAC7B,GAAI,CAAC,EAAS,CACb,IAAI,EAAoB,EAAa,GACrC,EAAU,EAAc,KAAK,UAniCpB,CAAO,EACtB,OAAO,AAkiC2C,GAliCnC,AAA0B,KAA1B,AAkiCmC,EAliC9B,OAAO,CAAC,EAC7B,EAkiCM,CACG,GACF,EAAG,IAAI,CAAC,EAEV,CACD,CACD,GAEM,CACR,EACD,EAGA,cAAgB,SAAS,CAAO,EAC/B,IAAI,EAAO,IAAI,GAQf,OAPA,EAAK,aAAa,CAAG,IAAI,CACzB,EAAK,QAAQ,CAAG,EAChB,EAAK,OAAO,CAAG,EACf,EAAK,SAAS,CAAG,EACjB,EAAK,UAAU,CAAG,IAAI,EAEtB,AADY,CAAA,EAAK,UAAU,CAAG,IAAI,CAAlC,EACM,aAAa,CAAG,EACf,CACR,EACA,uBAAyB,WACxB,IAAI,EAAO,IAAI,GAGf,OAFA,EAAK,aAAa,CAAG,IAAI,CACzB,EAAK,UAAU,CAAG,IAAI,EACf,CACR,EACA,eAAiB,SAAS,CAAI,EAC7B,IAAI,EAAO,IAAI,GAGf,OAFA,EAAK,aAAa,CAAG,IAAI,CACzB,EAAK,UAAU,CAAC,GACT,CACR,EACA,cAAgB,SAAS,CAAI,EAC5B,IAAI,EAAO,IAAI,GAGf,OAFA,EAAK,aAAa,CAAG,IAAI,CACzB,EAAK,UAAU,CAAC,GACT,CACR,EACA,mBAAqB,SAAS,CAAI,EACjC,IAAI,EAAO,IAAI,GAGf,OAFA,EAAK,aAAa,CAAG,IAAI,CACzB,EAAK,UAAU,CAAC,GACT,CACR,EACA,4BAA8B,SAAS,CAAM,CAAC,CAAI,EACjD,IAAI,EAAO,IAAI,GAIf,OAHA,EAAK,aAAa,CAAG,IAAI,CACzB,EAAK,OAAO,CAAG,EAAK,QAAQ,CAAG,EAAK,MAAM,CAAG,EAC7C,EAAK,SAAS,CAAG,EAAK,IAAI,CAAG,EACtB,CACR,EACA,gBAAkB,SAAS,CAAI,EAC9B,IAAI,EAAO,IAAI,GAMf,OALA,EAAK,aAAa,CAAG,IAAI,CACzB,EAAK,IAAI,CAAG,EACZ,EAAK,QAAQ,CAAG,EAChB,EAAK,SAAS,CAAG,EACjB,EAAK,SAAS,CAAG,CAAA,EACV,CACR,EACA,sBAAwB,SAAS,CAAI,EACpC,IAAI,EAAO,IAAI,GAGf,OAFA,EAAK,aAAa,CAAG,IAAI,CACzB,EAAK,QAAQ,CAAG,EACT,CACR,EAEA,gBAAkB,SAAS,CAAY,CAAC,CAAa,EACpD,IAAI,EAAO,IAAI,GACX,EAAK,EAAc,KAAK,CAAC,KACzB,EAAQ,EAAK,UAAU,CAAG,IAAI,EAclC,OAbA,EAAK,UAAU,CAAG,IAAI,EACtB,EAAK,aAAa,CAAG,IAAI,CACzB,EAAK,QAAQ,CAAG,EAChB,EAAK,OAAO,CAAG,EACf,EAAK,YAAY,CAAG,EACjB,AAAa,GAAb,EAAG,MAAM,EACX,EAAK,MAAM,CAAG,CAAE,CAAC,EAAE,CACnB,EAAK,SAAS,CAAG,CAAE,CAAC,EAAE,EAGtB,EAAK,SAAS,CAAG,EAElB,EAAM,aAAa,CAAG,EACf,CACR,EAEA,kBAAoB,SAAS,CAAY,CAAC,CAAa,EACtD,IAAI,EAAO,IAAI,GACX,EAAK,EAAc,KAAK,CAAC,KAa7B,OAZA,EAAK,aAAa,CAAG,IAAI,CACzB,EAAK,QAAQ,CAAG,EAChB,EAAK,IAAI,CAAG,EACZ,EAAK,YAAY,CAAG,EACpB,EAAK,SAAS,CAAG,CAAA,EACd,AAAa,GAAb,EAAG,MAAM,EACX,EAAK,MAAM,CAAG,CAAE,CAAC,EAAE,CACnB,EAAK,SAAS,CAAG,CAAE,CAAC,EAAE,EAGtB,EAAK,SAAS,CAAG,EAEX,CACR,CACD,EACA,EAAS,EAAS,GAMlB,GAAQ,SAAS,CAAG,CACnB,SAAW,EACX,aAAe,SAAS,CAAI,EAC3B,OAAO,AAA6B,MAA7B,IAAI,CAAC,gBAAgB,CAAC,EAC9B,EACA,aAAe,SAAS,CAAI,EAC3B,IAAI,EAAO,IAAI,CAAC,gBAAgB,CAAC,GACjC,OAAO,GAAQ,EAAK,KAAK,EAAI,EAC9B,EACA,iBAAmB,SAAS,CAAI,EAC/B,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,EACrC,EACA,aAAe,SAAS,CAAI,CAAE,CAAK,EAClC,IAAI,EAAO,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,EAC9C,CAAA,EAAK,KAAK,CAAG,EAAK,SAAS,CAAG,GAAK,EACnC,IAAI,CAAC,gBAAgB,CAAC,EACvB,EACA,gBAAkB,SAAS,CAAI,EAC9B,IAAI,EAAO,IAAI,CAAC,gBAAgB,CAAC,EACjC,CAAA,GAAQ,IAAI,CAAC,mBAAmB,CAAC,EAClC,EAGA,YAAY,SAAS,CAAQ,SAC5B,AAAG,EAAS,QAAQ,GAAK,EACjB,IAAI,CAAC,YAAY,CAAC,EAAS,OA/PhC,AAiQ6B,EAjQpB,UAAU,EACtB,AAgQgC,EAhQvB,UAAU,CAAC,WAAW,CAgQC,GA9PjC,AA8PiC,EA9PxB,UAAU,CA8PS,IAAI,CA7PhC,AA6PiC,EA7PxB,eAAe,CAAG,AA6PC,IAAI,CA7PM,SAAS,CAC/C,AA4PiC,EA5PxB,WAAW,CAAG,KACnB,AA2P6B,EA3PpB,eAAe,CAC3B,AA0PgC,EA1PvB,eAAe,CAAC,WAAW,CA0PJ,EAxPhC,AAwP2B,IAAI,CAxPpB,UAAU,CAwPW,EAtPjC,AAsP4B,IAAI,CAtPrB,SAAS,CAsPa,EArPjC,EAAe,AAqPa,IAAI,CArPN,aAAa,CAqPX,IAAI,CAAC,GAAA,EAEjC,EACA,iBAAmB,SAAS,CAAO,EAClC,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,EACrC,EACA,mBAAqB,SAAS,CAAO,EACpC,OAAO,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,EACvC,EACA,oBAAsB,SAAS,CAAO,EAErC,OAAO,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,EAAQ,QAAQ,CACxD,EAEA,kBAAoB,SAAS,CAAY,CAAE,CAAS,EACnD,IAAI,EAAM,IAAI,CAAC,kBAAkB,CAAC,EAAc,EAChD,CAAA,GAAO,IAAI,CAAC,mBAAmB,CAAC,EACjC,EAEA,eAAiB,SAAS,CAAY,CAAE,CAAS,EAChD,OAAO,AAAkD,MAAlD,IAAI,CAAC,kBAAkB,CAAC,EAAc,EAC9C,EACA,eAAiB,SAAS,CAAY,CAAE,CAAS,EAChD,IAAI,EAAO,IAAI,CAAC,kBAAkB,CAAC,EAAc,GACjD,OAAO,GAAQ,EAAK,KAAK,EAAI,EAC9B,EACA,eAAiB,SAAS,CAAY,CAAE,CAAa,CAAE,CAAK,EAC3D,IAAI,EAAO,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,EAAc,EAC9D,CAAA,EAAK,KAAK,CAAG,EAAK,SAAS,CAAG,GAAK,EACnC,IAAI,CAAC,gBAAgB,CAAC,EACvB,EACA,mBAAqB,SAAS,CAAY,CAAE,CAAS,EACpD,OAAO,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,EAAc,EACrD,EAEA,qBAAuB,SAAS,CAAO,EACtC,OAAO,IAAI,EAAa,IAAI,CAAC,SAAS,CAAI,EACzC,IAAI,EAAK,EAAE,CAMX,OALA,EAAW,EAAK,SAAS,CAAI,EACzB,IAAS,GAAQ,EAAK,QAAQ,EAAI,GAAiB,CAAA,AAAY,MAAZ,GAAmB,EAAK,OAAO,EAAI,CAAA,GACxF,EAAG,IAAI,CAAC,EAEV,GACO,CACR,EACD,EACA,uBAAyB,SAAS,CAAY,CAAE,CAAS,EACxD,OAAO,IAAI,EAAa,IAAI,CAAC,SAAS,CAAI,EACzC,IAAI,EAAK,EAAE,CAMX,OALA,EAAW,EAAK,SAAS,CAAI,EACzB,IAAS,GAAQ,EAAK,QAAQ,GAAK,GAAiB,CAAA,AAAiB,MAAjB,GAAwB,EAAK,YAAY,GAAK,CAAA,GAAkB,CAAA,AAAc,MAAd,GAAqB,EAAK,SAAS,EAAI,CAAA,GAC7J,EAAG,IAAI,CAAC,EAEV,GACO,CAER,EACD,CACD,EACA,EAAS,SAAS,CAAC,oBAAoB,CAAG,GAAQ,SAAS,CAAC,oBAAoB,CAChF,EAAS,SAAS,CAAC,sBAAsB,CAAG,GAAQ,SAAS,CAAC,sBAAsB,CAGpF,EAAS,GAAQ,GAGjB,GAAK,SAAS,CAAC,QAAQ,CAAG,EAC1B,EAAS,GAAK,GAKd,GAAc,SAAS,CAAG,CACzB,KAAO,GACP,cAAgB,SAAS,CAAM,CAAE,CAAK,EACrC,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAQ,EAAO,EAC3C,EACA,WAAY,SAAS,CAAI,EACxB,EAAO,IAAI,CAAC,IAAI,CAAC,EACjB,IAAI,CAAC,SAAS,CAAG,IAAI,CAAC,IAAI,CAAG,EAC7B,IAAI,CAAC,MAAM,CAAG,EAAK,MAAM,AAC1B,EACA,WAAY,SAAS,CAAM,CAAC,CAAI,EAC/B,IAAI,CAAC,WAAW,CAAC,EAAO,EAAE,EAE3B,EACA,YAAY,SAAS,CAAQ,EAC5B,MAAM,AAAI,MAAM,CAAgB,CAAC,EAAsB,CACxD,EACA,WAAY,SAAS,CAAM,CAAE,CAAK,EACjC,IAAI,CAAC,WAAW,CAAC,EAAO,EAAM,GAC/B,EACA,YAAa,SAAS,CAAM,CAAE,CAAK,CAAE,CAAI,EAGxC,EAAO,AAFK,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,GAEnB,EADL,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAO,GAErC,IAAI,CAAC,SAAS,CAAG,IAAI,CAAC,IAAI,CAAG,EAC7B,IAAI,CAAC,MAAM,CAAG,EAAK,MAAM,AAC1B,CACD,EACA,EAAS,GAAc,GAGvB,GAAK,SAAS,CAAG,CAChB,SAAW,QACX,SAAW,EACX,UAAY,SAAS,CAAM,EAC1B,IAAI,EAAO,IAAI,CAAC,IAAI,CAChB,EAAU,EAAK,SAAS,CAAC,GAC7B,EAAO,EAAK,SAAS,CAAC,EAAG,GACzB,IAAI,CAAC,IAAI,CAAG,IAAI,CAAC,SAAS,CAAG,EAC7B,IAAI,CAAC,MAAM,CAAG,EAAK,MAAM,CACzB,IAAI,EAAU,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,GAIhD,OAHG,IAAI,CAAC,UAAU,EACjB,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,EAAS,IAAI,CAAC,WAAW,EAEhD,CACR,CACD,EACA,EAAS,GAAK,IAGd,GAAQ,SAAS,CAAG,CACnB,SAAW,WACX,SAAW,CACZ,EACA,EAAS,GAAQ,IAIjB,GAAa,SAAS,CAAG,CACxB,SAAW,iBACX,SAAW,CACZ,EACA,EAAS,GAAa,IAKtB,GAAa,SAAS,CAAC,QAAQ,CAAG,EAClC,EAAS,GAAa,GAItB,GAAS,SAAS,CAAC,QAAQ,CAAG,EAC9B,EAAS,GAAS,GAIlB,GAAO,SAAS,CAAC,QAAQ,CAAG,EAC5B,EAAS,GAAO,GAIhB,GAAgB,SAAS,CAAC,QAAQ,CAAG,EACrC,EAAS,GAAgB,GAIzB,GAAiB,SAAS,CAAC,QAAQ,CAAG,qBACtC,GAAiB,SAAS,CAAC,QAAQ,CAAG,EACtC,EAAS,GAAiB,GAK1B,GAAsB,SAAS,CAAC,QAAQ,CAAG,EAC3C,EAAS,GAAsB,GAE/B,GAAc,SAAS,CAAC,iBAAiB,CAAG,SAAS,CAAI,CAAC,CAAM,CAAC,CAAU,EAC1E,OAAO,GAAsB,IAAI,CAAC,EAAK,EAAO,EAC/C,EACA,EAAK,SAAS,CAAC,QAAQ,CAAG,GAmV1B,GAAG,CACC,OAAO,cAAc,GACvB,OAAO,cAAc,CAAC,EAAa,SAAS,CAAC,SAAS,CACrD,IAAI,WAEH,OADA,EAAgB,IAAI,EACb,IAAI,CAAC,QAAQ,AACrB,CACD,GAEA,OAAO,cAAc,CAAC,EAAK,SAAS,CAAC,cAAc,CAClD,IAAI,WACH,OAAO,AAuBT,SAAS,EAAe,CAAI,EAC3B,OAAO,EAAK,QAAQ,EACpB,KAAK,EACL,KAAK,EACJ,IAAI,EAAM,EAAE,CAEZ,IADA,EAAO,EAAK,UAAU,CAChB,GACc,IAAhB,EAAK,QAAQ,EAAQ,AAAiB,IAAjB,EAAK,QAAQ,EACpC,EAAI,IAAI,CAAC,EAAe,IAEzB,EAAO,EAAK,WAAW,CAExB,OAAO,EAAI,IAAI,CAAC,GACjB,SACC,OAAO,EAAK,SAAS,AACtB,CACD,EAvCwB,IAAI,CAC3B,EAEA,IAAI,SAAS,CAAI,EAChB,OAAO,IAAI,CAAC,QAAQ,EACpB,KAAK,EACL,KAAK,EACJ,KAAM,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAE9B,CAAA,GAAQ,AAAO,EAAP,EAAO,GACjB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAEpD,KAED,SACC,IAAI,CAAC,IAAI,CAAG,EACZ,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,SAAS,CAAG,CAClB,CACD,CACD,GAoBA,GAAU,SAAS,CAAM,CAAC,CAAG,CAAC,CAAK,EAElC,CAAM,CAAC,KAAK,EAAI,CAAG,CACpB,EAEF,CAAC,MAAM,EAAE,CACT,CAKC,EAA4B,EAI5B,EAAwB,E,G,E,Q,S,C,C,C,MCvmDzB,EACA,EAEA,EAlHI,EAqEA,EA5GJ,SAAS,EAAO,CAAM,CAAE,CAAE,EAIzB,OAHW,KAAA,IAAP,GACH,CAAA,EAAK,MADN,EAGO,GAAM,AAAqB,YAArB,OAAO,EAAG,MAAM,CAAkB,EAAG,MAAM,CAAC,GAAU,CACpE,C,E,E,O,C,O,I,E,A,G,E,G,E,E,O,C,S,I,E,A,G,E,G,E,E,O,C,Y,I,E,A,G,E,GAkCI,EAAY,EAAO,CAUtB,KAAM,YAYN,OAAQ,SAAU,CAAK,EACtB,OAAO,IAAU,EAAU,IAAI,AAChC,EASA,gBAAiB,kBASjB,SAAU,WAUV,sBAAuB,wBASvB,cAAe,eAChB,GAOI,EAAY,EAAO,CAMtB,KAAM,+BASN,OAAQ,SAAU,CAAG,EACpB,OAAO,IAAQ,EAAU,IAAI,AAC9B,EAOA,IAAK,6BAOL,IAAK,uCAOL,MAAO,+BACR,GAGA,EAtLA,SAAc,CAAI,CAAE,CAAS,CAAE,CAAE,EAIhC,GAHW,KAAA,IAAP,GACH,CAAA,EAAK,MAAM,SAAS,AAAT,EAER,GAAQ,AAAmB,YAAnB,OAAO,EAAG,IAAI,CACzB,OAAO,EAAG,IAAI,CAAC,IAAI,CAAC,EAAM,GAE3B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAK,MAAM,CAAE,IAChC,GAAI,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,EAAM,GAAI,CAClD,IAAI,EAAO,CAAI,CAAC,EAAE,CAClB,GAAI,EAAU,IAAI,CAAC,KAAA,EAAW,EAAM,EAAG,GACtC,OAAO,CAET,CAEF,EAwKA,EAAiB,EAEjB,EAAoB,C,G,E,Q,S,C,C,C,MCuHpB,E,E,E,E,EA5TI,EAEA,EAEA,EACA,EAuBJ,SAAS,EAAqB,CAAK,EAClC,OAAO,EACL,OAAO,CAAC,gBAAiB,MACzB,OAAO,CAAC,oBAAqB,KAChC,CAiCA,SAAS,EAAU,CAAO,EACzB,IAAI,CAAC,OAAO,CAAG,GAAU,CAAC,QAAQ,CAAC,CAAC,CACrC,CAoEA,SAAS,IACL,IAAI,CAAC,KAAK,CAAG,CAAA,CACjB,CACA,SAAS,EAAS,CAAO,CAAC,CAAI,EAC7B,EAAK,UAAU,CAAG,EAAQ,UAAU,CACpC,EAAK,YAAY,CAAG,EAAQ,YAAY,AACzC,CAiHA,SAAS,EAAS,CAAC,EAClB,GAAG,EACF,MAAO,MAAO,CAAA,EAAE,QAAQ,EAAG,EAAA,EAAI,UAAU,EAAE,UAAU,CAAC,QAAQ,EAAE,YAAY,CAAC,GAE/E,CACA,SAAS,EAAU,CAAK,CAAC,CAAK,CAAC,CAAM,QACpC,AAAG,AAAgB,UAAhB,OAAO,EACF,EAAM,MAAM,CAAC,EAAM,GAE1B,AAAG,EAAM,MAAM,EAAI,EAAM,GAAU,EAC3B,IAAI,KAAK,IAAI,CAAC,MAAM,CAAC,EAAM,EAAM,GAAQ,GAE1C,CAET,CAsCA,SAAS,EAAe,CAAM,CAAC,CAAI,EAC1B,EAAO,cAAc,CAGtB,EAAO,cAAc,CAAC,WAAW,CAAC,GAFlC,EAAO,GAAG,CAAC,WAAW,CAAC,EAI/B,C,E,E,O,C,Y,I,E,A,G,E,G,E,E,S,E,E,S,E,E,S,E,E,SAxTI,EAAoB,EAAxB,iBAAA,CAEI,EAAY,EAAhB,SAAA,CAEI,EAAa,EAAjB,UAAA,CACI,EAAY,EAAhB,SAAA,CAgEA,EAAU,SAAS,CAAC,eAAe,CAAG,SAAS,CAAM,CAAC,CAAQ,EAC7D,IAAI,EAAU,IAAI,CAAC,OAAO,CACtB,EAAO,IAAI,EACX,EAAa,EAAQ,UAAU,EAAI,IAAI,EACvC,EAAe,EAAQ,YAAY,CACnC,EAAU,EAAQ,OAAO,CACzB,EAAe,EAAQ,KAAK,EAAE,CAAC,EAC/B,EAAS,aAAa,IAAI,CAAC,GACzB,EAAY,EAAS,EAAA,aAAA,CAAyB,EAAlD,YAAA,CACC,GACF,EAAW,kBAAkB,CAAC,GAG/B,EAAI,YAAY,CAAG,AAkBpB,SAA2B,CAAS,CAAC,CAAU,CAAC,CAAO,MAOlD,EACA,EAEJ,SAAS,EAAM,CAAG,EACjB,IAAI,EAAK,CAAS,CAAC,EAAI,AACpB,EAAC,GAAM,GACT,CAAA,EAAK,AAAoB,GAApB,EAAU,MAAM,CAAM,SAAS,CAAG,EAAE,EAAU,EAAI,EAAI,EAAE,CAAF,EAE5D,CAAY,CAAC,EAAI,CAAG,GAAM,SAAS,CAAG,EACrC,EAAG,WAAW,EAAI,KAAM,EAAI,EAAS,GACtC,GAAG,WAAW,CACf,CAjBA,GAAG,CAAC,EAAU,CACb,GAAG,aAAsB,EACxB,OAAO,EAER,EAAY,CACb,CAgBA,OAfI,EAAe,CAAC,EAChB,EAAa,aAAqB,SACtC,EAAU,GAAS,CAAC,EAUpB,EAAM,WACN,EAAM,SACN,EAAM,cACC,CACR,EAzCsC,EAAa,EAAW,GAC7D,EAAI,UAAU,CAAG,EAAQ,UAAU,EAAI,EACpC,GACF,CAAA,CAAY,CAAC,GAAG,CAAG,EAAU,IAAI,AAAJ,EAE9B,EAAa,GAAG,CAAG,EAAa,GAAG,EAAI,EAAU,GAAG,CACpD,IAAI,EAAY,EAAQ,oBAAoB,EAAI,EAUhD,OATI,GAAU,AAAkB,UAAlB,OAAO,EACpB,EAAI,KAAK,CACR,EAAU,GACV,EACA,GAGD,EAAI,YAAY,CAAC,KAAK,CAAC,sBAEjB,EAAW,GAAG,AACtB,EA+CA,EAAW,SAAS,CAAG,CACtB,cAAgB,WACZ,IAAI,CAAC,GAAG,CAAG,IAAI,IAAoB,cAAc,CAAC,KAAM,KAAM,MAC1D,IAAI,CAAC,OAAO,EACZ,CAAA,IAAI,CAAC,GAAG,CAAC,WAAW,CAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,AAAR,CAE5C,EACA,aAAa,SAAS,CAAY,CAAE,CAAS,CAAE,CAAK,CAAE,CAAK,EAC1D,IAAI,EAAM,IAAI,CAAC,GAAG,CACX,EAAK,EAAI,eAAe,CAAC,EAAc,GAAO,GAC9C,EAAM,EAAM,MAAM,CACtB,EAAc,IAAI,CAAE,GACpB,IAAI,CAAC,cAAc,CAAG,EAEzB,IAAI,CAAC,OAAO,EAAI,EAAS,IAAI,CAAC,OAAO,CAAC,GACnC,IAAK,IAAI,EAAI,EAAI,AAAI,EAAJ,EAAS,IAAK,CAC3B,IAAI,EAAe,EAAM,MAAM,CAAC,GAC5B,EAAQ,EAAM,QAAQ,CAAC,GACvB,EAAQ,EAAM,QAAQ,CAAC,GAC7B,EAAO,EAAI,iBAAiB,CAAC,EAAc,EAC/C,CAAA,IAAI,CAAC,OAAO,EAAG,EAAS,EAAM,UAAU,CAAC,GAAG,GAC5C,EAAK,KAAK,CAAG,EAAK,SAAS,CAAG,EAC9B,EAAG,gBAAgB,CAAC,EAClB,CACJ,EACA,WAAW,SAAS,CAAY,CAAE,CAAS,CAAE,CAAK,EACjD,IAAI,EAAU,IAAI,CAAC,cAAc,AACnB,CAAA,EAAQ,OAAO,CAC7B,IAAI,CAAC,cAAc,CAAG,EAAQ,UAAU,AACzC,EACA,mBAAmB,SAAS,CAAM,CAAE,CAAG,EACvC,EACA,iBAAiB,SAAS,CAAM,EAChC,EACA,sBAAsB,SAAS,CAAM,CAAE,CAAI,EACvC,IAAI,EAAM,IAAI,CAAC,GAAG,CAAC,2BAA2B,CAAC,EAAQ,EACvD,CAAA,IAAI,CAAC,OAAO,EAAI,EAAS,IAAI,CAAC,OAAO,CAAC,GACtC,EAAc,IAAI,CAAE,EACxB,EACA,oBAAoB,SAAS,CAAE,CAAE,CAAK,CAAE,CAAM,EAC9C,EACA,WAAW,SAAS,CAAK,CAAE,CAAK,CAAE,CAAM,EAGvC,GAFA,EAAQ,EAAU,KAAK,CAAC,IAAI,CAAC,WAEpB,CACR,GAAI,IAAI,CAAC,KAAK,CACb,IAAI,EAAW,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,QAE3C,IAAI,EAAW,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,EAErC,CAAA,IAAI,CAAC,cAAc,CACrB,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,GACxB,QAAQ,IAAI,CAAC,IACrB,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,GAGtB,IAAI,CAAC,OAAO,EAAI,EAAS,IAAI,CAAC,OAAO,CAAC,EACvC,CACD,EACA,cAAc,SAAS,CAAI,EAC3B,EACA,YAAY,WACX,IAAI,CAAC,GAAG,CAAC,SAAS,EACnB,EACA,mBAAmB,SAAU,CAAO,EAC7B,CAAA,IAAI,CAAC,OAAO,CAAG,CAAA,GACjB,CAAA,EAAQ,UAAU,CAAG,CAAA,CAE1B,EAEA,QAAQ,SAAS,CAAK,CAAE,CAAK,CAAE,CAAM,EACpC,EAAQ,EAAU,KAAK,CAAC,IAAI,CAAC,WAC1B,IAAI,EAAO,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,EAClC,CAAA,IAAI,CAAC,OAAO,EAAI,EAAS,IAAI,CAAC,OAAO,CAAC,GACtC,EAAc,IAAI,CAAE,EACxB,EAEA,WAAW,WAEP,IAAI,CAAC,KAAK,CAAG,CAAA,CACjB,EACA,SAAS,WACL,IAAI,CAAC,KAAK,CAAG,CAAA,CACjB,EAEA,SAAS,SAAS,CAAI,CAAE,CAAQ,CAAE,CAAQ,EACzC,IAAI,EAAO,IAAI,CAAC,GAAG,CAAC,cAAc,CAC/B,GAAI,GAAQ,EAAK,kBAAkB,CAAE,CACjC,IAAI,EAAK,EAAK,kBAAkB,CAAC,EAAM,EAAU,EACjD,CAAA,IAAI,CAAC,OAAO,EAAI,EAAS,IAAI,CAAC,OAAO,CAAC,GACtC,EAAc,IAAI,CAAE,GACxB,IAAI,CAAC,GAAG,CAAC,OAAO,CAAG,CACnB,CACJ,EAKA,QAAQ,SAAS,CAAK,EACrB,QAAQ,IAAI,CAAC,oBAAqB,EAAM,EAAS,IAAI,CAAC,OAAO,EAC9D,EACA,MAAM,SAAS,CAAK,EACnB,QAAQ,KAAK,CAAC,kBAAmB,EAAM,EAAS,IAAI,CAAC,OAAO,EAC7D,EACA,WAAW,SAAS,CAAK,EACxB,MAAM,IAAI,EAAW,EAAO,IAAI,CAAC,OAAO,CACzC,CACD,EAgDA,+JAA+J,OAAO,CAAC,OAAO,SAAS,CAAG,EACzL,EAAW,SAAS,CAAC,EAAI,CAAG,WAAW,OAAO,IAAI,CACnD,GAaA,EAAoB,C,G,E,Q,S,C,C,C,E,E,E,O,C,e,I,E,A,G,E,G,E,E,O,C,gB,I,E,A,G,E,GC/ThB,IASJ,EAsBA,EA/BI,EAAA,A,E,SAAA,MAAA,CASJ,EAAuB,EAAO,CAC7B,IAAK,IACL,KAAM,IACN,GAAI,IACJ,GAAI,IACJ,KAAM,GACP,GAgBA,EAAwB,EAAO,CAC9B,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,GAAI,IACJ,IAAK,IACL,IAAK,KACL,MAAO,IACP,MAAO,IACP,MAAO,IACP,IAAK,IACL,IAAK,IACL,MAAO,IACP,MAAO,IACP,GAAI,IACJ,IAAK,eACL,IAAK,eACL,OAAQ,IACR,OAAQ,IACR,QAAS,IACT,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,OAAQ,IACR,KAAM,IACN,SAAU,IACV,KAAM,IACN,IAAK,IACL,KAAM,IACN,MAAO,IACP,OAAQ,IACR,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,MAAO,IACP,QAAS,IACT,SAAU,IACV,OAAQ,IACR,MAAO,IACP,QAAS,IACT,MAAO,IACP,MAAO,IACP,KAAM,eACN,KAAM,eACN,GAAI,IACJ,OAAQ,IACR,IAAK,IACL,IAAK,IACL,KAAM,IACN,KAAM,IACN,cAAe,IACf,OAAQ,IACR,SAAU,IACV,MAAO,IACP,MAAO,IACP,KAAM,eACN,KAAM,eACN,OAAQ,IACR,IAAK,IACL,MAAO,IACP,QAAS,IACT,OAAQ,IACR,OAAQ,IACR,KAAM,IACN,KAAM,IACN,SAAU,IACV,MAAO,IACP,SAAU,IACV,YAAa,IACb,UAAW,IACX,QAAS,IACT,UAAW,IACX,UAAW,IACX,KAAM,IACN,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,SAAU,IACV,KAAM,IACN,SAAU,IACV,MAAO,IACP,IAAK,IACL,IAAK,IACL,MAAO,IACP,OAAQ,IACR,QAAS,IACT,QAAS,IACT,QAAS,IACT,MAAO,IACP,OAAQ,IACR,WAAY,IACZ,KAAM,IACN,KAAM,IACN,KAAM,IACN,QAAS,IACT,IAAK,eACL,IAAK,eACL,OAAQ,IACR,QAAS,IACT,OAAQ,IACR,QAAS,IACT,SAAU,IACV,UAAW,IACX,SAAU,IACV,QAAS,IACT,gBAAiB,IACjB,cAAe,IACf,SAAU,IACV,OAAQ,IACR,SAAU,IACV,OAAQ,IACR,aAAc,IACd,YAAa,IACb,cAAe,IACf,kBAAmB,IACnB,kBAAmB,IACnB,mBAAoB,IACpB,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,IAAK,KACL,QAAS,KACT,KAAM,IACN,KAAM,IACN,KAAM,eACN,KAAM,eACN,IAAK,IACL,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,KAAM,IACN,KAAM,IACN,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,SAAU,IACV,QAAS,IACT,SAAU,IACV,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,KAAM,IACN,KAAM,IACN,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,OAAQ,IACR,MAAO,IACP,MAAO,IACP,OAAQ,IACR,KAAM,IACN,KAAM,eACN,MAAO,IACP,KAAM,IACN,MAAO,IACP,KAAM,KACN,MAAO,IACP,SAAU,IACV,KAAM,IACN,OAAQ,IACR,KAAM,IACN,MAAO,IACP,MAAO,IACP,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,IAAK,IACL,IAAK,IACL,OAAQ,IACR,SAAU,IACV,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,qBAAsB,IACtB,KAAM,KACN,MAAO,IACP,MAAO,IACP,QAAS,IACT,MAAO,IACP,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,MAAO,IACP,MAAO,IACP,QAAS,IACT,MAAO,IACP,QAAS,IACT,KAAM,IACN,KAAM,IACN,MAAO,IACP,QAAS,IACT,QAAS,IACT,KAAM,IACN,UAAW,IACX,UAAW,IACX,IAAK,IACL,IAAK,eACL,KAAM,IACN,KAAM,IACN,MAAO,IACP,UAAW,IACX,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,OAAQ,IACR,gBAAiB,IACjB,iBAAkB,IAClB,WAAY,IACZ,YAAa,IACb,YAAa,IACb,UAAW,IACX,SAAU,IACV,SAAU,IACV,YAAa,IACb,WAAY,IACZ,YAAa,IACb,KAAM,IACN,KAAM,IACN,SAAU,IACV,OAAQ,IACR,QAAS,IACT,yBAA0B,IAC1B,sBAAuB,IACvB,gBAAiB,IACjB,MAAO,IACP,SAAU,IACV,MAAO,IACP,MAAO,IACP,OAAQ,IACR,OAAQ,IACR,QAAS,IACT,MAAO,IACP,OAAQ,IACR,KAAM,IACN,OAAQ,IACR,WAAY,IACZ,UAAW,IACX,KAAM,IACN,QAAS,IACT,UAAW,IACX,OAAQ,IACR,OAAQ,IACR,gBAAiB,IACjB,KAAM,IACN,KAAM,eACN,OAAQ,IACR,UAAW,IACX,KAAM,IACN,KAAM,IACN,OAAQ,IACR,gCAAiC,IACjC,MAAO,IACP,MAAO,IACP,MAAO,IACP,KAAM,eACN,KAAM,eACN,KAAM,IACN,MAAO,IACP,KAAM,IACN,MAAO,IACP,MAAO,IACP,QAAS,IACT,QAAS,IACT,MAAO,IACP,MAAO,IACP,OAAQ,IACR,QAAS,IACT,IAAK,IACL,IAAK,IACL,SAAU,IACV,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,MAAO,IACP,KAAM,KACN,OAAQ,IACR,QAAS,IACT,YAAa,IACb,YAAa,IACb,SAAU,IACV,WAAY,IACZ,OAAQ,IACR,eAAgB,IAChB,gBAAiB,IACjB,MAAO,IACP,MAAO,IACP,SAAU,IACV,MAAO,IACP,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,KAAM,IACN,KAAM,IACN,KAAM,IACN,KAAM,IACN,MAAO,IACP,MAAO,IACP,QAAS,IACT,MAAO,IACP,OAAQ,IACR,OAAQ,IACR,IAAK,IACL,IAAK,IACL,GAAI,IACJ,GAAI,IACJ,QAAS,IACT,MAAO,IACP,SAAU,IACV,QAAS,IACT,IAAK,IACL,IAAK,IACL,MAAO,IACP,MAAO,IACP,QAAS,IACT,OAAQ,IACR,IAAK,eACL,IAAK,eACL,KAAM,IACN,MAAO,IACP,MAAO,IACP,iBAAkB,IAClB,eAAgB,IAChB,uBAAwB,IACxB,iBAAkB,IAClB,iBAAkB,IAClB,KAAM,IACN,QAAS,IACT,QAAS,IACT,YAAa,IACb,MAAO,IACP,IAAK,IACL,cAAe,IACf,QAAS,IACT,MAAO,IACP,IAAK,IACL,OAAQ,IACR,cAAe,IACf,OAAQ,IACR,KAAM,IACN,KAAM,IACN,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,KAAM,eACN,KAAM,eACN,IAAK,IACL,IAAK,IACL,OAAQ,IACR,MAAO,IACP,SAAU,IACV,SAAU,IACV,SAAU,IACV,QAAS,IACT,UAAW,IACX,eAAgB,IAChB,sBAAuB,IACvB,UAAW,IACX,gBAAiB,IACjB,gBAAiB,IACjB,qBAAsB,IACtB,cAAe,IACf,oBAAqB,IACrB,yBAA0B,IAC1B,qBAAsB,IACtB,iBAAkB,IAClB,eAAgB,IAChB,cAAe,IACf,kBAAmB,IACnB,kBAAmB,IACnB,UAAW,IACX,UAAW,IACX,UAAW,IACX,aAAc,IACd,iBAAkB,IAClB,UAAW,IACX,eAAgB,IAChB,gBAAiB,IACjB,iBAAkB,IAClB,oBAAqB,IACrB,kBAAmB,IACnB,eAAgB,IAChB,kBAAmB,IACnB,mBAAoB,IACpB,gBAAiB,IACjB,mBAAoB,IACpB,QAAS,IACT,aAAc,IACd,SAAU,IACV,OAAQ,IACR,OAAQ,IACR,KAAM,eACN,KAAM,eACN,KAAM,IACN,KAAM,IACN,KAAM,IACN,OAAQ,IACR,OAAQ,IACR,MAAO,IACP,KAAM,IACN,MAAO,IACP,MAAO,IACP,MAAO,IACP,QAAS,IACT,KAAM,IACN,KAAM,IACN,SAAU,IACV,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,KAAM,IACN,MAAO,IACP,MAAO,IACP,OAAQ,IACR,IAAK,IACL,IAAK,IACL,MAAO,IACP,KAAM,IACN,KAAM,IACN,KAAM,IACN,GAAI,IACJ,MAAO,IACP,IAAK,eACL,IAAK,eACL,GAAI,IACJ,OAAQ,IACR,OAAQ,IACR,IAAK,IACL,OAAQ,IACR,GAAI,IACJ,QAAS,IACT,SAAU,IACV,IAAK,IACL,IAAK,IACL,OAAQ,IACR,MAAO,IACP,MAAO,IACP,MAAO,IACP,SAAU,IACV,iBAAkB,IAClB,OAAQ,IACR,qBAAsB,IACtB,KAAM,IACN,OAAQ,IACR,OAAQ,IACR,IAAK,IACL,IAAK,IACL,KAAM,IACN,MAAO,IACP,MAAO,IACP,KAAM,eACN,KAAM,eACN,KAAM,IACN,OAAQ,IACR,MAAO,IACP,KAAM,IACN,QAAS,IACT,QAAS,IACT,MAAO,IACP,OAAQ,IACR,QAAS,IACT,MAAO,IACP,WAAY,IACZ,YAAa,IACb,MAAO,IACP,OAAQ,IACR,WAAY,IACZ,OAAQ,IACR,YAAa,IACb,MAAO,IACP,QAAS,IACT,SAAU,IACV,MAAO,IACP,MAAO,IACP,KAAM,IACN,KAAM,IACN,MAAO,IACP,KAAM,IACN,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,KAAM,IACN,KAAM,IACN,KAAM,IACN,MAAO,IACP,OAAQ,IACR,YAAa,IACb,aAAc,IACd,aAAc,IACd,cAAe,IACf,IAAK,IACL,IAAK,IACL,OAAQ,IACR,OAAQ,IACR,MAAO,IACP,OAAQ,IACR,IAAK,eACL,IAAK,eACL,MAAO,IACP,kBAAmB,IACnB,sBAAuB,IACvB,MAAO,KACP,KAAM,IACN,MAAO,IACP,MAAO,IACP,KAAM,IACN,KAAM,eACN,KAAM,eACN,OAAQ,IACR,OAAQ,IACR,KAAM,IACN,MAAO,IACP,WAAY,IACZ,SAAU,IACV,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,MAAO,IACP,MAAO,IACP,KAAM,IACN,KAAM,eACN,OAAQ,IACR,MAAO,IACP,MAAO,IACP,OAAQ,IACR,OAAQ,IACR,IAAK,IACL,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,MAAO,IACP,MAAO,IACP,IAAK,IACL,IAAK,IACL,KAAM,IACN,KAAM,IACN,GAAI,IACJ,GAAI,IACJ,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,SAAU,IACV,IAAK,IACL,MAAO,IACP,OAAQ,IACR,QAAS,IACT,SAAU,IACV,KAAM,KACN,OAAQ,IACR,IAAK,eACL,IAAK,eACL,GAAI,IACJ,GAAI,IACJ,IAAK,IACL,MAAO,IACP,KAAM,IACN,KAAM,IACN,GAAI,IACJ,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,SAAU,IACV,IAAK,IACL,IAAK,IACL,KAAM,IACN,MAAO,IACP,MAAO,IACP,KAAM,eACN,KAAM,eACN,MAAO,IACP,aAAc,IACd,iBAAkB,IAClB,iBAAkB,IAClB,eAAgB,IAChB,YAAa,IACb,kBAAmB,IACnB,aAAc,IACd,KAAM,eACN,KAAM,IACN,KAAM,IACN,MAAO,IACP,MAAO,IACP,GAAI,IACJ,GAAI,IACJ,GAAI,IACJ,KAAM,IACN,MAAO,IACP,MAAO,IACP,OAAQ,IACR,QAAS,IACT,UAAW,IACX,OAAQ,IACR,OAAQ,IACR,UAAW,IACX,WAAY,IACZ,QAAS,IACT,OAAQ,IACR,UAAW,KACX,KAAM,KACN,MAAO,IACP,OAAQ,IACR,KAAM,IACN,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,KAAM,IACN,KAAM,IACN,QAAS,IACT,MAAO,IACP,IAAK,IACL,KAAM,IACN,MAAO,IACP,MAAO,IACP,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,OAAQ,IACR,IAAK,IACL,IAAK,eACL,aAAc,IACd,SAAU,IACV,SAAU,IACV,MAAO,IACP,OAAQ,IACR,cAAe,IACf,eAAgB,IAChB,KAAM,IACN,KAAM,eACN,OAAQ,IACR,eAAgB,IAChB,KAAM,IACN,KAAM,eACN,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,aAAc,IACd,UAAW,IACX,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,GAAI,IACJ,MAAO,IACP,MAAO,IACP,IAAK,IACL,IAAK,IACL,KAAM,IACN,KAAM,IACN,KAAM,IACN,MAAO,IACP,IAAK,IACL,IAAK,IACL,IAAK,eACL,OAAQ,IACR,OAAQ,IACR,GAAI,IACJ,OAAQ,IACR,MAAO,IACP,OAAQ,IACR,MAAO,IACP,MAAO,IACP,MAAO,IACP,GAAI,IACJ,MAAO,IACP,MAAO,IACP,MAAO,IACP,WAAY,IACZ,SAAU,IACV,SAAU,IACV,MAAO,IACP,KAAM,IACN,MAAO,IACP,QAAS,IACT,GAAI,IACJ,OAAQ,IACR,MAAO,IACP,SAAU,IACV,OAAQ,IACR,IAAK,IACL,IAAK,IACL,OAAQ,IACR,SAAU,IACV,SAAU,IACV,SAAU,IACV,aAAc,IACd,SAAU,IACV,QAAS,IACT,eAAgB,IAChB,eAAgB,IAChB,KAAM,IACN,KAAM,IACN,MAAO,IACP,MAAO,IACP,KAAM,eACN,KAAM,eACN,KAAM,IACN,KAAM,IACN,MAAO,IACP,OAAQ,IACR,KAAM,IACN,KAAM,eACN,KAAM,IACN,QAAS,IACT,MAAO,IACP,MAAO,IACP,OAAQ,IACR,MAAO,IACP,GAAI,IACJ,OAAQ,IACR,OAAQ,IACR,MAAO,IACP,MAAO,IACP,KAAM,IACN,KAAM,IACN,MAAO,IACP,MAAO,IACP,IAAK,IACL,IAAK,IACL,IAAK,eACL,IAAK,eACL,MAAO,IACP,KAAM,eACN,KAAM,eACN,KAAM,eACN,KAAM,eACN,OAAQ,IACR,OAAQ,IACR,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,IAAK,IACL,IAAK,IACL,IAAK,eACL,IAAK,eACL,OAAQ,IACR,KAAM,IACN,KAAM,IACN,KAAM,IACN,KAAM,IACN,KAAM,eACN,KAAM,eACN,KAAM,eACN,KAAM,eACN,MAAO,IACP,OAAQ,IACR,OAAQ,IACR,SAAU,IACV,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,KAAM,IACN,KAAM,IACN,MAAO,IACP,OAAQ,IACR,IAAK,IACL,WAAY,IACZ,MAAO,IACP,KAAM,IACN,KAAM,IACN,KAAM,IACN,MAAO,IACP,QAAS,IACT,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,QAAS,IACT,OAAQ,IACR,IAAK,IACL,OAAQ,IACR,OAAQ,IACR,KAAM,IACN,MAAO,KACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,OAAQ,IACR,OAAQ,IACR,MAAO,IACP,QAAS,IACT,QAAS,IACT,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,MAAO,IACP,KAAM,IACN,IAAK,IACL,IAAK,IACL,KAAM,IACN,MAAO,IACP,OAAQ,IACR,QAAS,IACT,SAAU,IACV,KAAM,IACN,GAAI,IACJ,GAAI,IACJ,iBAAkB,IAClB,UAAW,IACX,UAAW,IACX,UAAW,IACX,aAAc,IACd,oBAAqB,IACrB,cAAe,IACf,YAAa,IACb,kBAAmB,IACnB,kBAAmB,IACnB,eAAgB,IAChB,kBAAmB,IACnB,UAAW,IACX,gBAAiB,IACjB,cAAe,IACf,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,gBAAiB,IACjB,kBAAmB,IACnB,oBAAqB,IACrB,gBAAiB,IACjB,QAAS,IACT,aAAc,IACd,cAAe,IACf,eAAgB,IAChB,aAAc,IACd,gBAAiB,IACjB,kBAAmB,IACnB,iBAAkB,IAClB,gBAAiB,IACjB,aAAc,IACd,gBAAiB,IACjB,WAAY,IACZ,cAAe,IACf,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,SAAU,IACV,IAAK,IACL,MAAO,IACP,OAAQ,IACR,QAAS,IACT,SAAU,IACV,KAAM,KACN,OAAQ,IACR,WAAY,IACZ,QAAS,IACT,UAAW,IACX,WAAY,IACZ,iBAAkB,IAClB,cAAe,IACf,YAAa,IACb,QAAS,IACT,SAAU,IACV,QAAS,IACT,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,OAAQ,IACR,IAAK,eACL,IAAK,eACL,GAAI,IACJ,IAAK,IACL,KAAM,IACN,MAAO,IACP,MAAO,IACP,OAAQ,IACR,MAAO,IACP,KAAM,IACN,KAAM,IACN,GAAI,IACJ,GAAI,IACJ,MAAO,IACP,SAAU,IACV,WAAY,IACZ,OAAQ,IACR,MAAO,IACP,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,WAAY,IACZ,KAAM,IACN,SAAU,IACV,IAAK,IACL,IAAK,IACL,KAAM,IACN,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,cAAe,IACf,cAAe,IACf,cAAe,IACf,mBAAoB,IACpB,mBAAoB,IACpB,mBAAoB,IACpB,WAAY,IACZ,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,cAAe,IACf,eAAgB,IAChB,MAAO,IACP,KAAM,eACN,KAAM,eACN,OAAQ,IACR,QAAS,IACT,OAAQ,IACR,OAAQ,IACR,eAAgB,IAChB,gBAAiB,IACjB,IAAK,IACL,QAAS,IACT,KAAM,IACN,KAAM,IACN,OAAQ,IACR,MAAO,IACP,SAAU,IACV,MAAO,IACP,OAAQ,IACR,IAAK,IACL,MAAO,IACP,OAAQ,IACR,KAAM,IACN,KAAM,eACN,IAAK,IACL,IAAK,IACL,KAAM,IACN,MAAO,IACP,MAAO,IACP,KAAM,IACN,MAAO,IACP,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,GAAI,IACJ,GAAI,IACJ,GAAI,IACJ,KAAM,IACN,MAAO,IACP,MAAO,IACP,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,QAAS,IACT,KAAM,IACN,MAAO,IACP,MAAO,IACP,OAAQ,IACR,SAAU,IACV,QAAS,IACT,UAAW,KACX,KAAM,KACN,KAAM,IACN,KAAM,IACN,KAAM,IACN,QAAS,IACT,IAAK,IACL,IAAK,IACL,OAAQ,IACR,WAAY,IACZ,WAAY,IACZ,SAAU,IACV,OAAQ,IACR,OAAQ,IACR,IAAK,IACL,IAAK,IACL,MAAO,IACP,MAAO,IACP,cAAe,IACf,YAAa,IACb,UAAW,IACX,IAAK,eACL,IAAK,eACL,IAAK,IACL,MAAO,IACP,IAAK,IACL,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,MAAO,IACP,OAAQ,IACR,OAAQ,IACR,QAAS,IACT,UAAW,IACX,KAAM,IACN,KAAM,IACN,OAAQ,IACR,OAAQ,IACR,KAAM,eACN,KAAM,eACN,GAAI,IACJ,KAAM,IACN,KAAM,eACN,OAAQ,IACR,GAAI,IACJ,GAAI,IACJ,SAAU,IACV,MAAO,IACP,MAAO,IACP,OAAQ,IACR,OAAQ,IACR,KAAM,KACN,IAAK,IACL,KAAM,KACN,MAAO,KACP,MAAO,IACP,QAAS,IACT,MAAO,IACP,QAAS,IACT,SAAU,IACV,KAAM,IACN,MAAO,KACP,OAAQ,KACR,KAAM,IACN,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,MAAO,IACP,SAAU,KACV,KAAM,IACN,IAAK,IACL,IAAK,IACL,MAAO,IACP,GAAI,IACJ,OAAQ,IACR,MAAO,IACP,MAAO,IACP,QAAS,IACT,MAAO,KACP,oBAAqB,IACrB,mBAAoB,IACpB,kBAAmB,IACnB,sBAAuB,IACvB,OAAQ,IACR,OAAQ,IACR,MAAO,KACP,qBAAsB,IACtB,eAAgB,IAChB,QAAS,KACT,OAAQ,IACR,QAAS,IACT,IAAK,eACL,IAAK,eACL,IAAK,KACL,IAAK,IACL,KAAM,IACN,MAAO,KACP,UAAW,KACX,KAAM,KACN,IAAK,KACL,MAAO,IACP,IAAK,KACL,IAAK,IACL,KAAM,IACN,KAAM,KACN,MAAO,IACP,MAAO,IACP,MAAO,IACP,GAAI,IACJ,IAAK,IACL,KAAM,IACN,IAAK,IACL,KAAM,IACN,KAAM,IACN,MAAO,IACP,MAAO,IACP,KAAM,IACN,IAAK,KACL,IAAK,IACL,WAAY,IACZ,WAAY,IACZ,gBAAiB,IACjB,gBAAiB,IACjB,KAAM,IACN,MAAO,KACP,UAAW,KACX,KAAM,KACN,MAAO,IACP,IAAK,KACL,MAAO,IACP,IAAK,KACL,IAAK,IACL,MAAO,IACP,OAAQ,IACR,KAAM,KACN,KAAM,IACN,QAAS,IACT,iBAAkB,IAClB,KAAM,IACN,KAAM,eACN,IAAK,IACL,IAAK,IACL,aAAc,IACd,UAAW,IACX,qBAAsB,IACtB,WAAY,IACZ,SAAU,IACV,cAAe,KACf,UAAW,IACX,WAAY,IACZ,gBAAiB,IACjB,oBAAqB,KACrB,kBAAmB,KACnB,eAAgB,IAChB,qBAAsB,KACtB,gBAAiB,IACjB,gBAAiB,KACjB,aAAc,KACd,MAAO,IACP,SAAU,KACV,OAAQ,KACR,QAAS,IACT,QAAS,IACT,QAAS,IACT,gBAAiB,IACjB,mBAAoB,KACpB,qBAAsB,IACtB,QAAS,IACT,aAAc,IACd,eAAgB,IAChB,YAAa,KACb,kBAAmB,KACnB,aAAc,IACd,wBAAyB,KACzB,kBAAmB,KACnB,MAAO,IACP,QAAS,IACT,QAAS,IACT,QAAS,IACT,YAAa,IACb,iBAAkB,KAClB,sBAAuB,IACvB,kBAAmB,IACnB,iBAAkB,IAClB,oBAAqB,KACrB,sBAAuB,IACvB,gBAAiB,KACjB,qBAAsB,IACtB,kBAAmB,KACnB,uBAAwB,IACxB,UAAW,KACX,eAAgB,IAChB,YAAa,IACb,iBAAkB,KAClB,sBAAuB,IACvB,iBAAkB,KAClB,YAAa,KACb,iBAAkB,IAClB,SAAU,IACV,cAAe,IACf,kBAAmB,IACnB,cAAe,IACf,eAAgB,IAChB,KAAM,IACN,UAAW,IACX,OAAQ,KACR,MAAO,KACP,QAAS,IACT,IAAK,IACL,OAAQ,IACR,KAAM,KACN,MAAO,IACP,QAAS,KACT,MAAO,IACP,MAAO,IACP,OAAQ,KACR,OAAQ,KACR,YAAa,IACb,YAAa,IACb,MAAO,IACP,OAAQ,IACR,IAAK,IACL,OAAQ,IACR,KAAM,KACN,KAAM,eACN,KAAM,eACN,UAAW,IACX,eAAgB,IAChB,KAAM,IACN,MAAO,IACP,OAAQ,IACR,MAAO,IACP,MAAO,IACP,QAAS,IACT,QAAS,IACT,KAAM,IACN,MAAO,KACP,MAAO,IACP,QAAS,KACT,UAAW,IACX,WAAY,KACZ,MAAO,IACP,QAAS,KACT,KAAM,IACN,MAAO,KACP,MAAO,IACP,QAAS,KACT,UAAW,IACX,WAAY,KACZ,KAAM,IACN,OAAQ,IACR,OAAQ,IACR,KAAM,IACN,cAAe,IACf,gBAAiB,IACjB,eAAgB,IAChB,iBAAkB,IAClB,GAAI,IACJ,GAAI,IACJ,IAAK,IACL,OAAQ,IACR,MAAO,IACP,KAAM,KACN,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,KAAM,KACN,KAAM,KACN,OAAQ,IACR,QAAS,IACT,OAAQ,IACR,KAAM,KACN,KAAM,KACN,QAAS,KACT,OAAQ,IACR,QAAS,KACT,MAAO,KACP,OAAQ,IACR,MAAO,IACP,MAAO,IACP,QAAS,IACT,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,KAAM,IACN,KAAM,IACN,MAAO,IACP,MAAO,IACP,IAAK,IACL,IAAK,IACL,MAAO,IACP,OAAQ,IACR,OAAQ,IACR,KAAM,IACN,KAAM,IACN,OAAQ,IACR,MAAO,IACP,MAAO,IACP,MAAO,IACP,IAAK,eACL,IAAK,eACL,KAAM,IACN,OAAQ,IACR,OAAQ,IACR,IAAK,IACL,MAAO,IACP,IAAK,IACL,KAAM,IACN,MAAO,IACP,MAAO,IACP,QAAS,IACT,MAAO,IACP,IAAK,IACL,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,QAAS,IACT,QAAS,IACT,KAAM,IACN,OAAQ,IACR,KAAM,eACN,KAAM,eACN,KAAM,IACN,qBAAsB,IACtB,eAAgB,IAChB,MAAO,IACP,MAAO,IACP,GAAI,IACJ,GAAI,IACJ,MAAO,IACP,IAAK,IACL,MAAO,IACP,QAAS,IACT,KAAM,IACN,KAAM,IACN,OAAQ,IACR,KAAM,IACN,QAAS,IACT,IAAK,IACL,GAAI,IACJ,KAAM,eACN,KAAM,IACN,OAAQ,IACR,OAAQ,IACR,KAAM,IACN,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,SAAU,IACV,KAAM,IACN,KAAM,IACN,MAAO,IACP,QAAS,IACT,UAAW,IACX,YAAa,IACb,gBAAiB,IACjB,IAAK,IACL,KAAM,IACN,SAAU,IACV,OAAQ,IACR,MAAO,IACP,KAAM,IACN,SAAU,IACV,IAAK,IACL,IAAK,IACL,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,KAAM,IACN,QAAS,IACT,IAAK,eACL,IAAK,eACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,OAAQ,IACR,MAAO,IACP,GAAI,IACJ,GAAI,IACJ,UAAW,IACX,IAAK,IACL,OAAQ,IACR,QAAS,IACT,OAAQ,IACR,KAAM,IACN,SAAU,IACV,MAAO,IACP,QAAS,IACT,OAAQ,IACR,OAAQ,IACR,MAAO,IACP,UAAW,IACX,OAAQ,IACR,QAAS,IACT,QAAS,IACT,GAAI,IACJ,cAAe,IACf,SAAU,IACV,KAAM,IACN,KAAM,eACN,MAAO,IACP,GAAI,IACJ,GAAI,IACJ,KAAM,IACN,MAAO,IACP,IAAK,IACL,IAAK,IACL,KAAM,IACN,WAAY,IACZ,YAAa,IACb,SAAU,IACV,cAAe,IACf,mBAAoB,IACpB,cAAe,IACf,OAAQ,IACR,YAAa,IACb,SAAU,IACV,SAAU,IACV,QAAS,IACT,MAAO,IACP,MAAO,IACP,OAAQ,IACR,MAAO,IACP,KAAM,IACN,OAAQ,IACR,KAAM,IACN,QAAS,IACT,SAAU,IACV,SAAU,IACV,SAAU,IACV,KAAM,IACN,WAAY,IACZ,aAAc,IACd,OAAQ,IACR,MAAO,IACP,OAAQ,IACR,KAAM,eACN,KAAM,eACN,IAAK,IACL,IAAK,IACL,OAAQ,IACR,IAAK,eACL,IAAK,eACL,KAAM,IACN,KAAM,IACN,KAAM,eACN,OAAQ,IACR,KAAM,eACN,KAAM,eACN,YAAa,IACb,QAAS,IACT,MAAO,IACP,QAAS,IACT,KAAM,IACN,KAAM,IACN,MAAO,IACP,KAAM,KACN,OAAQ,IACR,OAAQ,IACR,MAAO,IACP,SAAU,IACV,KAAM,IACN,KAAM,IACN,MAAO,IACP,MAAO,IACP,OAAQ,IACR,MAAO,IACP,KAAM,IACN,KAAM,IACN,KAAM,IACN,OAAQ,IACR,MAAO,IACP,QAAS,IACT,MAAO,IACP,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,QAAS,IACT,OAAQ,IACR,OAAQ,IACR,MAAO,IACP,OAAQ,IACR,OAAQ,IACR,MAAO,IACP,UAAW,IACX,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,OAAQ,IACR,OAAQ,IACR,MAAO,IACP,QAAS,IACT,QAAS,IACT,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,MAAO,IACP,KAAM,IACN,IAAK,IACL,IAAK,IACL,KAAM,IACN,QAAS,IACT,MAAO,IACP,OAAQ,IACR,KAAM,IACN,GAAI,IACJ,KAAM,IACN,QAAS,IACT,SAAU,IACV,MAAO,IACP,KAAM,IACN,IAAK,IACL,IAAK,IACL,eAAgB,IAChB,mBAAoB,IACpB,qBAAsB,IACtB,OAAQ,IACR,OAAQ,IACR,IAAK,IACL,IAAK,eACL,KAAM,IACN,MAAO,IACP,MAAO,IACP,OAAQ,IACR,IAAK,IACL,IAAK,IACL,KAAM,IACN,kBAAmB,IACnB,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,cAAe,IACf,oBAAqB,IACrB,eAAgB,IAChB,aAAc,IACd,mBAAoB,IACpB,mBAAoB,IACpB,gBAAiB,IACjB,mBAAoB,IACpB,WAAY,IACZ,iBAAkB,IAClB,eAAgB,IAChB,gBAAiB,IACjB,kBAAmB,IACnB,iBAAkB,IAClB,gBAAiB,IACjB,SAAU,IACV,cAAe,IACf,eAAgB,IAChB,gBAAiB,IACjB,cAAe,IACf,iBAAkB,IAClB,mBAAoB,IACpB,kBAAmB,IACnB,iBAAkB,IAClB,cAAe,IACf,iBAAkB,IAClB,YAAa,IACb,eAAgB,IAChB,KAAM,IACN,aAAc,IACd,MAAO,IACP,MAAO,IACP,IAAK,IACL,OAAQ,IACR,WAAY,IACZ,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,KAAM,IACN,KAAM,eACN,OAAQ,IACR,QAAS,IACT,aAAc,IACd,KAAM,IACN,OAAQ,IACR,SAAU,IACV,MAAO,IACP,YAAa,IACb,OAAQ,IACR,KAAM,IACN,KAAM,eACN,IAAK,IACL,IAAK,IACL,KAAM,IACN,MAAO,IACP,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,KAAM,IACN,MAAO,IACP,MAAO,IACP,SAAU,IACV,YAAa,IACb,QAAS,IACT,GAAI,IACJ,OAAQ,IACR,OAAQ,IACR,MAAO,IACP,GAAI,IACJ,GAAI,IACJ,KAAM,IACN,OAAQ,IACR,OAAQ,IACR,MAAO,IACP,IAAK,IACL,IAAK,IACL,OAAQ,IACR,OAAQ,IACR,MAAO,IACP,MAAO,IACP,MAAO,IACP,KAAM,IACN,OAAQ,IACR,SAAU,IACV,MAAO,IACP,IAAK,IACL,IAAK,IACL,KAAM,IACN,MAAO,IACP,MAAO,IACP,OAAQ,IACR,MAAO,IACP,MAAO,IACP,QAAS,IACT,KAAM,IACN,KAAM,IACN,OAAQ,IACR,SAAU,IACV,MAAO,IACP,KAAM,IACN,IAAK,eACL,IAAK,eACL,OAAQ,IACR,MAAO,IACP,OAAQ,IACR,OAAQ,IACR,KAAM,IACN,KAAM,IACN,eAAgB,IAChB,eAAgB,IAChB,SAAU,IACV,cAAe,IACf,gBAAiB,IACjB,aAAc,IACd,IAAK,IACL,MAAO,IACP,MAAO,IACP,OAAQ,IACR,OAAQ,IACR,IAAK,IACL,OAAQ,IACR,KAAM,IACN,MAAO,IACP,KAAM,IACN,MAAO,IACP,KAAM,IACN,MAAO,IACP,MAAO,IACP,QAAS,IACT,QAAS,IACT,MAAO,IACP,YAAa,IACb,cAAe,IACf,OAAQ,IACR,SAAU,IACV,KAAM,IACN,MAAO,IACP,IAAK,IACL,KAAM,IACN,MAAO,KACP,OAAQ,IACR,OAAQ,IACR,IAAK,IACL,KAAM,IACN,OAAQ,IACR,KAAM,eACN,KAAM,eACN,OAAQ,IACR,UAAW,IACX,KAAM,IACN,MAAO,IACP,OAAQ,KACR,MAAO,IACP,OAAQ,KACR,KAAM,IACN,MAAO,IACP,OAAQ,IACR,SAAU,IACV,WAAY,IACZ,MAAO,IACP,OAAQ,IACR,SAAU,IACV,WAAY,IACZ,IAAK,IACL,OAAQ,IACR,OAAQ,IACR,mBAAoB,IACpB,aAAc,IACd,kBAAmB,IACnB,eAAgB,IAChB,oBAAqB,IACrB,YAAa,IACb,OAAQ,IACR,KAAM,IACN,MAAO,IACP,KAAM,eACN,KAAM,eACN,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,KAAM,IACN,KAAM,IACN,MAAO,IACP,gBAAiB,IACjB,YAAa,IACb,MAAO,IACP,IAAK,IACL,IAAK,IACL,OAAQ,IACR,KAAM,IACN,KAAM,IACN,QAAS,IACT,QAAS,IACT,MAAO,IACP,MAAO,IACP,QAAS,IACT,QAAS,IACT,OAAQ,IACR,OAAQ,IACR,SAAU,IACV,UAAW,IACX,YAAa,IACb,UAAW,IACX,WAAY,IACZ,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,KAAM,IACN,WAAY,IACZ,YAAa,IACb,SAAU,IACV,cAAe,IACf,mBAAoB,IACpB,cAAe,IACf,OAAQ,IACR,YAAa,IACb,SAAU,IACV,SAAU,IACV,QAAS,IACT,SAAU,IACV,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,KAAM,IACN,KAAM,IACN,KAAM,IACN,OAAQ,IACR,QAAS,IACT,KAAM,IACN,KAAM,IACN,QAAS,IACT,SAAU,IACV,cAAe,IACf,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,MAAO,IACP,MAAO,IACP,QAAS,IACT,OAAQ,IACR,OAAQ,IACR,SAAU,IACV,UAAW,IACX,UAAW,IACX,WAAY,IACZ,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,MAAO,IACP,MAAO,IACP,QAAS,IACT,OAAQ,IACR,MAAO,IACP,IAAK,IACL,OAAQ,IACR,IAAK,IACL,IAAK,IACL,KAAM,IACN,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,IAAK,IACL,IAAK,IACL,KAAM,IACN,OAAQ,IACR,IAAK,eACL,IAAK,eACL,OAAQ,IACR,UAAW,IACX,UAAW,IACX,MAAO,IACP,MAAO,IACP,SAAU,IACV,OAAQ,IACR,YAAa,IACb,SAAU,IACV,WAAY,KACZ,OAAQ,IACR,UAAW,IACX,MAAO,IACP,OAAQ,IACR,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,WAAY,IACZ,eAAgB,IAChB,WAAY,IACZ,MAAO,IACP,OAAQ,IACR,SAAU,IACV,OAAQ,IACR,KAAM,IACN,KAAM,IACN,IAAK,IACL,OAAQ,IACR,OAAQ,IACR,KAAM,eACN,KAAM,eACN,QAAS,IACT,KAAM,IACN,OAAQ,IACR,MAAO,IACP,MAAO,IACP,SAAU,IACV,aAAc,IACd,aAAc,IACd,eAAgB,IAChB,UAAW,IACX,cAAe,IACf,gBAAiB,IACjB,OAAQ,IACR,KAAM,IACN,SAAU,IACV,UAAW,IACX,QAAS,IACT,MAAO,IACP,QAAS,IACT,SAAU,IACV,KAAM,eACN,KAAM,eACN,KAAM,IACN,KAAM,IACN,MAAO,IACP,MAAO,IACP,OAAQ,IACR,OAAQ,IACR,MAAO,IACP,iBAAkB,IAClB,kBAAmB,IACnB,OAAQ,IACR,OAAQ,IACR,KAAM,IACN,KAAM,IACN,KAAM,IACN,SAAU,IACV,MAAO,IACP,MAAO,IACP,OAAQ,IACR,OAAQ,IACR,MAAO,IACP,MAAO,IACP,IAAK,IACL,IAAK,IACL,MAAO,IACP,OAAQ,IACR,OAAQ,IACR,MAAO,IACP,OAAQ,IACR,IAAK,eACL,IAAK,eACL,OAAQ,IACR,OAAQ,IACR,KAAM,IACN,MAAO,IACP,MAAO,IACP,MAAO,IACP,OAAQ,IACR,SAAU,IACV,OAAQ,IACR,MAAO,IACP,MAAO,IACP,MAAO,IACP,IAAK,IACL,SAAU,IACV,WAAY,IACZ,aAAc,IACd,iBAAkB,IAClB,MAAO,IACP,UAAW,IACX,MAAO,IACP,MAAO,IACP,KAAM,eACN,KAAM,eACN,QAAS,IACT,QAAS,IACT,QAAS,IACT,WAAY,IACZ,iBAAkB,IAClB,YAAa,IACb,YAAa,IACb,YAAa,IACb,cAAe,IACf,cAAe,IACf,eAAgB,IAChB,MAAO,IACP,eAAgB,IAChB,gBAAiB,IACjB,KAAM,IACN,KAAM,IACN,MAAO,IACP,QAAS,IACT,QAAS,IACT,MAAO,IACP,WAAY,IACZ,WAAY,IACZ,OAAQ,IACR,SAAU,IACV,OAAQ,IACR,MAAO,IACP,MAAO,IACP,MAAO,IACP,KAAM,eACN,KAAM,eACN,MAAO,IACP,OAAQ,IACR,OAAQ,IACR,KAAM,IACN,MAAO,IACP,MAAO,IACP,KAAM,IACN,KAAM,IACN,QAAS,IACT,OAAQ,IACR,WAAY,IACZ,SAAU,IACV,WAAY,IACZ,OAAQ,IACR,MAAO,IACP,UAAW,IACX,KAAM,IACN,KAAM,IACN,OAAQ,IACR,SAAU,IACV,aAAc,KACd,cAAe,KACf,aAAc,KACd,cAAe,KACf,SAAU,IACV,gBAAiB,IACjB,iBAAkB,IAClB,KAAM,IACN,KAAM,IACN,MAAO,IACP,IAAK,IACL,IAAK,IACL,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,OAAQ,IACR,IAAK,IACL,IAAK,IACL,OAAQ,IACR,MAAO,IACP,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,KAAM,IACN,KAAM,IACN,YAAa,IACb,aAAc,IACd,kBAAmB,IACnB,cAAe,IACf,cAAe,IACf,IAAK,eACL,IAAK,eACL,MAAO,IACP,MAAO,KACP,MAAO,KACP,KAAM,eACN,KAAM,eACN,MAAO,IACP,MAAO,IACP,KAAM,eACN,KAAM,eACN,OAAQ,KACR,OAAQ,KACR,OAAQ,KACR,OAAQ,KACR,OAAQ,IACR,QAAS,IACT,MAAO,IACP,MAAO,IACP,OAAQ,IACR,MAAO,IACP,MAAO,IACP,OAAQ,IACR,OAAQ,IACR,IAAK,eACL,IAAK,eACL,KAAM,eACN,KAAM,eACN,GAAI,IACJ,GAAI,IACJ,OAAQ,IACR,KAAM,eACN,KAAM,eACN,KAAM,IACN,MAAO,IACP,KAAM,IACN,MAAO,IACP,IAAK,eACL,IAAK,eACL,MAAO,IACP,MAAO,IACP,GAAI,IACJ,GAAI,IACJ,MAAO,IACP,MAAO,IACP,KAAM,IACN,KAAM,IACN,MAAO,IACP,KAAM,eACN,KAAM,eACN,OAAQ,IACR,OAAQ,IACR,MAAO,IACP,MAAO,IACP,KAAM,eACN,KAAM,eACN,OAAQ,IACR,OAAQ,IACR,MAAO,IACP,KAAM,IACN,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,KAAM,IACN,KAAM,IACN,MAAO,IACP,MAAO,IACP,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,eACL,IAAK,eACL,KAAM,IACN,KAAM,IACN,KAAM,eACN,KAAM,eACN,KAAM,eACN,KAAM,eACN,KAAM,IACN,KAAM,IACN,KAAM,IACN,KAAM,IACN,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,IAAK,IACL,IAAK,IACL,KAAM,IACN,KAAM,IACN,OAAQ,IACR,eAAgB,IAChB,KAAM,IACN,KAAM,IACN,IAAK,IACL,IAAK,eACL,KAAM,IACN,KAAM,IACN,QAAS,IACT,KAAM,IACN,KAAM,eACN,KAAM,eACN,KAAM,eACN,IAAK,IACL,KAAM,GACP,E,G,E,Q,S,C,C,C,MC39CA,EACA,EArpBI,EAMA,EACA,EAsBJ,SAAS,EAAW,CAAO,CAAE,CAAO,EACnC,IAAI,CAAC,OAAO,CAAG,EACf,IAAI,CAAC,OAAO,CAAG,EACZ,MAAM,iBAAiB,EAAE,MAAM,iBAAiB,CAAC,IAAI,CAAE,EAC3D,CAIA,SAAS,IAET,CAiLA,SAAS,EAAY,CAAC,CAAC,CAAC,EAGvB,OAFA,EAAE,UAAU,CAAG,EAAE,UAAU,CAC3B,EAAE,YAAY,CAAG,EAAE,YAAY,CACxB,CACR,CAwMA,SAAS,EAAc,CAAE,CAAC,CAAU,CAAC,CAAY,EAKhD,IAJA,IAAI,EAAU,EAAG,OAAO,CACpB,EAAa,KAEb,EAAI,EAAG,MAAM,CACX,KAAI,CACT,IAAI,EAAI,CAAE,CAAC,EAAE,CACT,EAAQ,EAAE,KAAK,CACf,EAAQ,EAAE,KAAK,CACf,EAAM,EAAM,OAAO,CAAC,KACxB,GAAG,EAAI,EACN,IAAI,EAAS,EAAE,MAAM,CAAG,EAAM,KAAK,CAAC,EAAE,GAClC,EAAY,EAAM,KAAK,CAAC,EAAI,GAC5B,EAAW,AAAW,UAAX,GAAsB,OAErC,EAAY,EACZ,EAAS,KACT,EAAW,AAAU,UAAV,GAAqB,EAGjC,CAAA,EAAE,SAAS,CAAG,EAEE,CAAA,IAAb,IACe,MAAd,IACF,EAAa,CAAC,EAEd,EAAM,EAAa,EAAa,CAAC,IAGlC,CAAY,CAAC,EAAS,CAAG,CAAU,CAAC,EAAS,CAAG,EAChD,EAAE,GAAG,CAAG,EAAU,KAAK,CACvB,EAAW,kBAAkB,CAAC,EAAU,GAE1C,CAEA,IADA,IAAI,EAAI,EAAG,MAAM,CACX,KAAI,CAET,IAAI,EAAS,AADb,CAAA,EAAI,CAAE,CAAC,EAAE,AAAF,EACQ,MAAM,CAClB,IACY,QAAX,GACF,CAAA,EAAE,GAAG,CAAG,EAAU,GAAG,AAAH,EACJ,UAAX,GACH,CAAA,EAAE,GAAG,CAAG,CAAY,CAAC,GAAU,GAAG,AAAH,EAKlC,CACA,IAAI,EAAM,EAAQ,OAAO,CAAC,IACvB,CAAA,EAAI,GACN,EAAS,EAAG,MAAM,CAAG,EAAQ,KAAK,CAAC,EAAE,GACrC,EAAY,EAAG,SAAS,CAAG,EAAQ,KAAK,CAAC,EAAI,KAE7C,EAAS,KACT,EAAY,EAAG,SAAS,CAAG,GAG5B,IAAI,EAAK,EAAG,GAAG,CAAG,CAAY,CAAC,GAAU,GAAG,CAI5C,GAHA,EAAW,YAAY,CAAC,EAAG,EAAU,EAAQ,IAG1C,EAAG,MAAM,CAaX,OAHA,EAAG,YAAY,CAAG,EAClB,EAAG,UAAU,CAAG,EAET,CAAA,EAXP,GADA,EAAW,UAAU,CAAC,EAAG,EAAU,GAChC,EACF,IAAK,KAAU,EACV,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,EAAY,IACpD,EAAW,gBAAgB,CAAC,EAUjC,CAsCA,SAAS,EAAO,CAAM,CAAE,CAAM,EAC7B,IAAK,IAAI,KAAK,EACT,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,EAAQ,IAChD,CAAA,CAAM,CAAC,EAAE,CAAG,CAAM,CAAC,EAAE,AAAF,CAGtB,CAuEA,SAAS,IACR,IAAI,CAAC,cAAc,CAAG,CAAC,CACxB,C,E,E,O,C,Y,I,E,A,G,E,G,E,E,O,C,a,I,E,A,G,E,GArmBI,EAAA,A,E,SAAA,SAAA,CAMA,EAAW,AAAI,OAAO,aAAa,AADnB,mJACiC,MAAM,CAAC,KAAK,CAAC,EAAE,IAAI,0CACpE,EAAiB,AAAI,OAAO,IAAI,AAFhB,mJAE8B,MAAM,CAAC,EAAS,MAAM,CAAC,QAAS,AAF9D,mJAE4E,MAAM,CAAC,EAAS,MAAM,CAAC,QA2BvH,EAAW,SAAS,CAAG,AAAI,QAC3B,EAAW,SAAS,CAAC,IAAI,CAAG,mCAM5B,EAAU,SAAS,CAAG,CACrB,MAAM,SAAS,CAAM,CAAC,CAAY,CAAC,CAAS,EAC3C,IAAI,EAAa,IAAI,CAAC,UAAU,CAChC,EAAW,aAAa,GACxB,EAAM,EAAc,EAAe,CAAC,GACpC,AAKF,SAAe,CAAM,CAAC,CAAgB,CAAC,CAAS,CAAC,CAAU,CAAC,CAAY,EAcvE,SAAS,EAAe,CAAC,EACxB,IAd0B,EActB,EAAI,EAAE,KAAK,CAAC,EAAE,WAClB,AAAI,OAAO,cAAc,CAAC,IAAI,CAAC,EAAW,GAClC,CAAS,CAAC,EAAE,CACX,AAAgB,MAAhB,EAAE,MAAM,CAAC,GAdlB,AAAI,CAHsB,EAkBA,SAAS,EAAE,MAAM,CAAC,GAAG,OAAO,CAAC,IAAI,QAfhD,MAKH,OAAO,YAAY,CAHT,MAAU,CAAA,AAD3B,CAAA,GAAQ,KAAR,GACmC,EAAA,EACnB,MAAU,CAAA,AAAO,KAAP,CAAO,GAI1B,OAAO,YAAY,CAAC,IAU3B,EAAa,KAAK,CAAC,oBAAoB,GAChC,EAET,CACA,SAAS,EAAW,CAAG,EACtB,GAAG,EAAI,EAAM,CACZ,IAAI,EAAK,EAAO,SAAS,CAAC,EAAM,GAAK,OAAO,CAAC,WAAW,EACxD,CAAA,GAAS,EAAS,GAClB,EAAW,UAAU,CAAC,EAAG,EAAE,EAAI,GAC/B,EAAQ,CACT,CACD,CACA,SAAS,EAAS,CAAC,CAAC,CAAC,EACpB,KAAM,GAAG,GAAY,CAAA,EAAI,EAAY,IAAI,CAAC,EAAA,GAEzC,EAAU,AADV,CAAA,EAAY,EAAE,KAAK,AAAL,EACQ,CAAC,CAAC,EAAE,CAAC,MAAM,CACjC,EAAQ,UAAU,EAGnB,CAAA,EAAQ,YAAY,CAAG,EAAE,EAAU,CACpC,CASA,IARA,IAAI,EAAY,EACZ,EAAU,EACV,EAAc,sBACd,EAAU,EAAW,OAAO,CAE5B,EAAa,CAAC,CAAC,aAAa,CAAgB,EAAE,CAC9C,EAAW,CAAC,EACZ,EAAQ,IACD,CACV,GAAG,CACF,IAAI,EAAW,EAAO,OAAO,CAAC,IAAI,GAClC,GAAG,EAAS,EAAE,CACb,GAAG,CAAC,EAAO,MAAM,CAAC,GAAO,KAAK,CAAC,SAAS,CACvC,IAAI,EAAM,EAAW,GAAG,CACjB,EAAO,EAAI,cAAc,CAAC,EAAO,MAAM,CAAC,IAC5C,EAAI,WAAW,CAAC,GAChB,EAAW,cAAc,CAAG,CAChC,CACA,MACD,CAIA,OAHG,EAAS,GACX,EAAW,GAEL,EAAO,MAAM,CAAC,EAAS,IAC9B,IAAK,IACJ,IAAI,EAAM,EAAO,OAAO,CAAC,IAAI,EAAS,GAClC,EAAU,EAAO,SAAS,CAAC,EAAW,EAAG,GAAK,OAAO,CAAC,eAAgB,IACtE,EAAS,EAAW,GAAG,EACxB,CAAA,EAAI,GAEA,EAAU,EAAO,SAAS,CAAC,EAAS,GAAG,OAAO,CAAC,UAAU,IACzD,EAAa,KAAK,CAAC,iBAAiB,EAAQ,oBAAoB,EAAO,OAAO,EAC9E,EAAM,EAAS,EAAE,EAAQ,MAAM,EACvB,EAAQ,KAAK,CAAC,SACtB,EAAU,EAAQ,OAAO,CAAC,UAAU,IACpC,EAAa,KAAK,CAAC,iBAAiB,EAAQ,uBAC5C,EAAM,EAAS,EAAE,EAAQ,MAAM,EAEtC,IAAI,EAAa,EAAO,UAAU,CAC9B,EAAW,EAAO,OAAO,EAAI,EAE3B,GADkB,GAAY,EAAO,OAAO,EAAE,EAAO,OAAO,CAAC,WAAW,IAAM,EAAQ,WAAW,GAC5E,CAE1B,GADM,EAAW,UAAU,CAAC,EAAO,GAAG,CAAC,EAAO,SAAS,CAAC,GACrD,EACF,IAAK,IAAI,KAAU,EACd,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,EAAY,IACpD,EAAW,gBAAgB,CAAC,GAI3B,GACM,EAAa,UAAU,CAAC,iBAAiB,EAAQ,2CAA2C,EAAO,OAAO,CAE/G,MACC,EAAW,IAAI,CAAC,EAGvB,CAAA,IACA,KAED,KAAK,IACJ,GAAS,EAAS,GAClB,EAAM,AAybV,SAA0B,CAAM,CAAC,CAAK,CAAC,CAAU,EAChD,IAAI,EAAM,EAAO,OAAO,CAAC,KAAK,GAC9B,GAAG,EAAI,CACN,IAAI,EAAQ,EAAO,SAAS,CAAC,EAAM,GAAK,KAAK,CAAC,8BAC9C,GAAG,EAGF,OAFU,CAAK,CAAC,EAAE,CAAC,MAAM,CACzB,EAAW,qBAAqB,CAAC,CAAK,CAAC,EAAE,CAAE,CAAK,CAAC,EAAE,EAC5C,EAAI,CAIb,CACA,OAAO,EACR,EAtc2B,EAAO,EAAS,GACvC,KACD,KAAK,IACJ,GAAS,EAAS,GAClB,EAAM,AA+XV,SAAkB,CAAM,CAAC,CAAK,CAAC,CAAU,CAAC,CAAY,EAErD,GACK,MAFK,EAAO,MAAM,CAAC,EAAM,GAG7B,CAAA,GAAG,AAA6B,MAA7B,EAAO,MAAM,CAAC,EAAQ,GAAW,CACnC,IAAI,EAAM,EAAO,OAAO,CAAC,MAAM,EAAM,GAErC,GAAG,EAAI,EAEN,OADA,EAAW,OAAO,CAAC,EAAO,EAAM,EAAE,EAAI,EAAM,GACrC,EAAI,EAEX,EAAa,KAAK,CAAC,mBAGrB,CAEC,MAGD,GAAG,AAA4B,UAA5B,EAAO,MAAM,CAAC,EAAM,EAAE,GAAe,CACvC,IAAI,EAAM,EAAO,OAAO,CAAC,MAAM,EAAM,GAIrC,OAHA,EAAW,UAAU,GACrB,EAAW,UAAU,CAAC,EAAO,EAAM,EAAE,EAAI,EAAM,GAC/C,EAAW,QAAQ,GACZ,EAAI,CACZ,CAGA,IAAI,EAAS,AA8Ef,SAAe,CAAM,CAAC,CAAK,EAE1B,IADI,EACA,EAAM,EAAE,CAIZ,IAFA,AADU,6CACN,SAAS,CAAG,EAChB,AAFU,6CAEN,IAAI,CAAC,GACH,EAAQ,AAHJ,6CAGQ,IAAI,CAAC,IAEtB,GADA,EAAI,IAAI,CAAC,GACN,CAAK,CAAC,EAAE,CAAC,OAAO,CAErB,EAxFqB,EAAO,GACtB,EAAM,EAAO,MAAM,CACvB,GAAG,EAAI,GAAK,YAAY,IAAI,CAAC,CAAM,CAAC,EAAE,CAAC,EAAE,EAAE,CAC1C,IAAI,EAAO,CAAM,CAAC,EAAE,CAAC,EAAE,CACnB,EAAQ,CAAA,EACR,EAAQ,CAAA,EACT,EAAI,IACH,YAAY,IAAI,CAAC,CAAM,CAAC,EAAE,CAAC,EAAE,GAC/B,EAAQ,CAAM,CAAC,EAAE,CAAC,EAAE,CACpB,EAAQ,EAAI,GAAK,CAAM,CAAC,EAAE,CAAC,EAAE,EACrB,YAAY,IAAI,CAAC,CAAM,CAAC,EAAE,CAAC,EAAE,GACrC,CAAA,EAAQ,CAAM,CAAC,EAAE,CAAC,EAAE,AAAF,GAGpB,IAAI,EAAY,CAAM,CAAC,EAAI,EAAE,CAI7B,OAHA,EAAW,QAAQ,CAAC,EAAM,EAAO,GACjC,EAAW,MAAM,GAEV,EAAU,KAAK,CAAC,CAAS,CAAC,EAAE,CAAC,MAAM,AAC3C,EAED,OAAO,EACR,EAjbmB,EAAO,EAAS,EAAW,GAC1C,KACD,SACC,GAAS,EAAS,GAClB,IAAI,EAAK,IAAI,EACT,EAAe,CAAU,CAAC,EAAW,MAAM,CAAC,EAAE,CAAC,YAAY,CAE3D,EAAM,AA4Dd,SAA+B,CAAM,CAAC,CAAK,CAAC,CAAE,CAAC,CAAY,CAAC,CAAc,CAAC,CAAY,EAOtF,SAAS,EAAa,CAAK,CAAE,CAAK,CAAE,CAAU,EACzC,EAAG,cAAc,CAAC,cAAc,CAAC,IACpC,EAAa,UAAU,CAAC,aAAe,EAAQ,cAEhD,EAAG,QAAQ,CACV,EAKA,EAAM,OAAO,CAAC,YAAa,KAAK,OAAO,CAAC,WAAY,GACpD,EAEF,CAKA,IAFA,IAFI,EACA,EACA,EAAI,EAAE,EACN,EA7OO,IA8OA,CACV,IAAI,EAAI,EAAO,MAAM,CAAC,GACtB,OAAO,GACP,IAAK,IACJ,GAAG,AAjPO,IAiPP,EACF,EAAW,EAAO,KAAK,CAAC,EAAM,GAC9B,EAjPO,OAkPF,GAAG,AAnPK,IAmPL,EACR,EAnPO,OAsPP,MAAM,AAAI,MAAM,uCAEjB,KACD,KAAK,IACL,IAAK,IACJ,GAAG,AA3PK,IA2PL,GAAc,AA7PP,IA6PO,GAQhB,GArQS,IA+PN,IACF,EAAa,OAAO,CAAC,kCACrB,EAAW,EAAO,KAAK,CAAC,EAAM,IAE/B,EAAQ,EAAE,EAEP,AADH,CAAA,EAAI,EAAO,OAAO,CAAC,EAAE,EAArB,EACK,EAEJ,EAAa,EADb,EAAQ,EAAO,KAAK,CAAC,EAAO,GACE,EAAM,GACpC,EApQY,OAuQZ,MAAM,AAAI,MAAM,2BAA4B,EAAE,gBAE1C,GAAG,AA1Qc,GA0Qd,EAER,EAAa,EADb,EAAQ,EAAO,KAAK,CAAC,EAAO,GACE,GAC9B,EAAa,OAAO,CAAC,cAAc,EAAS,uBAAuB,EAAE,OACrE,EAAQ,EAAE,EACV,EA9Qa,OAiRb,MAAM,AAAI,MAAM,kCAEjB,KACD,KAAK,IACJ,OAAO,GACP,KA3RS,EA4RR,EAAG,UAAU,CAAC,EAAO,KAAK,CAAC,EAAM,GAClC,MAxRc,EAyRd,KAxRe,EAyRf,KAxRe,EAyRd,EAzRc,EA0Rd,EAAG,MAAM,CAAG,CAAA,CACb,MA9RuB,EA+RvB,KAlSU,EAmST,KACA,MAnSa,EAoSZ,EAAG,MAAM,CAAG,CAAA,EACb,KAED,SACC,MAAM,AAAI,MAAM,oCACjB,CACA,KACD,KAAK,GAKJ,OAJA,EAAa,KAAK,CAAC,2BA9SV,GA+SN,GACF,EAAG,UAAU,CAAC,EAAO,KAAK,CAAC,EAAM,IAE3B,CACR,KAAK,IACJ,OAAO,GACP,KArTS,EAsTR,EAAG,UAAU,CAAC,EAAO,KAAK,CAAC,EAAM,GAClC,MAlTc,EAmTd,KAlTe,EAmTf,KAlTe,EAmTd,KACD,MAvTuB,EAwTvB,KA3TU,EA6Tc,MAApB,AADH,CAAA,EAAQ,EAAO,KAAK,CAAC,EAAM,EAA3B,EACS,KAAK,CAAC,MACd,EAAG,MAAM,CAAI,CAAA,EACb,EAAQ,EAAM,KAAK,CAAC,EAAE,IAExB,MAhUc,EAAA,IAiUV,GACF,CAAA,EAAQ,CADT,EAGG,AAlUmB,GAkUnB,GACF,EAAa,OAAO,CAAC,cAAc,EAAM,qBACzC,EAAa,EAAU,EAAO,KAE1B,EAAU,MAAM,CAAC,CAAY,CAAC,GAAG,GAAM,EAAM,KAAK,CAAC,qCACtD,EAAa,OAAO,CAAC,cAAc,EAAM,qBAAqB,EAAM,eAErE,EAAa,EAAO,EAAO,IAE5B,KACD,MA7UQ,EA8UP,MAAM,AAAI,MAAM,2BACjB,CAEA,OAAO,CAER,KAAK,IACJ,EAAI,GACL,SACC,GAAG,GAAI,IACN,OAAO,GACP,KA3VQ,EA4VP,EAAG,UAAU,CAAC,EAAO,KAAK,CAAC,EAAM,IACjC,EAvVa,EAwVb,KACD,MA9VS,EA+VR,EAAW,EAAO,KAAK,CAAC,EAAM,GAC9B,EA/VY,EAgWZ,KACD,MA/VsB,EAgWrB,IAAI,EAAQ,EAAO,KAAK,CAAC,EAAO,GAChC,EAAa,OAAO,CAAC,cAAc,EAAM,sBACzC,EAAa,EAAU,EAAO,EAC/B,MAlWa,EAmWZ,EAlWa,CA0Wd,MAIA,OAAO,GAIP,KAtXa,EAuXG,EAAG,OAAO,CACpB,EAAU,MAAM,CAAC,CAAY,CAAC,GAAG,GAAM,EAAS,KAAK,CAAC,qCAC1D,EAAa,OAAO,CAAC,cAAc,EAAS,qBAAqB,EAAS,gBAE3E,EAAa,EAAU,EAAU,GACjC,EAAQ,EACR,EA9XQ,EA+XR,KACD,MA5Xa,EA6XZ,EAAa,OAAO,CAAC,+BAA+B,EAAS,MAC9D,MA7Xc,EA8Xb,EAnYQ,EAoYR,EAAQ,EACR,KACD,MApYO,EAqYN,EApYqB,EAqYrB,EAAQ,EACR,KACD,MApYc,EAqYb,MAAM,AAAI,MAAM,6DACjB,CAEF,CAEA,GACD,CACD,EA1PoC,EAAO,EAAS,EAAG,EAAa,EAAe,GAC3E,EAAM,EAAG,MAAM,CASnB,GANG,CAAC,EAAG,MAAM,EAAI,AA6VrB,SAAuB,CAAM,CAAC,CAAU,CAAC,CAAO,CAAC,CAAQ,EAExD,IAAI,EAAM,CAAQ,CAAC,EAAQ,CAS3B,OARU,MAAP,IAEF,CAAA,EAAO,EAAO,WAAW,CAAC,KAAK,EAAQ,IAAvC,EACO,GACN,CAAA,EAAM,EAAO,WAAW,CAAC,KAAK,EAD/B,EAGA,CAAQ,CAAC,EAAQ,CAAE,GAEb,EAAI,CAEZ,EA1WmC,EAAO,EAAI,EAAG,OAAO,CAAC,KACpD,EAAG,MAAM,CAAG,CAAA,EACR,EAAU,IAAI,EACjB,EAAa,OAAO,CAAC,2BAGpB,GAAW,EAAI,CAGjB,IAAI,IAFA,EAAW,EAAY,EAAQ,CAAC,GAE5B,EAAI,EAAE,AAAE,EAAF,EAAM,IAAI,CACvB,IAAI,EAAI,CAAE,CAAC,EAAE,CACb,EAAS,EAAE,MAAM,EACjB,EAAE,OAAO,CAAG,EAAY,EAAQ,CAAC,EAClC,CACA,EAAW,OAAO,CAAG,EAClB,EAAc,EAAG,EAAW,IAC9B,EAAW,IAAI,CAAC,GAEjB,EAAW,OAAO,CAAG,CACtB,MACI,EAAc,EAAG,EAAW,IAC9B,EAAW,IAAI,CAAC,EAId,CAAA,EAAU,MAAM,CAAC,EAAG,GAAG,GAAK,CAAC,EAAG,MAAM,CACzC,EAAM,AA6SX,SAAiC,CAAM,CAAC,CAAU,CAAC,CAAO,CAAC,CAAc,CAAC,CAAU,EACnF,GAAG,yBAAyB,IAAI,CAAC,GAAS,CACzC,IAAI,EAAc,EAAO,OAAO,CAAC,KAAK,EAAQ,IAAI,GAC9C,EAAO,EAAO,SAAS,CAAC,EAAW,EAAE,GACzC,GAAG,OAAO,IAAI,CAAC,SACX,YAAY,IAAI,CAAC,IAQnB,CAAA,EAAO,EAAK,OAAO,CAAC,WAAW,EAA/B,EALC,EAAW,UAAU,CAAC,EAAK,EAAE,EAAK,MAAM,EAEjC,CASX,CACA,OAAO,EAAW,CACnB,EAlUmC,EAAO,EAAI,EAAG,OAAO,CAAC,EAAe,GAEnE,GAEF,CACD,CAAC,MAAM,EAAE,CACR,GAAI,aAAa,EAChB,MAAM,EAEP,EAAa,KAAK,CAAC,wBAAwB,GAC3C,EAAM,EACP,CACG,EAAI,EACN,EAAQ,EAGR,EAAW,KAAK,GAAG,CAAC,EAAS,GAAO,EAEtC,CACD,EAzKQ,EAAO,EAAa,EACxB,EAAW,IAAI,CAAC,YAAY,EAC9B,EAAW,WAAW,EACvB,CACD,EAojBA,EAAkB,SAAS,CAAG,CAC7B,WAAW,SAAS,CAAO,EAC1B,GAAG,CAAC,EAAe,IAAI,CAAC,GACvB,MAAM,AAAI,MAAM,mBAAmB,EAEpC,CAAA,IAAI,CAAC,OAAO,CAAG,CAChB,EACA,SAAS,SAAS,CAAK,CAAE,CAAK,CAAE,CAAM,EACrC,GAAG,CAAC,EAAe,IAAI,CAAC,GACvB,MAAM,AAAI,MAAM,qBAAqB,EAEtC,CAAA,IAAI,CAAC,cAAc,CAAC,EAAM,CAAG,IAAI,CAAC,MAAM,CACxC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAG,CAAC,MAAM,EAAM,MAAM,EAAM,OAAO,CAAM,CAC7D,EACA,OAAO,EACP,aAAa,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,EAAE,CAAC,SAAS,AAAA,EACjD,WAAW,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,EAAE,CAAC,OAAO,AAAA,EAC7C,SAAS,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,AAAA,EACzC,OAAO,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,EAAE,CAAC,GAAG,AAAA,EACrC,SAAS,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,AAAA,CAW1C,EAgBA,EAAoB,EACpB,EAAqB,C,G,E,Q,S,C,C,C,MEroBjBC,E,E,E,O,C,Y,I,G,I,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,QAKG,OAAMvxF,UAAkB8mF,EAAAA,KAAAA,CAI9B,OAAuB9kF,KAAO,MAA9B,AAKA,QAAuB+kF,UAAY,CAAC,OAAO,AAA3C,AAQA,YAAkBC,iBAAkB,CACnC,GAAI,CAACuK,EAEJ,IAAK,IAAMtK,KADXsK,EAAgB,IAAIvzC,IACI,CACvB79C,EAAAA,UAAAA,CACAO,EAAAA,YAAAA,CACAwmF,EAAAA,SAAAA,CACAlnF,EACAmnF,EAAAA,YAAAA,CACAC,EAAAA,SAAAA,CACA5mF,EAAAA,WAAAA,CACA,EACA,IAAK,IAAMuI,KAAKk+E,EAAUF,SAAS,CAClCwK,EAAc96F,GAAG,CAACsS,EAAGk+E,GAIxB,OAAOsK,CACR,CAKOlxF,MAAQ,IAAI29C,GAAZ39C,AAOPxG,aAAYwG,EAAQ,IAAI29C,GAAoB,CAAE,CAC7C,KAAK,GAEL,IAAI,CAAC39C,KAAK,CAAGA,CACd,CAOA,IAAWrG,MAAO,CACjB,OAAO,IAAI,CAACqG,KAAK,CAACrG,IAAI,AACvB,CAQOqtF,IAAIn2E,CAAW,CAAE,CACvB,OAAO,IAAI,CAAC7Q,KAAK,CAACgnF,GAAG,CAACn2E,EACvB,CAQO1a,IAAI0a,CAAW,CAAE,CACvB,OAAO,IAAI,CAAC7Q,KAAK,CAAC7J,GAAG,CAAC0a,IAAQ,IAC/B,CAQOjR,SAASiR,CAAW,CAAE,CAC5B,IAAM9Q,EAAI,IAAI,CAAC5J,GAAG,CAAC0a,GACnB,GAAI,CAAC9Q,EACJ,MAAM,AAAIlB,MAAM,gBAAgBgS,GAEjC,OAAO9Q,CACR,CAQO3J,IAAIya,CAAW,CAAE7Q,CAAY,CAAE,CACrC,IAAI,CAACA,KAAK,CAAC5J,GAAG,CAACya,EAAK7Q,EACrB,CAOOinF,OAAOp2E,CAAW,CAAE,CAC1B,IAAI,CAAC7Q,KAAK,CAACinF,MAAM,CAACp2E,EACnB,CAKOq2E,OAAQ,CACd,IAAI,CAAClnF,KAAK,CAACknF,KAAK,EACjB,CAKOllF,eAAeC,CAA2B,CAAE,CAClDklF,AAAAA,CAAAA,EAAAA,EAAAA,gBAAAA,AAAAA,EAAiBllF,EAAS,QAC1B,IAAMmlF,EAAWhlF,AAAAA,CAAAA,EAAAA,EAAAA,uBAAAA,AAAAA,EAAwBH,GACnCgC,EAAImjF,EAAS1mF,MAAM,CACzB,GAAIuD,EAAI,EACP,MAAM,AAAIpF,MAAM,oCAAoCoF,GAErD,IAAMlO,EAAwB,IAAI4nD,IAClC,IAAK,IAAI35C,EAAI,EAAGA,AAAIC,EAAJD,EAAOA,GAAK,EAAG,CAC9B,IAAMqjF,EAAKD,CAAQ,CAACpjF,EAAE,CAChBsjF,EAAKF,CAAQ,CAACpjF,EAAI,EAAE,CAC1BmjF,AAAAA,CAAAA,EAAAA,EAAAA,gBAAAA,AAAAA,EAAiBE,EAAI,OACrB,IAAMx2E,EAAM02E,AAAAA,AAAAA,EAAAA,cAAAA,CAAeF,IAAK/iF,WAAa,GACvCtE,EAAQ,IAAI,CAACsC,mBAAmB,CAACglF,GACvCvxF,EAAEK,GAAG,CAACya,EAAK7Q,EACZ,CACA,IAAI,CAACA,KAAK,CAAGjK,CACd,CAQOuM,oBAAoBL,CAA2B,CAAE,CACvD,GAAM,CAAA,QAACC,CAAAA,CAAQ,CAAGD,EACZ,CAAA,gBAAC0kF,CAAAA,CAAgB,CAAG,IAAI,CAACntF,WAA+B,CACxDitF,EAAQE,EAAgBxwF,GAAG,CAAC+L,IAAY,KAC9C,GAAI,CAACukF,EACJ,MAAM,AAAI5nF,MAAM,yBAAyBqD,GAE1C,IAAMnC,EAAI,IAAI0mF,EAEd,OADA1mF,EAAEiC,cAAc,CAACC,GACVlC,CACR,CAKOyC,MAAMpF,EAA0C,IAAI,CAAEoqF,EAAQ,CAAC,CAAE,CACvE,IAAMxjF,EAAI5G,GAASqqF,cAAgBC,EAAAA,aAAAA,CAC7B5xF,EAAIsH,GAASwF,eAAiBC,EAAAA,cAAAA,CAC9BsF,EAAInE,EAAE2jF,MAAM,CAACH,GACbzxF,EAAI,IAAI,CAACiK,KAAK,CACpB,GAAI,CAACjK,EAAE4D,IAAI,CACV,MAAO,CAAA,EAAGwO,EAAC,OAAA,CAAS,CAErB,IAAMy/E,EAAK5jF,EAAE2jF,MAAM,CAACH,EAAQ,GACxBznF,EAAI,CAAA,EAAGoI,EAAC,MAAA,CAAQ,CACpB,IAAK,GAAM,CAAC0I,EAAKg3E,EAAI,GAAI9xF,EAAG,CAC3B,IAAMF,EAAIgb,EACRi3E,UAAU,CAAC,IAAK,SAChBA,UAAU,CAAC,IAAK,QAChBA,UAAU,CAAC,IAAK,QAClB/nF,GAAK,CAAA,EAAGjK,EAAC,EAAG8xF,EAAE,KAAA,EAAQ/xF,EAAC,MAAA,EAASC,EAAC,EAAG+xF,EAAIrlF,KAAK,CAACpF,EAASoqF,EAAQ,GAAE,CAAE,AACpE,CAEA,OADAznF,EAAK,CAAA,EAAGjK,EAAC,EAAGqS,EAAC,OAAA,CAAS,AAEvB,CACD,C,G,E,Q,S,C,C,C,E,E,E,O,C,Q,I,G,I,E,E,QExMO,OAAes+E,EAcrBjtF,aAAc,CAAC,CAOf,IAAW2B,MAAO,CACjB,OAAQ,IAAI,CAAC3B,WAAW,CAAkBmI,IAAI,AAC/C,CAQOF,OAA+BD,CAAO,CAAyB,CACrE,OAAO,IAAI,CAACrG,IAAI,GAAKqG,EAAKG,IAAI,CAAG,IAAI,CAAG,IACzC,CAQO9B,OAA+B2B,CAAO,CAAkB,CAC9D,IAAME,EAAS,IAAI,CAACD,MAAM,CAACD,GAC3B,GAAI,CAACE,EACJ,MAAM,AAAI7C,MACT,CAAA,kBAAA,EAAqB,IAAI,CAAC1D,IAAI,CAAA,MAAA,EAASqG,EAAKG,IAAI,CAAA,CAAA,CACjD,EAED,OAAOD,CACR,CAOOlC,QAAQH,CAAW,CAAE,CAC3B,GAAM,CAAA,gBAACyC,CAAAA,CAAgB,CAAGC,AAAAA,CAAAA,EAAAA,EAAAA,SAAAA,AAAAA,EAAU1C,GACpC,IAAI,CAAC2C,cAAc,CAACF,EACrB,CAoBD,C,G,E,Q,S,C,C,C,ME1EIovF,E,E,E,O,C,a,I,G,I,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,QAKG,OAAMpxF,UAAmB2mF,EAAAA,KAAAA,CAI/B,OAAuB9kF,KAAO,OAA9B,AAKA,QAAuB+kF,UAAY,CAAC,QAAQ,AAA5C,AAQA,YAAkBC,iBAAkB,CACnC,GAAI,CAACuK,EAEJ,IAAK,IAAMtK,KADXsK,EAAgB,IAAIvzC,IACI,CACvB79C,EACAO,EAAAA,YAAAA,CACAwmF,EAAAA,SAAAA,CACAlnF,EAAAA,SAAAA,CACAmnF,EAAAA,YAAAA,CACAC,EAAAA,SAAAA,CACA5mF,EAAAA,WAAAA,CACA,EACA,IAAK,IAAMuI,KAAKk+E,EAAUF,SAAS,CAClCwK,EAAc96F,GAAG,CAACsS,EAAGk+E,GAIxB,OAAOsK,CACR,CAKOlxF,MAAiB,EAAE,AAAnBA,AAOPxG,aAAYwG,EAAiB,EAAE,CAAE,CAChC,KAAK,GAEL,IAAI,CAACA,KAAK,CAAGA,CACd,CAOA,IAAWU,QAAS,CACnB,OAAO,IAAI,CAACV,KAAK,CAACU,MAAM,AACzB,CAQOvK,IAAIic,CAAa,CAAE,CACzB,GAAM,CAAA,MAACpS,CAAAA,CAAM,CAAG,IAAI,CACpB,OAAOoS,EAAQ,IAAI,CAAC1R,MAAM,CAAGV,CAAK,CAACoS,EAAM,CAAG,IAC7C,CAQOxS,SAASwS,CAAa,CAAE,CAC9B,IAAMrS,EAAI,IAAI,CAAC5J,GAAG,CAACic,GACnB,GAAI,CAACrS,EACJ,MAAM,AAAIlB,MAAM,wBAAwBuT,GAEzC,OAAOrS,CACR,CAQO3J,IAAIgc,CAAa,CAAEpS,CAAY,CAAE,CACvC,IAAI,CAACA,KAAK,CAACoS,EAAM,CAAGpS,CACrB,CAOO9B,KAAK,GAAGgqF,CAAe,CAAE,CAC/B,IAAI,CAACloF,KAAK,CAAC9B,IAAI,IAAIgqF,EACpB,CAOOzD,KAAM,CACZ,OAAO,IAAI,CAACzkF,KAAK,CAACykF,GAAG,IAAM,IAC5B,CAOO0D,UAAW,CACjB,IAAMpoF,EAAI,IAAI,CAAC0kF,GAAG,GAClB,GAAI,CAAC1kF,EACJ,MAAM,AAAIlB,MAAM,0BAEjB,OAAOkB,CACR,CAOOqoF,OAAQ,CACd,OAAO,IAAI,CAACpoF,KAAK,CAACooF,KAAK,IAAM,IAC9B,CAOOC,YAAa,CACnB,IAAMtoF,EAAI,IAAI,CAACqoF,KAAK,GACpB,GAAI,CAACroF,EACJ,MAAM,AAAIlB,MAAM,4BAEjB,OAAOkB,CACR,CAKOiC,eAAeC,CAA2B,CAAE,CAClDklF,AAAAA,CAAAA,EAAAA,EAAAA,gBAAAA,AAAAA,EAAiBllF,EAAS,SAC1B,IAAMmlF,EAAWhlF,AAAAA,CAAAA,EAAAA,EAAAA,uBAAAA,AAAAA,EAAwBH,EACzC,CAAA,IAAI,CAACjC,KAAK,CAAGonF,EAAS9yE,GAAG,CAACvK,AAAAA,GAAM,IAAI,CAACzH,mBAAmB,CAACyH,GAC1D,CAQOzH,oBAAoBL,CAA2B,CAAE,CACvD,GAAM,CAAA,QAACC,CAAAA,CAAQ,CAAGD,EACZ,CAAA,gBAAC0kF,CAAAA,CAAgB,CAAG,IAAI,CAACntF,WAAgC,CACzDitF,EAAQE,EAAgBxwF,GAAG,CAAC+L,IAAY,KAC9C,GAAI,CAACukF,EACJ,MAAM,AAAI5nF,MAAM,yBAAyBqD,GAE1C,IAAMnC,EAAI,IAAI0mF,EAEd,OADA1mF,EAAEiC,cAAc,CAACC,GACVlC,CACR,CAKOyC,MAAMpF,EAA0C,IAAI,CAAEoqF,EAAQ,CAAC,CAAE,CACvE,IAAM1xF,EAAIsH,GAASwF,eAAiBC,EAAAA,cAAAA,CAC9BsF,EAAK/K,AAAAA,CAAAA,GAASqqF,cAAgBC,CAAAA,EAAAA,EAAAA,aAAAA,AAAAA,CAAAA,EAAeC,MAAM,CAACH,GACpDzxF,EAAI,IAAI,CAACiK,KAAK,CACpB,GAAI,CAACjK,EAAE2K,MAAM,CACZ,MAAO,CAAA,EAAGyH,EAAC,QAAA,CAAU,CAEtB,IAAIpI,EAAI,CAAA,EAAGoI,EAAC,OAAA,CAAS,CACrB,IAAK,IAAM4B,KAAMhU,EAChBgK,GAAK,CAAA,EAAGjK,EAAC,EAAGiU,EAAGvH,KAAK,CAACpF,EAASoqF,EAAQ,GAAE,CAAE,CAG3C,OADAznF,EAAK,CAAA,EAAGjK,EAAC,EAAGqS,EAAC,QAAA,CAAU,AAExB,CACD,C,G,E,Q,S,C,C,C,E,E,E,O,C,e,I,G,I,E,E,S,E,E,S,E,E,QEvMO,OAAM9H,UAAqBomF,EAAAA,KAAAA,CAIjC,OAAuB9kF,KAAO,SAA9B,AAKA,QAAuB+kF,UAAY,CAAC,OAAQ,QAAQ,AAApD,AAKO1mF,CAAAA,MAAQ,CAAA,CAARA,AAOPxG,aAAYwG,EAAQ,CAAA,CAAK,CAAE,CAC1B,KAAK,GAEL,IAAI,CAACA,KAAK,CAAGA,CACd,CAKOgC,eAAeC,CAA2B,CAAE,CAElD,OADAsmF,AAAAA,CAAAA,EAAAA,EAAAA,4BAAAA,AAAAA,EAA6BtmF,GACrBA,EAAQC,OAAO,EACtB,IAAK,OACJ,IAAI,CAAClC,KAAK,CAAG,CAAA,EACb,MAED,KAAK,QACJ,IAAI,CAACA,KAAK,CAAG,CAAA,EACb,MAED,SACC,KAAMmnF,AAAAA,CAAAA,EAAAA,EAAAA,gBAAAA,AAAAA,EAAiBllF,EAAS,GAElC,CACD,CAKOO,MAAMpF,EAA0C,IAAI,CAAEoqF,EAAQ,CAAC,CAAE,CACvE,IAAMr/E,EAAK/K,AAAAA,CAAAA,GAASqqF,cAAgBC,CAAAA,EAAAA,EAAAA,aAAAA,AAAAA,CAAAA,EAAeC,MAAM,CAACH,GAC1D,OAAO,IAAI,CAACxnF,KAAK,CAAG,CAAA,EAAGmI,EAAC,OAAA,CAAS,CAAG,CAAA,EAAGA,EAAC,QAAA,CAAU,AACnD,CACD,C,G,E,Q,S,C,C,C,E,E,E,O,C,Y,I,G,I,E,E,S,E,E,S,E,E,QE/CO,OAAM0+E,UAAkBJ,EAAAA,KAAAA,CAI9B,OAAuB9kF,KAAO,MAA9B,AAKA,QAAuB+kF,UAAY,CAAC,OAAO,AAA3C,AAYAltF,aAAYwG,EAAQ,IAAI0F,WAAW,EAAE,CAAE,CACtC,KAAK,GAEL,IAAI,CAAC1F,KAAK,CAAGA,CACd,CAKOgC,eAAeC,CAA2B,CAAE,CAClDklF,AAAAA,CAAAA,EAAAA,EAAAA,gBAAAA,AAAAA,EAAiBllF,EAAS,QAC1B,IAAMoV,EAAOkwE,AAAAA,AAAAA,EAAAA,cAAAA,CAAetlF,IAAUqC,WAAa,EACnD,CAAA,IAAI,CAACtE,KAAK,CAAGyoF,AAAAA,CAAAA,EAAAA,EAAAA,YAAAA,AAAAA,EAAapxE,EAC3B,CAKO7U,MAAMpF,EAA0C,IAAI,CAAEoqF,EAAQ,CAAC,CAAE,CACvE,IAAM1xF,EAAIsH,GAASwF,eAAiBC,EAAAA,cAAAA,CAC9BgC,EAAIzH,GAASsrF,aAAeC,EAAAA,YAAAA,CAC5BxgF,EAAK/K,AAAAA,CAAAA,GAASqqF,cAAgBC,CAAAA,EAAAA,EAAAA,aAAAA,AAAAA,CAAAA,EAAeC,MAAM,CAACH,GACtDznF,EAAI,CAAA,EAAGoI,EAAC,MAAA,CAAQ,CACpB,GAAItD,EAAI,EACP,IAAK,IAAI7O,EAAI4yF,AAAAA,CAAAA,EAAAA,EAAAA,YAAAA,AAAAA,EAAa,IAAI,CAAC5oF,KAAK,EAAGhK,EAAGA,EAAIA,EAAEoa,KAAK,CAACvL,GACrD9E,GAAK,CAAA,EAAGjK,EAAC,EAAGqS,EAAC,EAAGnS,EAAEoa,KAAK,CAAC,EAAGvL,GAAE,CAAE,MAGhC9E,GAAK,CAAA,EAAGjK,EAAC,EAAGqS,EAAC,EAAGygF,AAAAA,CAAAA,EAAAA,EAAAA,YAAAA,AAAAA,EAAa,IAAI,CAAC5oF,KAAK,EAAC,CAAE,CAG3C,OADAD,EAAK,CAAA,EAAGjK,EAAC,EAAGqS,EAAC,OAAA,CAAS,AAEvB,CACD,C,G,E,Q,S,C,C,C,M,E,E,EE7DA,SAASipF,EAAcpxF,CAAsB,EAC5C,GAAI,AAAiB,UAAjB,OAAOA,GAAsB,CAAC8oF,OAAOC,SAAS,CAAC/oF,GAElD,MAAM,AAAInB,MAAM,yBAAyBmB,EAE3C,C,E,E,O,C,e,I,G,E,E,S,E,E,S,E,E,QAKO,OAAM8mF,UAAqBL,EAAAA,KAAAA,CAIjC,OAAuB9kF,KAAO,SAA9B,AAKA,QAAuB+kF,UAAY,CAAC,UAAU,AAA9C,AAKO1mF,CAAAA,MAAyB,CAAzBA,AAOPxG,aAAYwG,EAAyB,CAAC,CAAE,CACvC,KAAK,GAELoxF,EAAcpxF,GACd,IAAI,CAACA,KAAK,CAAGA,CACd,CAOOipF,UAAW,CACjB,OAAOC,OAAO,IAAI,CAAClpF,KAAK,CACzB,CAOOmpF,UAAW,CACjB,MAAOL,CAAO,IAAI,CAAC9oF,KAAK,AACzB,CAKOgC,eAAeC,CAA2B,CAAE,CAClDklF,AAAAA,CAAAA,EAAAA,EAAAA,gBAAAA,AAAAA,EAAiBllF,EAAS,WAC1B,IAAMoV,EAAOkwE,AAAAA,AAAAA,EAAAA,cAAAA,CAAetlF,IAAUqC,WAAa,GACnD,GAAI,CAAC,aAAaF,IAAI,CAACiT,GACtB,MAAM,AAAIxY,MAAM,yBAAyBwY,GAE1C,IAAMm2C,EAAM,CAACn2C,CACb,CAAA,IAAI,CAACrX,KAAK,CAAGwtD,EAzEC,kBAyEgBA,EAAM,kBAAW07B,OAAO7xE,GAAQm2C,CAC/D,CAKOhrD,MAAMpF,EAA0C,IAAI,CAAEoqF,EAAQ,CAAC,CAAE,CACvE,IAAMr/E,EAAK/K,AAAAA,CAAAA,GAASqqF,cAAgBC,CAAAA,EAAAA,EAAAA,aAAAA,AAAAA,CAAAA,EAAeC,MAAM,CAACH,GACpDzxF,EAAI,IAAI,CAACiK,KAAK,CAEpB,OADAoxF,EAAcr7F,GACP,CAAA,EAAGoS,EAAC,SAAA,EAAYpS,EAAC,UAAA,CAAY,AACrC,CACD,C,G,E,Q,S,C,C,C,E,E,E,O,C,Y,I,G,I,E,E,S,E,E,S,E,E,QElFO,OAAMgxF,UAAkBN,EAAAA,KAAAA,CAI9B,OAAuB9kF,KAAO,MAA9B,AAKA,QAAuB+kF,UAAY,CAAC,OAAO,AAA3C,AAKO1mF,CAAAA,MAAQ,CAARA,AAOPxG,aAAYwG,EAAQ,CAAC,CAAE,CACtB,KAAK,GAEL,IAAI,CAACA,KAAK,CAAGA,CACd,CAKOgC,eAAeC,CAA2B,CAAE,CAClDklF,AAAAA,CAAAA,EAAAA,EAAAA,gBAAAA,AAAAA,EAAiBllF,EAAS,QAC1B,IAAMoV,EAAOkwE,AAAAA,AAAAA,EAAAA,cAAAA,CAAetlF,IAAUqC,WAAa,GACnD,GAAI,CAAC,wBAAwBF,IAAI,CAACiT,GACjC,MAAM,AAAIxY,MAAM,sBAAsBwY,EAEvC,CAAA,IAAI,CAACrX,KAAK,CAAG,CAACqX,CACf,CAKO7U,MAAMpF,EAA0C,IAAI,CAAEoqF,EAAQ,CAAC,CAAE,CACvE,IAAMr/E,EAAK/K,AAAAA,CAAAA,GAASqqF,cAAgBC,CAAAA,EAAAA,EAAAA,aAAAA,AAAAA,CAAAA,EAAeC,MAAM,CAACH,GACpDzxF,EAAI,IAAI,CAACiK,KAAK,CACpB,MAAO,CAAA,EAAGmI,EAAC,MAAA,EAASpS,EAAC,OAAA,CAAS,AAC/B,CACD,C,G,E,Q,S,C,C,C,E,E,E,O,C,c,I,G,I,E,E,S,E,E,S,E,E,QE/CO,OAAMoK,UAAoBsmF,EAAAA,KAAAA,CAIhC,OAAuB9kF,KAAO,QAA9B,AAKA,QAAuB+kF,UAAY,CAAC,SAAS,AAA7C,AAKO1mF,CAAAA,MAAQ,EAARA,AAOPxG,aAAYwG,EAAQ,EAAE,CAAE,CACvB,KAAK,GAEL,IAAI,CAACA,KAAK,CAAGA,CACd,CAKOgC,eAAeC,CAA2B,CAAE,CAClDklF,AAAAA,CAAAA,EAAAA,EAAAA,gBAAAA,AAAAA,EAAiBllF,EAAS,UAC1B,IAAI,CAACjC,KAAK,CAAGunF,AAAAA,AAAAA,EAAAA,cAAAA,CAAetlF,IAAUqC,WAAa,EACpD,CAKO9B,MAAMpF,EAA0C,IAAI,CAAEoqF,EAAQ,CAAC,CAAE,CACvE,IAAMr/E,EAAK/K,AAAAA,CAAAA,GAASqqF,cAAgBC,CAAAA,EAAAA,EAAAA,aAAAA,AAAAA,CAAAA,EAAeC,MAAM,CAACH,GACpD3xF,EAAI,IAAI,CAACmK,KAAK,CAClB8nF,UAAU,CAAC,IAAK,SAChBA,UAAU,CAAC,IAAK,QAChBA,UAAU,CAAC,IAAK,QAClB,MAAO,CAAA,EAAG3/E,EAAC,QAAA,EAAWtS,EAAC,SAAA,CAAW,AACnC,CACD,C,G,E,Q,S,C,C,C,E,E,E,O,C,Q,I,G,E,E,O,C,U,I,G,I,E,E,S,E,E,S,E,E,SE7CA,IAAMw7F,EAAOj5F,AAAAA,EAAUN,EAuJhB,OAAesB,EAoFXswF,YAAc,CAAA,CAAdA,AAKAC,CAAAA,WAAa,CAAA,CAAbA,AAKAC,CAAAA,WAAa,CAAA,CAAbA,AAOVpwF,aAAYC,CAA0B,CAAE,CACvC,IAAI,CAACC,OAAO,CAAGD,EAAKC,OAAO,CAC3B,IAAI,CAACyB,IAAI,CAAG1B,EAAK0B,IAAI,CACrB,IAAI,CAAChB,OAAO,CAAGV,EAAKU,OAAO,CAC3B,IAAI,CAACG,IAAI,CAAGD,AAAAA,CAAAA,EAAAA,EAAAA,aAAAA,AAAAA,EAAcZ,EAAKU,OAAO,EACtC,IAAI,CAACR,IAAI,CAAGF,EAAKE,IAAI,EAAI,KACzB,IAAI,CAACN,QAAQ,CAAGI,EAAKJ,QAAQ,EAAI,KACjC,IAAI,CAACO,IAAI,CAAGH,EAAKG,IAAI,EAAI,KACzB,IAAI,CAACC,GAAG,CAAGJ,EAAKI,GAAG,EAAI,KACvB,IAAI,CAACC,GAAG,CAAGL,EAAKK,GAAG,EAAI,KACvB,IAAI,CAACR,KAAK,CAAGG,EAAKH,KAAK,EAAI,KAC3B,IAAI,CAACC,KAAK,CAAGE,EAAKF,KAAK,EAAI,KAC3B,IAAI,CAACQ,KAAK,CAAGN,EAAKM,KAAK,EAAI,KAC3B,IAAI,CAACC,KAAK,CAAGP,EAAKO,KAAK,EAAI,KAC3B,IAAI,CAAC6vF,SAAS,CAAGpwF,EAAK4B,QAAQ,EAAI,KAClC,IAAI,CAACyuF,SAAS,CAAGrwF,EAAKyC,QAAQ,EAAI,KAClC,IAAI,CAAC6tF,YAAY,CAAGtwF,EAAK+B,WAAW,EAAI,IACzC,CAOA,IAAWwuF,gBAAiB,CAC3B,OAAO,IAAI,CAACtwF,OAAO,CAACuwF,eAAe,AACpC,CAOA,IAAWvtF,YAAa,CACvB,GAAI,IAAI,CAACstF,cAAc,CAAE,CACxB,GAAM,CAAA,KAAC1vF,CAAAA,CAAK,CAAG,IAAI,CACnB,OAAOA,EAAK8c,SAAS,CAAC,EAAG9c,EAAKmS,OAAO,CAAC,KACvC,CACA,OAAO,IACR,CAOA,IAAWy9E,YAAa,CACvB,GAAM,CAAA,KAAC5vF,CAAAA,CAAK,CAAG,IAAI,QACnB,AAAI,IAAI,CAAC0vF,cAAc,CACf1vF,EAAK8c,SAAS,CAAC9c,EAAKmS,OAAO,CAAC,KAAO,GAEpCnS,CACR,CAQA,MAAa6vF,QAAS,CAErB,OADA,IAAI,CAACC,aAAa,GACX,IAAI,CAACC,OAAO,EACpB,CAOA,MAAaxvF,MAAO,CACnB,IAAI,CAACuvF,aAAa,GAClB,IAAMD,EAAS,MAAM,IAAI,CAACE,OAAO,GACjC,OAAOF,EAASG,AAAAA,CAAAA,EAAAA,EAAAA,cAAAA,AAAAA,EAAeH,GAAU,IAC1C,CAQA,MAAaI,QACZjwF,CAAY,CACZ8C,EAAqC,CAAC,CAAC,CACtC,CACD,IAAI,CAACgtF,aAAa,GAClB,MAAM,IAAI,CAACI,QAAQ,CAAClwF,EAAM8C,EAC3B,CAQA,MAAavB,QAAkDf,CAAQ,CAAE,CACxE,IAAIiF,EACJ,GAAI,IAAI,CAAC4pF,UAAU,CAClB,MAAM,AAAI9qF,MAAM,kCAEjB,CAAA,IAAI,CAAC8qF,UAAU,CAAG,IAAI,CAACD,WAAW,CAAG,CAAA,EACrC,GAAI,CACH3pF,EAAI,MAAMjF,EAAM,IAAI,CACrB,QAAU,CACT,IAAI,CAAC4uF,WAAW,CAAG,CAAA,CACpB,CACA,OAAO3pF,CACR,CASA,MAAa0qF,cACZnwF,CAAY,CACZW,EAA0B,IAAI,CAC9BmC,EAAqC,CAAC,CAAC,CACtC,CACD,IAAMstF,EAAUzvF,AAAa,OAAbA,EAAoBX,EAAOW,EAErC,CAAA,kBAAC0vF,CAAiB,CAAA,YAAEC,CAAAA,CAAY,CAAGxtF,EAEnC,CAAA,KAACjC,CAAI,CAAA,KAAEvB,CAAI,CAAA,MAAEG,CAAK,CAAA,MAAEC,CAAAA,CAAM,CAAG,IAAI,CAEnC6wF,EAAO,CAAA,EACX,OAAQ1vF,GACP,KAAKG,AAAAA,EAAAA,QAAAA,CAASC,IAAI,CAGlB,KAAKD,AAAAA,EAAAA,QAAAA,CAASc,aAAa,CAG3B,KAAKd,AAAAA,EAAAA,QAAAA,CAASwvF,SAAS,CALtB,KAQD,MAAKxvF,AAAAA,EAAAA,QAAAA,CAASG,OAAO,CACpBovF,EAAO,CAAA,EACP,KAED,SACC,MAAM,AAAIhsF,MAAO,0BAAyB1D,EAE5C,CAEA,IAAM4vF,EAAWhxF,GAASC,GAAS,KAC7BgxF,EAAWhxF,GAASD,GAAS,KAEnC,GAAI,CAAC4wF,GAAqB/wF,AAAS,OAATA,EAAe,CACxC,IAAMqxF,EAAQJ,EAAOK,EAAAA,QAAAA,CAAWC,EAAAA,OAAAA,CAC1BC,EAAUC,AAAAA,CAAAA,EAAAA,EAAAA,kBAAAA,AAAAA,EAAmBzxF,EACnC,OAAMqxF,EAAMP,EAASU,EACtB,CAEA,GAAI,CAACR,GAAeG,GAAYC,EAAU,CACzC,IAAMM,EAAST,EAAOU,EAAAA,SAAAA,CAAYC,EAAAA,QAAAA,AAClC,OAAMF,EAAOZ,EAASK,EAAUC,EACjC,CACD,CAMUZ,eAAgB,CACzB,GAAI,CAAC,IAAI,CAACV,WAAW,CACpB,MAAM,AAAI7qF,MAAM,+BAEjB,GAAI,IAAI,CAAC+qF,UAAU,CAClB,MAAM,AAAI/qF,MAAM,2CAEjB,CAAA,IAAI,CAAC+qF,UAAU,CAAG,CAAA,CACnB,CAQU6B,wBAAwBnxF,CAAY,CAAE,CAC/C,OAAO,AAAIuE,MAAO,gCAA+BvE,EAClD,CAQUoxF,qBAAqBpxF,CAAY,CAAE,CAC5C,OAAO,AAAIuE,MAAO,8CAA6CvE,EAChE,CAQA,MAAgBkwF,SAASlwF,CAAY,CAAE8C,CAAkC,CAAE,CAC1E,IAAI,CAAC1D,OAAO,CAACiyF,4BAA4B,CAACrxF,GAE1C,GAAM,CAAA,KAACa,CAAAA,CAAK,CAAG,IAAI,CACnB,OAAQA,GACP,KAAKG,AAAAA,EAAAA,QAAAA,CAASC,IAAI,CACjB,MAAM,IAAI,CAACqwF,YAAY,CAACtxF,EAAM8C,GAC9B,KAED,MAAK9B,AAAAA,EAAAA,QAAAA,CAASc,aAAa,CAC1B,MAAM,IAAI,CAACyvF,oBAAoB,CAACvxF,EAAM8C,GACtC,KAED,MAAK9B,AAAAA,EAAAA,QAAAA,CAASwvF,SAAS,CACtB,MAAM,IAAI,CAACgB,iBAAiB,CAACxxF,EAAM8C,GACnC,KAED,MAAK9B,AAAAA,EAAAA,QAAAA,CAASG,OAAO,CACpB,MAAM,IAAI,CAACswF,eAAe,CAACzxF,EAAM8C,GACjC,KAED,SACC,MAAM,AAAIyB,MAAO,0BAAyB1D,EAE5C,CACD,CASA,MAAgB6wF,qBACf1xF,CAAY,CACZ2xF,CAAsC,CACtC7uF,CAAkC,CACjC,CACD,GAAM,CAAA,QAACqS,CAAAA,CAAQ,CAAGrS,EAIlB,GADa,MAAMpB,AAAAA,CAAAA,EAAAA,EAAAA,aAAAA,AAAAA,EAAc1B,IAGhC,GAAImV,EACH,MAAMy8E,AAAAA,CAAAA,EAAAA,EAAAA,EAAAA,AAAAA,EAAG5xF,EAAM,CAAC6xF,UAAW,CAAA,EAAMjzF,MAAO,CAAA,CAAI,QAE5C,MAAM,IAAI,CAACuyF,uBAAuB,CAACnxF,QAGpC,MAAM8xF,AAAAA,CAAAA,EAAAA,EAAAA,KAAAA,AAAAA,EAAM90F,AAAAA,EAAQgD,GAAO,CAAC6xF,UAAW,CAAA,CAAI,EAI5C,OAAME,AAAAA,CAAAA,EAAAA,EAAAA,SAAAA,AAAAA,EAAU/xF,EAAMyE,OAAOutF,KAAK,CAAC,IACnC,IAAMnC,EAAS,MAAM8B,IACjB9B,GACH,MAAMkH,EAAKlH,EAAQrzF,AAAAA,EAAkBwD,IAItC,MAAM,IAAI,CAACmwF,aAAa,CAACnwF,EAAM,KAAM8C,EACtC,CAQA,MAAgBwuF,aACftxF,CAAY,CACZ8C,CAAkC,CACjC,CACD,IAAM/B,EAAW,IAAI,CAACwuF,SAAS,CAC/B,GAAI,CAACxuF,EACJ,MAAM,AAAIwD,MAAM,iBAGjB,OAAM,IAAI,CAACmtF,oBAAoB,CAAC1xF,EAAMe,EAAU+B,EACjD,CAQA,MAAgByuF,qBACfvxF,CAAY,CACZ8C,CAAkC,CACjC,CACD,IAAMlB,EAAW,IAAI,CAAC4tF,SAAS,CAC/B,GAAI,CAAC5tF,EACJ,MAAM,AAAI2C,MAAM,kBAIjB,GAAIzB,EAAQmvF,kBAAkB,CAAE,CAC/B,MAAM,IAAI,CAACP,oBAAoB,CAAC1xF,EAAM4B,EAAUkB,GAChD,MACD,CAGA,IAAMlC,EAAO,MAAMc,AAAAA,CAAAA,EAAAA,EAAAA,aAAAA,AAAAA,EAAc1B,GACjC,GAAI,CAACY,GAAQ,CAACA,EAAKsxF,MAAM,GACxB,MAAM,IAAI,CAACd,oBAAoB,CAACpxF,GAIjC,IAAMmyF,EAAWvyF,AAAAA,CAAAA,EAAAA,EAAAA,gBAAAA,AAAAA,EAAiBI,GAG5B6vF,EAAS,MAAMjuF,IACjBiuF,EACH,MAAMkH,EAAKlH,EAAQrzF,AAAAA,EAAkB21F,IAErC,MAAMJ,AAAAA,CAAAA,EAAAA,EAAAA,SAAAA,AAAAA,EAAUI,EAAU1tF,OAAOutF,KAAK,CAAC,IAIxC,MAAM,IAAI,CAAC7B,aAAa,CAACnwF,EAAM,KAAM8C,EACtC,CAQA,MAAgB0uF,kBACfxxF,CAAY,CACZ8C,CAAkC,CACjC,CACD,GAAM,CAAA,QAACqS,CAAAA,CAAQ,CAAGrS,EAGZlC,EAAO,MAAMc,AAAAA,CAAAA,EAAAA,EAAAA,aAAAA,AAAAA,EAAc1B,GACjC,GAAIY,EAEH,CAAA,GAAI,CAACA,EAAKwxF,WAAW,IACpB,GAAIj9E,EACH,MAAMy8E,AAAAA,CAAAA,EAAAA,EAAAA,EAAAA,AAAAA,EAAG5xF,EAAM,CAAC6xF,UAAW,CAAA,EAAMjzF,MAAO,CAAA,CAAI,GAC5C,MAAMkzF,AAAAA,CAAAA,EAAAA,EAAAA,KAAAA,AAAAA,EAAM9xF,EAAM,CAAC6xF,UAAW,CAAA,CAAI,QAElC,MAAM,IAAI,CAACV,uBAAuB,CAACnxF,GAErC,MAEA,MAAM8xF,AAAAA,CAAAA,EAAAA,EAAAA,KAAAA,AAAAA,EAAM9xF,EAAM,CAAC6xF,UAAW,CAAA,CAAI,GAInC,IAAI,CAACzyF,OAAO,CAACizF,sBAAsB,CAACryF,EAAM,IAAI,CAAE,CAAC,GAAG8C,CAAH,AAAU,EAC5D,CAQA,MAAgB2uF,gBACfzxF,CAAY,CACZ8C,CAAkC,CACjC,CACD,IAAM5B,EAAc,IAAI,CAACuuF,YAAY,CACrC,GAAI,CAACvuF,EACJ,MAAM,AAAIqD,MAAM,kBAGjB,GAAM,CAAA,QAAC4Q,CAAO,CAAA,cAAEm9E,CAAAA,CAAc,CAAGxvF,EAIjC,GADa,MAAMpB,AAAAA,CAAAA,EAAAA,EAAAA,aAAAA,AAAAA,EAAc1B,IAGhC,GAAImV,EACH,MAAMy8E,AAAAA,CAAAA,EAAAA,EAAAA,EAAAA,AAAAA,EAAG5xF,EAAM,CAAC6xF,UAAW,CAAA,EAAMjzF,MAAO,CAAA,CAAI,QAE5C,MAAM,IAAI,CAACuyF,uBAAuB,CAACnxF,QAIpC,MAAM8xF,AAAAA,CAAAA,EAAAA,EAAAA,KAAAA,AAAAA,EAAM90F,AAAAA,EAAQgD,GAAO,CAAC6xF,UAAW,CAAA,CAAI,GAI5C,IAAMx7E,EAAS,MAAMnV,IAGjBoxF,EACH,MAAMP,AAAAA,CAAAA,EAAAA,EAAAA,SAAAA,AAAAA,EAAU/xF,EAAMqW,GAEtB,MAAMk8E,AAAAA,CAAAA,EAAAA,EAAAA,SAAAA,AAAAA,EAAUvyF,EAAMqW,GAIvB,MAAM,IAAI,CAAC85E,aAAa,CAACnwF,EAAM,KAAM8C,EACtC,CAOA,MAAgBitF,SAAU,CACzB,GAAM,CAAA,KAAClvF,CAAAA,CAAK,CAAG,IAAI,CACnB,OAAQA,GACP,KAAKG,AAAAA,EAAAA,QAAAA,CAASC,IAAI,CACjB,OAAO,IAAI,CAACuxF,WAAW,EAExB,MAAKxxF,AAAAA,EAAAA,QAAAA,CAASc,aAAa,CAC1B,OAAO,IAAI,CAAC2wF,mBAAmB,EAEhC,MAAKzxF,AAAAA,EAAAA,QAAAA,CAASwvF,SAAS,CACtB,OAAO,IAAI,CAACkC,gBAAgB,EAE7B,MAAK1xF,AAAAA,EAAAA,QAAAA,CAASG,OAAO,CACpB,OAAO,IAAI,CAACwxF,cAAc,EAE3B,SACC,MAAM,AAAIpuF,MAAO,0BAAyB1D,EAE5C,CACD,CAOA,MAAgB2xF,aAAc,CAC7B,IAAMzxF,EAAW,IAAI,CAACwuF,SAAS,CAC/B,GAAI,CAACxuF,EACJ,MAAM,AAAIwD,MAAM,kBAEjB,OAAOxD,GACR,CAOA,MAAgB0xF,qBAAsB,CACrC,IAAM7wF,EAAW,IAAI,CAAC4tF,SAAS,CAC/B,GAAI,CAAC5tF,EACJ,MAAM,AAAI2C,MAAM,kBAEjB,OAAO3C,GACR,CAQA,MAAgB8wF,kBAAmB,CAClC,OAAO,IACR,CAQA,MAAgBC,gBAAiB,CAChC,IAAMzxF,EAAc,IAAI,CAACuuF,YAAY,CACrC,GAAI,CAACvuF,EACJ,MAAM,AAAIqD,MAAM,kBAEjB,IAAMkB,EAAI,IAAI/H,EAAS,CAEhB6C,AAANA,OACCW,IAAc0xF,IAAI,CACjB9nF,AAAAA,IACCrF,EAAE7B,IAAI,CAACkH,GACPrF,EAAE7B,IAAI,CAAC,KACR,EACAivF,AAAAA,IACCptF,EAAEqtF,IAAI,CAAC,QAASD,EACjB,EAEF,CACD,GACA,OAAOptF,CACR,CACD,CAKO,MAAexF,EAIrB,OAAuBC,gBAA6C,IAApE,AAKA,QAAuBC,kBAA6B,CAAA,CAApD,AAKgBrB,CAAAA,MAAQA,CAARA,AAUNi0F,CAAAA,SAAW,CAAA,CAAXA,AAKAC,CAAAA,wBAGC,IAHDA,AAUV9zF,aAAYc,CAAY,CAAE,CACzB,IAAI,CAACA,IAAI,CAAGA,CACb,CAOA,IAAWizF,gBAAiB,CAC3B,OAAQ,IAAI,CAAC/zF,WAAW,CAAoBgB,eAAe,EAAI,IAChE,CAOA,IAAWyvF,iBAAkB,CAC5B,OAAQ,IAAI,CAACzwF,WAAW,CAAoBiB,iBAAiB,AAC9D,CASOkyF,uBACNryF,CAAY,CACZqB,CAAY,CACZyB,EAAqC,CAAC,CAAC,CACtC,CACD,IAAMowF,EAAS,IAAI,CAACF,uBAAuB,CAC3C,GAAI,CAACE,EACJ,MAAM,AAAI3uF,MACT,gEAGF2uF,EAAOp3F,GAAG,CAACoB,AAAAA,EAAQ8C,GAAO,CACzBA,KAAAA,EACAqB,MAAAA,EACAyB,QAAAA,CACD,EACD,CAOOuuF,6BAA6BrxF,CAAY,CAAE,CACjD,IAAMkzF,EAAS,IAAI,CAACF,uBAAuB,CAC3C,GAAI,CAACE,EACJ,MAAM,AAAI3uF,MACT,kEAGF2uF,EAAOvG,MAAM,CAACzvF,AAAAA,EAAQ8C,GACvB,CASA,MAAaO,KAAKC,CAAyC,CAAE,CAC5D,GAAI,IAAI,CAACuyF,QAAQ,CAChB,MAAM,AAAIxuF,MAAM,6BAEjB,CAAA,IAAI,CAACwuF,QAAQ,CAAG,CAAA,EAGhB,IAAI,CAACC,uBAAuB,CAAG,IAAI3vC,IAGnC,GAAI,CACH,MAAM,IAAI,CAAC5iD,KAAK,CAACD,GACjB,MAAM,IAAI,CAAC2yF,8BAA8B,EAC1C,QAAU,CACT,IAAI,CAACH,uBAAuB,CAAG,KAC/B,IAAI,CAACD,QAAQ,CAAG,CAAA,CACjB,CACD,CAKA,MAAgBI,gCAAiC,CAChD,IAAMD,EAAS,IAAI,CAACF,uBAAuB,CAC3C,GAAI,CAACE,EACJ,OAID,IAAME,EAAqB,EAAE,CAC7B,IAAK,GAAM,CAACC,EAAS,GAAIH,EACxBE,EAASxvF,IAAI,CAACyvF,GAIf,IAAK,IAAMA,KAFXD,EAASE,IAAI,CAAC,CAACrrF,EAAGqC,IAAMA,EAAElE,MAAM,CAAG6B,EAAE7B,MAAM,EAEpBgtF,GAAU,CAChC,IAAMG,EAAML,EAAOr3F,GAAG,CAACw3F,GACvB,GAAI,CAACE,EACJ,MAAM,AAAIhvF,MAAM,kBAEjB,GAAM,CAAA,MAAClD,CAAK,CAAA,KAAErB,CAAI,CAAA,QAAE8C,CAAAA,CAAQ,CAAGywF,CAE/B,OAAMlyF,EAAM8uF,aAAa,CAACnwF,EAAMqzF,EAAUvwF,EAC3C,CACD,CAYD,C,G,E,Q,S,C,C,C,ME35BY9B,E,E,E,O,C,W,I,GAAZ,IAAYA,GAAAA,CAAAA,EAAQ,CAAA,GAARA,SAAAA,CAAAA,YAAAA,EAAAA,IAAAA,CAAAA,OAAAA,EAAAA,OAAAA,CAAAA,UAAAA,EAAAA,aAAAA,CAAAA,gBAAAA,E,G,E,Q,S,C,C,C,M,E,E,EEmCL,SAASjB,EAAcC,CAAY,EACzC,OAAOA,EAAKmV,OAAO,CAAC,MAAO,KAAKA,OAAO,CAAC,aAAc,KACvD,CAQO,SAASvV,EAAiBI,CAAY,EAC5C,OAAOm2F,AAAAA,EAASn2F,EAAM,cAAe,OACtC,CAQO,SAASc,EAAeF,CAAqB,SACnD,AAAIA,EAAKizF,cAAc,GACf7yF,AAAAA,EAAAA,QAAAA,CAASG,OAAO,CAEpBP,EAAKwxF,WAAW,GACZpxF,AAAAA,EAAAA,QAAAA,CAASwvF,SAAS,CAEtB5vF,EAAKsxF,MAAM,GACPlxF,AAAAA,EAAAA,QAAAA,CAASC,IAAI,CAEd,IACR,CA2BO,SAAS8vF,EAAmBzxF,CAAY,EAE9C,OAAOA,AAAO,IAAPA,CACR,CAsBO,eAAe0wF,EAAeH,CAAgB,EACpD,IAAMmE,EAAkB,EAAE,CACtB30F,EAAO,EAYX,OAXA,MAAM7B,AAAAA,CAAAA,EAAAA,EAAAA,QAAAA,AAAAA,EACLqyF,EACA,IAAIjyF,EAAS,CAELq2F,AAAPA,MAAQ/vF,EAAcgwF,EAAoBC,GACzCH,EAAMpwF,IAAI,CAACM,GACX7E,GAAQ6E,EAAKkC,MAAM,CACnB+tF,GACD,CACD,IAEM1vF,OAAOC,MAAM,CAACsvF,EAAO30F,EAC7B,CAQO,eAAeuxF,EAAS5wF,CAAY,CAAEV,CAAY,EAExD,GAAI,CAAC23F,EACJ,OAID,IAAM3C,EAAK,MAAMC,AAAAA,CAAAA,EAAAA,EAAAA,IAAAA,AAAAA,EAAKv0F,EAAM81F,EAAWC,GACvC,GAAI,CACH,MAAMzB,EAAG3D,KAAK,CAACrxF,EAChB,QAAU,CACT,MAAMg1F,EAAGI,KAAK,EACf,CACD,CASO,eAAexD,EACrBlxF,CAAY,CACZP,CAAqB,CACrBC,CAAqB,EAErB,MAAMsxF,AAAAA,CAAAA,EAAAA,EAAAA,MAAAA,AAAAA,EAAOhxF,EAAMP,EAAOC,EAC3B,CASO,eAAeuxF,EACrBjxF,CAAY,CACZP,CAAqB,CACrBC,CAAqB,EAGrB,GAAI,CAACw3F,EACJ,OAID,IAAM5C,EAAK,MAAMC,AAAAA,CAAAA,EAAAA,EAAAA,IAAAA,AAAAA,EAAKv0F,EAAM81F,EAAWC,GACvC,GAAI,CACH,MAAMzB,EAAGtD,MAAM,CAACvxF,EAAOC,EACxB,QAAU,CACT,MAAM40F,EAAGI,KAAK,EACf,CACD,CAQO,eAAetzF,EAAcpB,CAAY,EAC/C,MAAO+0F,AAAAA,CAAAA,EAAAA,EAAAA,QAAAA,AAAAA,EAAS/0F,EAAM,SACvB,CAQO,eAAeuyF,EACrBvyF,CAA+B,CAC/BqW,CAAiC,EAEjC,MAAM4+E,AAAAA,CAAAA,EAAAA,EAAAA,OAAAA,AAAAA,EAAQ5+E,EAAQrW,EACvB,CAQO,eAAe6wF,EAAQ7wF,CAAY,CAAEV,CAAY,EACvD,MAAMqxF,AAAAA,CAAAA,EAAAA,EAAAA,KAAAA,AAAAA,EAAM3wF,EAAMV,EACnB,CAQO,eAAeg4F,EAAUt3F,CAAY,EAC3C,MAAO,AAAC,CAAA,MAAMo1F,AAAAA,CAAAA,EAAAA,EAAAA,OAAAA,AAAAA,EAAQp1F,EAAAA,EAAOszF,IAAI,EAClC,CAQO,eAAeiE,EAAQv3F,CAAY,EACzC,MAAOs1F,AAAAA,CAAAA,EAAAA,EAAAA,KAAAA,AAAAA,EAAMt1F,EACd,CAQO,eAAe0B,EAAc1B,CAAY,EAC/C,GAAI,CACH,OAAO,MAAMu3F,EAAQv3F,EACtB,CAAE,MAAO6yF,EAAK,CACb,GAAM,CAAA,KAAC1uF,CAAAA,CAAK,CAAG0uF,EACf,GAAI1uF,AAAS,WAATA,GAAqBA,AAAS,YAATA,EACxB,OAAO,IAER,OAAM0uF,CACP,CACD,CAWO,eAAexwF,EACrBwY,CAAY,CACZra,CAAoE,CACpEsC,EAAoC,CAAC,CAAC,EAEtC,GAAM,CAAA,4BAACpE,CAAAA,CAA4B,CAAGoE,EAChC2yF,EAAQ,AAAC,CAAA,MAAM6B,EAAUz8E,EAAAA,EAAO66E,OAAO,GAC7C,KAAOD,EAAMrvF,MAAM,EAAE,CACpB,IAAM/E,EAAQo0F,EAAMtL,GAAG,GACjBwL,EAAWQ,AAAAA,EAASt7E,EAAMxZ,GAE1BT,EAAO,MAAM22F,EAAQ5B,GAIrBC,EAAU,MAAMp1F,EAAMa,EAAOT,GACnC,GAAIg1F,AAAY,OAAZA,EACH,MAED,GAAIA,AAAY,CAAA,IAAZA,GAAqB,CAACh1F,EAAKwxF,WAAW,GACzC,SAID,IAAIyD,EAAiB,EAAE,CACvB,GAAI,CAEHA,EAAO,MAAMyB,EAAU3B,EACxB,CAAE,MAAO9C,EAAK,CACb,GACC,CACCA,CAAAA,GACAn0F,GACCm0F,AAAgC,WAAhCA,EAAuB1uF,IAAI,AAAK,EAGlC,MAAM0uF,CAER,CACA,IAAK,IAAInpF,EAAImsF,EAAKzvF,MAAM,CAAEsD,KACzB+rF,EAAM7xF,IAAI,CAACuyF,AAAAA,EAAS90F,EAAOw0F,CAAI,CAACnsF,EAAE,EAEpC,CACD,C,E,E,O,C,gB,I,G,E,E,O,C,mB,I,G,E,E,O,C,iB,I,G,E,E,O,C,qB,I,G,E,E,O,C,iB,I,G,E,E,O,C,W,I,G,E,E,O,C,W,I,G,E,E,O,C,Y,I,G,E,E,O,C,gB,I,G,E,E,O,C,Y,I,G,E,E,O,C,U,I,G,E,E,O,C,gB,I,G,E,E,O,C,S,I,G,E,E,S,E,E,S,E,E,SAvSA,GAAM,CAAA,SAACosF,CAAQ,CAAA,UAAEC,CAAAA,CAAU,CAAGiB,EACjBC,EAAoB,CAAC,CAAClB,EACtBmB,EAAqB,CAAC,CAACnB,C,G,E,Q,S,C,C,C,E,E,E,O,C,W,I,GCpB7B,IAAM,EAAW,aAAc,GAAU,aAAc,EAAgB,QAAQ,CAEhF,EAAO,QAAQ,CAAS,QAAQ,CAClC,AAAA,EAAU,EAAO,QAAQ,CAGL,CAAA,aAAc,GAAU,aAAc,EAAgB,QAAQ,CAEhF,EAAO,QAAQ,CAAS,QAAQ,CAClC,AAAA,EAAU,EAAO,QAAQ,C","sources":["<anon>","node_modules/.pnpm/@shockpkg+archive-files@https+++codeload.github.com+aminya+archive-files+tar.gz+54ec59fad46aca736ac6feb6c7bb526528141b9d/node_modules/@shockpkg/archive-files/esm/archive/hdi.mjs","node_modules/.pnpm/@shockpkg+archive-files@https+++codeload.github.com+aminya+archive-files+tar.gz+54ec59fad46aca736ac6feb6c7bb526528141b9d/node_modules/@shockpkg/archive-files/src/archive/hdi.ts","node_modules/.pnpm/@shockpkg+hdi-mac@3.1.4/node_modules/@shockpkg/hdi-mac/esm/mounter.mjs","node_modules/.pnpm/@shockpkg+hdi-mac@3.1.4/node_modules/@shockpkg/hdi-mac/src/mounter.ts","node_modules/.pnpm/@shockpkg+plist-dom@4.0.7/node_modules/@shockpkg/plist-dom/esm/plist.mjs","node_modules/.pnpm/@shockpkg+plist-dom@4.0.7/node_modules/@shockpkg/plist-dom/src/plist.ts","node_modules/.pnpm/@shockpkg+plist-dom@4.0.7/node_modules/@shockpkg/plist-dom/esm/options.mjs","node_modules/.pnpm/@shockpkg+plist-dom@4.0.7/node_modules/@shockpkg/plist-dom/src/options.ts","node_modules/.pnpm/@shockpkg+plist-dom@4.0.7/node_modules/@shockpkg/plist-dom/esm/util.mjs","node_modules/.pnpm/@shockpkg+plist-dom@4.0.7/node_modules/@shockpkg/plist-dom/src/util.ts","node_modules/.pnpm/@xmldom+xmldom@0.8.10/node_modules/@xmldom/xmldom/lib/index.js","node_modules/.pnpm/@xmldom+xmldom@0.8.10/node_modules/@xmldom/xmldom/lib/dom.js","node_modules/.pnpm/@xmldom+xmldom@0.8.10/node_modules/@xmldom/xmldom/lib/conventions.js","node_modules/.pnpm/@xmldom+xmldom@0.8.10/node_modules/@xmldom/xmldom/lib/dom-parser.js","node_modules/.pnpm/@xmldom+xmldom@0.8.10/node_modules/@xmldom/xmldom/lib/entities.js","node_modules/.pnpm/@xmldom+xmldom@0.8.10/node_modules/@xmldom/xmldom/lib/sax.js","node_modules/.pnpm/@shockpkg+plist-dom@4.0.7/node_modules/@shockpkg/plist-dom/esm/value/dict.mjs","node_modules/.pnpm/@shockpkg+plist-dom@4.0.7/node_modules/@shockpkg/plist-dom/src/value/dict.ts","node_modules/.pnpm/@shockpkg+plist-dom@4.0.7/node_modules/@shockpkg/plist-dom/esm/value.mjs","node_modules/.pnpm/@shockpkg+plist-dom@4.0.7/node_modules/@shockpkg/plist-dom/src/value.ts","node_modules/.pnpm/@shockpkg+plist-dom@4.0.7/node_modules/@shockpkg/plist-dom/esm/value/array.mjs","node_modules/.pnpm/@shockpkg+plist-dom@4.0.7/node_modules/@shockpkg/plist-dom/src/value/array.ts","node_modules/.pnpm/@shockpkg+plist-dom@4.0.7/node_modules/@shockpkg/plist-dom/esm/value/boolean.mjs","node_modules/.pnpm/@shockpkg+plist-dom@4.0.7/node_modules/@shockpkg/plist-dom/src/value/boolean.ts","node_modules/.pnpm/@shockpkg+plist-dom@4.0.7/node_modules/@shockpkg/plist-dom/esm/value/data.mjs","node_modules/.pnpm/@shockpkg+plist-dom@4.0.7/node_modules/@shockpkg/plist-dom/src/value/data.ts","node_modules/.pnpm/@shockpkg+plist-dom@4.0.7/node_modules/@shockpkg/plist-dom/esm/value/integer.mjs","node_modules/.pnpm/@shockpkg+plist-dom@4.0.7/node_modules/@shockpkg/plist-dom/src/value/integer.ts","node_modules/.pnpm/@shockpkg+plist-dom@4.0.7/node_modules/@shockpkg/plist-dom/esm/value/real.mjs","node_modules/.pnpm/@shockpkg+plist-dom@4.0.7/node_modules/@shockpkg/plist-dom/src/value/real.ts","node_modules/.pnpm/@shockpkg+plist-dom@4.0.7/node_modules/@shockpkg/plist-dom/esm/value/string.mjs","node_modules/.pnpm/@shockpkg+plist-dom@4.0.7/node_modules/@shockpkg/plist-dom/src/value/string.ts","node_modules/.pnpm/@shockpkg+archive-files@https+++codeload.github.com+aminya+archive-files+tar.gz+54ec59fad46aca736ac6feb6c7bb526528141b9d/node_modules/@shockpkg/archive-files/esm/archive.mjs","node_modules/.pnpm/@shockpkg+archive-files@https+++codeload.github.com+aminya+archive-files+tar.gz+54ec59fad46aca736ac6feb6c7bb526528141b9d/node_modules/@shockpkg/archive-files/src/archive.ts","node_modules/.pnpm/@shockpkg+archive-files@https+++codeload.github.com+aminya+archive-files+tar.gz+54ec59fad46aca736ac6feb6c7bb526528141b9d/node_modules/@shockpkg/archive-files/esm/types.mjs","node_modules/.pnpm/@shockpkg+archive-files@https+++codeload.github.com+aminya+archive-files+tar.gz+54ec59fad46aca736ac6feb6c7bb526528141b9d/node_modules/@shockpkg/archive-files/src/types.ts","node_modules/.pnpm/@shockpkg+archive-files@https+++codeload.github.com+aminya+archive-files+tar.gz+54ec59fad46aca736ac6feb6c7bb526528141b9d/node_modules/@shockpkg/archive-files/esm/util.mjs","node_modules/.pnpm/@shockpkg+archive-files@https+++codeload.github.com+aminya+archive-files+tar.gz+54ec59fad46aca736ac6feb6c7bb526528141b9d/node_modules/@shockpkg/archive-files/src/util.ts","src/utils/compat/stream/promises.ts"],"sourcesContent":["import {createReadStream as $4U4iP$createReadStream, createWriteStream as $4U4iP$createWriteStream, constants as $4U4iP$constants} from \"node:fs\";\nimport {basename as $4U4iP$basename, join as $4U4iP$join, dirname as $4U4iP$dirname, resolve as $4U4iP$resolve} from \"node:path\";\nimport {spawn as $4U4iP$spawn, spawnSync as $4U4iP$spawnSync} from \"node:child_process\";\nimport {pipeline as $4U4iP$pipeline, Readable as $4U4iP$Readable, Writable as $4U4iP$Writable} from \"node:stream\";\nimport {promisify as $4U4iP$promisify} from \"node:util\";\nimport * as $4U4iP$stream from \"stream\";\nimport {promisify as $4U4iP$promisify1} from \"util\";\n\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire810d\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"cstG9\", function(module, exports) {\n\n$parcel$export(module.exports, \"ArchiveHdi\", () => $a4901e9b8621201e$export$c1aa0fd1ad465eab);\n/* eslint-disable max-classes-per-file */ \n\n\nvar $aTQMW = parcelRequire(\"aTQMW\");\n\nvar $23Sbd = parcelRequire(\"23Sbd\");\n\nvar $2qKQL = parcelRequire(\"2qKQL\");\n\nvar $aYbnF = parcelRequire(\"aYbnF\");\nconst $a4901e9b8621201e$var$walkOpts = {\n    ignoreUnreadableDirectories: true\n};\nconst $a4901e9b8621201e$var$ejectOptions = {\n    force: true\n};\nclass $a4901e9b8621201e$export$6bde309da83df86d extends (0, $23Sbd.Entry) {\n    /**\n   * @inheritdoc\n   */ /**\n   * @inheritdoc\n   */ /**\n   * @inheritdoc\n   */ sizeComp = null;\n    /**\n   * @inheritdoc\n   */ /**\n   * @inheritdoc\n   */ /**\n   * @inheritdoc\n   */ /**\n   * @inheritdoc\n   */ uname = null;\n    /**\n   * @inheritdoc\n   */ gname = null;\n    /**\n   * @inheritdoc\n   */ /**\n   * @inheritdoc\n   */ /**\n   * EntryHdi constructor.\n   *\n   * @param info Info object.\n   */ constructor(info){\n        super(info);\n        this.archive = info.archive;\n        this.size = info.size;\n        this.mode = info.mode;\n        this.uid = info.uid;\n        this.gid = info.gid;\n        this.atime = info.atime;\n        this.mtime = info.mtime;\n    }\n    /**\n   * Get the path of resource psuedo-file, raw.\n   *\n   * @returns Path string.\n   */ get rsrcPathRaw() {\n        return (0, $aYbnF.pathResourceFork)(this.pathRaw);\n    }\n    /**\n   * Get the path of resource psuedo-file, normalized.\n   *\n   * @returns Path string.\n   */ get rsrcPath() {\n        return (0, $aYbnF.pathNormalize)((0, $aYbnF.pathResourceFork)(this.path));\n    }\n}\nclass $a4901e9b8621201e$export$c1aa0fd1ad465eab extends (0, $23Sbd.Archive) {\n    /**\n   * @inheritdoc\n   */ static FILE_EXTENSIONS = [\n        \".dmg\",\n        \".iso\",\n        \".cdr\"\n    ];\n    /**\n   * @inheritdoc\n   */ static HAS_NAMED_VOLUMES = true;\n    /**\n   * @inheritdoc\n   */ Entry = $a4901e9b8621201e$export$6bde309da83df86d;\n    /**\n   * Mounter, Mac.\n   */ mounterMac = new (0, $aTQMW.Mounter)();\n    /**\n   * Hide mounted disk image from the file explorers.\n   */ nobrowse = false;\n    /**\n   * ArchiveHdi constructor.\n   *\n   * @param path File path.\n   */ constructor(path){\n        super(path);\n    }\n    /**\n   * @inheritdoc\n   */ async read(itter) {\n        await super.read(itter);\n    }\n    /**\n   * @inheritdoc\n   */ async _read(itter) {\n        const { mounterMac: mounterMac, nobrowse: nobrowse } = this;\n        /**\n     * Each itterator.\n     *\n     * @param pathFull Full path.\n     * @param pathRaw Raw path.\n     * @param stat Stat object.\n     * @returns Recursion hint.\n     */ const each = async (pathFull, pathRaw, stat)=>{\n            const type = (0, $aYbnF.statToPathType)(stat);\n            if (type === null) return true;\n            const { size: size, mode: mode, uid: uid, gid: gid, atime: atime, mtime: mtime } = stat;\n            const readData = type === (0, $2qKQL.PathType).FILE ? // eslint-disable-next-line max-len\n            // eslint-disable-next-line @typescript-eslint/require-await\n            async ()=>(0, $4U4iP$createReadStream)(pathFull) : null;\n            const readSymlink = type === (0, $2qKQL.PathType).SYMLINK ? async ()=>(0, $aYbnF.fsReadlinkRaw)(pathFull) : null;\n            const entry = new this.Entry({\n                archive: this,\n                type: type,\n                pathRaw: pathRaw,\n                size: size,\n                mode: mode,\n                uid: uid,\n                gid: gid,\n                atime: atime,\n                mtime: mtime,\n                readData: readData,\n                readSymlink: readSymlink\n            });\n            const ret = await entry.trigger(itter);\n            if (ret === false) return null;\n            if (ret === null) return false;\n            if (type === (0, $2qKQL.PathType).FILE) {\n                const rsrcPathFull = (0, $aYbnF.pathResourceFork)(pathFull);\n                const rsrcStat = await (0, $aYbnF.fsLstatExists)(rsrcPathFull);\n                if (rsrcStat) {\n                    const sizeRsrc = rsrcStat.size;\n                    /**\n           * Read RSRC.\n           *\n           * @returns Read stream.\n           */ // eslint-disable-next-line @typescript-eslint/require-await\n                    const readRsrc = async ()=>(0, $4U4iP$createReadStream)(rsrcPathFull);\n                    const entryRsrc = new this.Entry({\n                        archive: this,\n                        type: (0, $2qKQL.PathType).RESOURCE_FORK,\n                        pathRaw: pathRaw,\n                        size: sizeRsrc,\n                        mode: mode,\n                        uid: uid,\n                        gid: gid,\n                        atime: atime,\n                        mtime: mtime,\n                        readRsrc: readRsrc\n                    });\n                    const ret = await entryRsrc.trigger(itter);\n                    if (ret === false) return null;\n                    if (ret === null) return false;\n                }\n            }\n            return true;\n        };\n        // Using auto-eject on normal exit option.\n        const info = await mounterMac.attach(this.path, {\n            nobrowse: nobrowse,\n            readonly: true\n        }, $a4901e9b8621201e$var$ejectOptions);\n        // Eject device when done.\n        try {\n            for (const device of info.devices){\n                const { mountPoint: mountPoint } = device;\n                if (!mountPoint) continue;\n                const volumeName = (0, $4U4iP$basename)(mountPoint);\n                // eslint-disable-next-line no-await-in-loop\n                await (0, $aYbnF.fsWalk)(mountPoint, async (pathRel, stat)=>{\n                    const pathFull = (0, $4U4iP$join)(mountPoint, pathRel);\n                    const pathRaw = (0, $4U4iP$join)(volumeName, pathRel);\n                    return each(pathFull, pathRaw, stat);\n                }, $a4901e9b8621201e$var$walkOpts);\n            }\n        } finally{\n            await info.eject($a4901e9b8621201e$var$ejectOptions);\n        }\n    }\n}\n\n});\nparcelRegister(\"aTQMW\", function(module, exports) {\n\n$parcel$export(module.exports, \"Mounter\", () => $17d6798f68a81f78$export$2109cd350bcf6eda);\n\n\nvar $1gbqu = parcelRequire(\"1gbqu\");\nvar $5wocU = parcelRequire(\"5wocU\");\nvar $41IcW = parcelRequire(\"41IcW\");\nvar $iDF5K = parcelRequire(\"iDF5K\");\nvar $iZNym = parcelRequire(\"iZNym\");\nclass $17d6798f68a81f78$export$2109cd350bcf6eda {\n    /**\n   * The path to hdiutil.\n   */ /**\n   * Mounter constructor.\n   *\n   * @param options Options object.\n   */ constructor(options = null){\n        this.hdiutil = (options ? options.hdiutil : null) || \"hdiutil\";\n    }\n    /**\n   * Attach a disk image.\n   *\n   * @param file Path to disk image.\n   * @param options Options object.\n   * @param ejectOnExit Eject on exit options, or null.\n   * @returns Info object.\n   */ async attach(file, options = null, ejectOnExit = null) {\n        const devices = await this._runAttach(this._argsAttach(file, options));\n        const { eject: eject, ejectSync: ejectSync } = this._createEjects(devices);\n        return {\n            devices: devices,\n            eject: eject,\n            ejectSync: ejectSync\n        };\n    }\n    /**\n   * Attach a disk image.\n   *\n   * @param file Path to disk image.\n   * @param options Options object.\n   * @param ejectOnExit Eject on exit options, or null.\n   * @returns Info object.\n   */ attachSync(file, options = null, ejectOnExit = null) {\n        // eslint-disable-next-line no-sync\n        const devices = this._runAttachSync(this._argsAttach(file, options));\n        const { eject: eject, ejectSync: ejectSync } = this._createEjects(devices);\n        return {\n            devices: devices,\n            eject: eject,\n            ejectSync: ejectSync\n        };\n    }\n    /**\n   * Eject a disk image.\n   *\n   * @param file Path to device file or volume mount point.\n   * @param options Options object.\n   */ async eject(file, options = null) {\n        await this._runEject(this._argsEject(file, options));\n    }\n    /**\n   * Eject a disk image.\n   *\n   * @param file Path to device file or volume mount point.\n   * @param options Options object.\n   */ ejectSync(file, options = null) {\n        // eslint-disable-next-line no-sync\n        this._runEjectSync(this._argsEject(file, options));\n    }\n    /**\n   * Create args for attach.\n   *\n   * @param file Path to disk image.\n   * @param options Options object.\n   * @returns Argument list.\n   */ _argsAttach(file, options = null) {\n        const args = [\n            \"attach\",\n            \"-plist\"\n        ];\n        if (options) {\n            if (options.readonly) args.push(\"-readonly\");\n            if (options.nobrowse) args.push(\"-nobrowse\");\n        }\n        args.push(this._fileArg(file));\n        return args;\n    }\n    /**\n   * Create args for eject.\n   *\n   * @param file Path to device file or volume mount point.\n   * @param options Options object.\n   * @returns Argument list.\n   */ _argsEject(file, options = null) {\n        const args = [\n            \"eject\"\n        ];\n        if (options && options.force) args.push(\"-force\");\n        args.push(this._fileArg(file));\n        return args;\n    }\n    /**\n   * Run hdiutil attach command, returning the devices list on success.\n   *\n   * @param args CLI args.\n   * @returns Devices list.\n   */ async _runAttach(args) {\n        const stdouts = [];\n        const proc = (0, $4U4iP$spawn)(this.hdiutil, args);\n        proc.stdout.on(\"data\", (data)=>{\n            stdouts.push(data);\n        });\n        const code = await new Promise((resolve, reject)=>{\n            proc.once(\"exit\", resolve);\n            proc.once(\"error\", reject);\n        });\n        if (code) throw new Error(`Attach failed: hdiutil exit code: ${code}`);\n        return this._parseDevices(Buffer.concat(stdouts).toString());\n    }\n    /**\n   * Run hdiutil attach command, returning the devices list on success.\n   *\n   * @param args CLI args.\n   * @returns Devices list.\n   */ _runAttachSync(args) {\n        const { status: status, error: error, stdout: stdout } = (0, $4U4iP$spawnSync)(this.hdiutil, args);\n        if (error) throw error;\n        if (status) throw new Error(`Attach failed: hdiutil exit code: ${status}`);\n        return this._parseDevices(stdout.toString());\n    }\n    /**\n   * Run hdiutil eject command.\n   *\n   * @param args CLI args.\n   */ async _runEject(args) {\n        const proc = (0, $4U4iP$spawn)(this.hdiutil, args);\n        const status = await new Promise((resolve, reject)=>{\n            proc.once(\"exit\", resolve);\n            proc.once(\"error\", reject);\n        });\n        if (status) throw new Error(`Eject failed: hdiutil exit code: ${status}`);\n    }\n    /**\n   * Run hdiutil eject command.\n   *\n   * @param args CLI args.\n   */ _runEjectSync(args) {\n        const { status: status, error: error } = (0, $4U4iP$spawnSync)(this.hdiutil, args);\n        if (error) throw error;\n        if (status) throw new Error(`Eject failed: hdiutil exit code: ${status}`);\n    }\n    /**\n   * Create file argument from file path.\n   *\n   * @param file File path.\n   * @returns A path for use as argument.\n   */ _fileArg(file) {\n        // Make sure it will not be recognized as option argument.\n        return file.startsWith(\"-\") ? `./${file}` : file;\n    }\n    /**\n   * Parse devices plist into devices list.\n   *\n   * @param xml XML plist.\n   * @returns Devices list.\n   */ _parseDevices(xml) {\n        const plist = new (0, $1gbqu.Plist)();\n        plist.fromXml(xml);\n        const systemEntities = plist.valueCastAs((0, $iDF5K.ValueDict)).getValue(\"system-entities\").castAs((0, $5wocU.ValueArray));\n        const r = [];\n        for (const value of systemEntities.value){\n            const dict = value.castAs((0, $iDF5K.ValueDict));\n            const devEntry = dict.getValue(\"dev-entry\").castAs((0, $iZNym.ValueString)).value;\n            const potentiallyMountable = dict.getValue(\"potentially-mountable\").castAs((0, $41IcW.ValueBoolean)).value;\n            const contentHint = dict.get(\"content-hint\");\n            const unmappedContentHint = dict.get(\"unmapped-content-hint\");\n            const volumeKind = dict.get(\"volume-kind\");\n            const mountPoint = dict.get(\"mount-point\");\n            const device = {\n                devEntry: devEntry,\n                potentiallyMountable: potentiallyMountable\n            };\n            if (contentHint) device.contentHint = contentHint.castAs((0, $iZNym.ValueString)).value;\n            if (unmappedContentHint) device.unmappedContentHint = unmappedContentHint.castAs((0, $iZNym.ValueString)).value;\n            if (volumeKind) device.volumeKind = volumeKind.castAs((0, $iZNym.ValueString)).value;\n            if (mountPoint) device.mountPoint = mountPoint.castAs((0, $iZNym.ValueString)).value;\n            r.push(device);\n        }\n        return r;\n    }\n    /**\n   * Find the root device, null on empty list.\n   *\n   * @param devices Device list.\n   * @returns Root device or null if an empty list.\n   */ _findRootDevice(devices) {\n        let r = null;\n        for (const device of devices)if (r === null || r.devEntry.length > device.devEntry.length) r = device;\n        return r;\n    }\n    /**\n   * Create ejects callback from a list of devices.\n   *\n   * @param devices Device list.\n   * @param ejectOnExit Eject on exit options, or null.\n   * @returns Callback function.\n   */ _createEjects(devices, ejectOnExit = null) {\n        // Find the root device, to use to eject (none possible in theory).\n        let devEntry = this._findRootDevice(devices)?.devEntry;\n        let shutdown = null;\n        const info = {\n            /**\n       * The eject callback function.\n       *\n       * @param options Eject options.\n       */ eject: async (options = null)=>{\n                if (devEntry) {\n                    await this.eject(devEntry, options);\n                    devEntry = \"\";\n                    if (shutdown) process.off(\"exit\", shutdown);\n                }\n            },\n            /**\n       * The eject callback function.\n       *\n       * @param options Eject options.\n       */ ejectSync: (options = null)=>{\n                if (devEntry) {\n                    // eslint-disable-next-line no-sync\n                    this.ejectSync(devEntry, options);\n                    devEntry = \"\";\n                    if (shutdown) process.off(\"exit\", shutdown);\n                }\n            }\n        };\n        if (ejectOnExit) {\n            /**\n       * Attempt to auto-eject on normal shutdown.\n       * Does not catch signals (no clean way in a library).\n       * Users can explicitly call process.exit() on signals to use this.\n       */ shutdown = ()=>{\n                // eslint-disable-next-line no-sync\n                info.ejectSync(ejectOnExit);\n            };\n            process.once(\"exit\", shutdown);\n        }\n        return info;\n    }\n}\n\n});\nparcelRegister(\"1gbqu\", function(module, exports) {\n\n$parcel$export(module.exports, \"Plist\", () => $5f8c883a4a5890e6$export$2a65c73fe54050b8);\n\nvar $jujKN = parcelRequire(\"jujKN\");\n\nvar $2pNoI = parcelRequire(\"2pNoI\");\n\nvar $iDF5K = parcelRequire(\"iDF5K\");\nconst $5f8c883a4a5890e6$var$xmlDeclaration = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\nconst $5f8c883a4a5890e6$var$xmlDoctype = '<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">';\nclass $5f8c883a4a5890e6$export$2a65c73fe54050b8 {\n    /**\n   * Default XML declaration.\n   */ static XML_DECLARATION = $5f8c883a4a5890e6$var$xmlDeclaration;\n    /**\n   * Default XML doctype.\n   */ static XML_DOCTYPE = $5f8c883a4a5890e6$var$xmlDoctype;\n    /**\n   * XML declaration.\n   */ xmlDeclaration = $5f8c883a4a5890e6$var$xmlDeclaration;\n    /**\n   * XML doctype.\n   */ xmlDoctype = $5f8c883a4a5890e6$var$xmlDoctype;\n    /**\n   * Value element.\n   */ value = null;\n    /**\n   * Plist constructor.\n   *\n   * @param value The value.\n   */ constructor(value = null){\n        this.value = value;\n    }\n    /**\n   * Get value or throw if null.\n   *\n   * @returns The value.\n   */ getValue() {\n        const { value: value } = this;\n        if (!value) throw new Error(\"Value is null\");\n        return value;\n    }\n    /**\n   * Cast to specific type or null.\n   *\n   * @param Type Type constructor.\n   * @returns The object or null.\n   */ valueCastTo(Type) {\n        const { value: value } = this;\n        return value ? value.castTo(Type) : null;\n    }\n    /**\n   * Cast to specific type or throw.\n   *\n   * @param Type Type constructor.\n   * @returns The object.\n   */ valueCastAs(Type) {\n        const casted = this.valueCastTo(Type);\n        if (!casted) throw new Error(`Cannot cast value to type '${Type.TYPE}'`);\n        return casted;\n    }\n    /**\n   * Decode document from string.\n   *\n   * @param xml XML string.\n   */ fromXml(xml) {\n        const { declaration: declaration, doctype: doctype, documentElement: documentElement } = (0, $2pNoI.xmlDecode)(xml);\n        this.fromXmlElement(documentElement, declaration, doctype);\n    }\n    /**\n   * Decode document from element.\n   *\n   * @param element XML element.\n   * @param declaration XML declaration.\n   * @param doctype XML doctype.\n   */ fromXmlElement(element, declaration = null, doctype = null) {\n        const { tagName: tagName } = element;\n        if (tagName !== \"plist\") throw new Error(`Unexpected root plist tag name: ${tagName}`);\n        const childElements = (0, $2pNoI.xmlElementChildElements)(element);\n        const childElementsL = childElements.length;\n        if (childElementsL > 1) throw new Error(`Multiple root plist child tag: ${childElementsL}`);\n        this.value = childElementsL ? this.childFromXmlElement(childElements[0]) : null;\n        this.xmlDeclaration = declaration || \"\";\n        this.xmlDoctype = doctype || \"\";\n    }\n    /**\n   * Decode child element from XML element.\n   *\n   * @param element XML element.\n   * @returns Value element.\n   */ childFromXmlElement(element) {\n        const a = new (0, $iDF5K.ValueDict)();\n        return a.childFromXmlElement(element);\n    }\n    /**\n   * Encode documents to string.\n   *\n   * @param options Options object.\n   * @returns XML string.\n   */ toXml(options = null) {\n        const ir = options?.indentRoot ?? (0, $jujKN.INDENT_ROOT);\n        const n = options?.newlineString ?? (0, $jujKN.NEWLINE_STRING);\n        const v = this.value;\n        return [\n            ...[\n                this.xmlDeclaration,\n                this.xmlDoctype\n            ].filter(Boolean),\n            '<plist version=\"1.0\">',\n            ...v ? [\n                v.toXml(options, ir ? 1 : 0)\n            ] : [],\n            \"</plist>\",\n            \"\"\n        ].join(n);\n    }\n}\n\n});\nparcelRegister(\"jujKN\", function(module, exports) {\n\n$parcel$export(module.exports, \"INDENT_STRING\", () => $20da2d731ce3920d$export$1e80556a1db28146);\n$parcel$export(module.exports, \"NEWLINE_STRING\", () => $20da2d731ce3920d$export$ed174037a9bdff2c);\n$parcel$export(module.exports, \"DATA_COLUMNS\", () => $20da2d731ce3920d$export$5c824d2ec83ff619);\n$parcel$export(module.exports, \"INDENT_ROOT\", () => $20da2d731ce3920d$export$6d03a526e379b09b);\nconst $20da2d731ce3920d$export$1e80556a1db28146 = \"\t\";\nconst $20da2d731ce3920d$export$ed174037a9bdff2c = \"\\n\";\nconst $20da2d731ce3920d$export$5c824d2ec83ff619 = 68;\nconst $20da2d731ce3920d$export$6d03a526e379b09b = false;\n\n});\n\nparcelRegister(\"2pNoI\", function(module, exports) {\n\n$parcel$export(module.exports, \"xmlDecode\", () => $e5341827650c2a02$export$18944fc6e74f8282);\n$parcel$export(module.exports, \"xmlElementChildElements\", () => $e5341827650c2a02$export$ed00f817df6be0c9);\n$parcel$export(module.exports, \"xmlElementText\", () => $e5341827650c2a02$export$17118775901adc6b);\n$parcel$export(module.exports, \"assertXmlTagName\", () => $e5341827650c2a02$export$1aae4f5e3a8a9756);\n$parcel$export(module.exports, \"assertNoXmlElementChildNodes\", () => $e5341827650c2a02$export$6f0da40b035c9e7a);\n$parcel$export(module.exports, \"base64Encode\", () => $e5341827650c2a02$export$e510a73ee562749);\n$parcel$export(module.exports, \"base64Decode\", () => $e5341827650c2a02$export$c62426fdd000a97e);\n\nvar $hjo8B = parcelRequire(\"hjo8B\");\nconst $e5341827650c2a02$var$B6 = 0x3f;\nconst $e5341827650c2a02$var$B8 = 0xff;\nconst $e5341827650c2a02$var$C64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nconst $e5341827650c2a02$var$C64M = [\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    62,\n    -1,\n    -1,\n    -1,\n    63,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    -1,\n    -1,\n    -1,\n    64,\n    -1,\n    -1,\n    -1,\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51\n];\nfunction $e5341827650c2a02$export$18944fc6e74f8282(xml) {\n    let declaration = null;\n    let doctype = null;\n    const errors = [];\n    const parser = new (0, $hjo8B.DOMParser)({\n        locator: {},\n        errorHandler: {\n            /**\n       * Warning callback.\n       *\n       * @param e Error string.\n       */ warning: (e)=>{\n            // Ignore warnings.\n            },\n            /**\n       * Error callback.\n       *\n       * @param e Error string.\n       */ error: (e)=>{\n                errors.push(e);\n            },\n            /**\n       * Fatal error callback.\n       *\n       * @param e Error string.\n       */ fatalError: (e)=>{\n                errors.push(e);\n            }\n        }\n    });\n    const doc = parser.parseFromString(xml, \"text/xml\");\n    if (errors.length) throw new Error(`XML decode error: ${errors[0]}`);\n    const { childNodes: childNodes } = doc;\n    const documentElement = doc.documentElement || null;\n    for(let i = 0, l = childNodes.length; i < l; i++){\n        const childNode = childNodes[i];\n        if (childNode === documentElement) break;\n        const str = childNode.toString();\n        if (/^<\\?xml[^>]*\\?>$/.test(str)) declaration = str;\n        if (/^<!DOCTYPE[^>]*>$/.test(str)) doctype = str;\n    }\n    if (!documentElement) throw new Error(\"XML decode error: No document element\");\n    return {\n        declaration: declaration,\n        doctype: doctype,\n        documentElement: documentElement\n    };\n}\nfunction $e5341827650c2a02$export$ed00f817df6be0c9(element) {\n    const { childNodes: childNodes } = element;\n    const r = [];\n    for(let i = 0, l = childNodes.length; i < l; i++){\n        const childNode = childNodes[i];\n        if (\"tagName\" in childNode) {\n            r.push(childNode);\n            continue;\n        }\n        const { nodeValue: nodeValue } = childNode;\n        if (nodeValue && !/^\\s*$/.test(nodeValue)) throw new Error(`Found text children of: ${element.tagName}`);\n    }\n    return r;\n}\nfunction $e5341827650c2a02$export$17118775901adc6b(element) {\n    const { childNodes: childNodes } = element;\n    let r = null;\n    for(let i = 0, l = childNodes.length; i < l; i++){\n        if (i) throw new Error(`Multiple child elements in: ${element.tagName}`);\n        const childNode = childNodes[i];\n        if (!(\"tagName\" in childNode) && \"data\" in childNode && \"nodeValue\" in childNode) r = childNode;\n        else throw new Error(`Unexpected child element in: ${element.tagName}`);\n    }\n    return r;\n}\nfunction $e5341827650c2a02$export$1aae4f5e3a8a9756(element, tagName) {\n    const tn = element.tagName;\n    if (tn !== tagName) throw new Error(`Unexpected tagName: ${tagName}`);\n}\nfunction $e5341827650c2a02$export$6f0da40b035c9e7a(element) {\n    const { childNodes: childNodes } = element;\n    if (childNodes.length) throw new Error(`Unexpected child nodes: ${element.tagName}`);\n}\nfunction $e5341827650c2a02$export$e510a73ee562749(data) {\n    const l = data.length;\n    let r = \"\";\n    for(let i = 0; i < l;){\n        const a = data[i++];\n        const b = i < l ? data[i++] : null;\n        const c = i < l ? data[i++] : null;\n        // eslint-disable-next-line no-bitwise\n        const o = a << 16 | (b || 0) << 8 | (c || 0);\n        r += // eslint-disable-next-line no-bitwise\n        $e5341827650c2a02$var$C64[o >> 18] + // eslint-disable-next-line no-bitwise\n        $e5341827650c2a02$var$C64[o >> 12 & $e5341827650c2a02$var$B6] + // eslint-disable-next-line no-bitwise\n        $e5341827650c2a02$var$C64[b === null ? 64 : o >> 6 & $e5341827650c2a02$var$B6] + // eslint-disable-next-line no-bitwise\n        $e5341827650c2a02$var$C64[c === null ? 64 : o & $e5341827650c2a02$var$B6];\n    }\n    return r;\n}\nfunction $e5341827650c2a02$export$c62426fdd000a97e(base64) {\n    const l = base64.length;\n    const r = [];\n    OUTER: for(let a, b, c, d, m, z, i = 0; i < l;){\n        for(;;){\n            // eslint-disable-next-line unicorn/prefer-code-point\n            if ((m = $e5341827650c2a02$var$C64M[base64.charCodeAt(i++)]) >= 0) {\n                a = m;\n                break;\n            }\n            if (i >= l) break OUTER;\n        }\n        for(;;){\n            // eslint-disable-next-line unicorn/prefer-code-point\n            if ((m = $e5341827650c2a02$var$C64M[base64.charCodeAt(i++)]) >= 0) {\n                b = m;\n                break;\n            }\n            if (i >= l) break OUTER;\n        }\n        for(;;){\n            // eslint-disable-next-line unicorn/prefer-code-point\n            if ((m = $e5341827650c2a02$var$C64M[base64.charCodeAt(i++)]) >= 0) {\n                c = m;\n                break;\n            }\n            if (i >= l) break OUTER;\n        }\n        for(;;){\n            // eslint-disable-next-line unicorn/prefer-code-point\n            if ((m = $e5341827650c2a02$var$C64M[base64.charCodeAt(i++)]) >= 0) {\n                d = m;\n                break;\n            }\n            if (i >= l) break OUTER;\n        }\n        // eslint-disable-next-line no-bitwise\n        z = (a & $e5341827650c2a02$var$B6) << 18 | (b & $e5341827650c2a02$var$B6) << 12 | (c & $e5341827650c2a02$var$B6) << 6 | d & $e5341827650c2a02$var$B6;\n        // eslint-disable-next-line default-case, no-nested-ternary\n        switch(c > $e5341827650c2a02$var$B6 ? d > $e5341827650c2a02$var$B6 ? 2 : 0 : d > $e5341827650c2a02$var$B6 ? 1 : 0){\n            case 0:\n                // eslint-disable-next-line no-bitwise\n                r.push(z >> 16 & $e5341827650c2a02$var$B8, z >> 8 & $e5341827650c2a02$var$B8, z & $e5341827650c2a02$var$B8);\n                break;\n            case 1:\n                // eslint-disable-next-line no-bitwise\n                r.push(z >> 16 & $e5341827650c2a02$var$B8, z >> 8 & $e5341827650c2a02$var$B8);\n                break;\n            case 2:\n                // eslint-disable-next-line no-bitwise\n                r.push(z >> 16 & $e5341827650c2a02$var$B8);\n                break;\n        }\n    }\n    return new Uint8Array(r);\n}\n\n});\nparcelRegister(\"hjo8B\", function(module, exports) {\n\n$parcel$export(module.exports, \"DOMParser\", () => $c9a6ef462a918486$export$1059c6e7d2ce5669, (v) => $c9a6ef462a918486$export$1059c6e7d2ce5669 = v);\nvar $c9a6ef462a918486$export$455426655eab1d48;\nvar $c9a6ef462a918486$export$64f0bed4ae6f0f24;\nvar $c9a6ef462a918486$export$1059c6e7d2ce5669;\n\nvar $62CS1 = parcelRequire(\"62CS1\");\n$c9a6ef462a918486$export$455426655eab1d48 = $62CS1.DOMImplementation;\n$c9a6ef462a918486$export$64f0bed4ae6f0f24 = $62CS1.XMLSerializer;\n\n$c9a6ef462a918486$export$1059c6e7d2ce5669 = (parcelRequire(\"aPWNl\")).DOMParser;\n\n});\nparcelRegister(\"62CS1\", function(module, exports) {\n\n$parcel$export(module.exports, \"DOMImplementation\", () => $466114d0db30daf6$export$455426655eab1d48, (v) => $466114d0db30daf6$export$455426655eab1d48 = v);\n$parcel$export(module.exports, \"XMLSerializer\", () => $466114d0db30daf6$export$64f0bed4ae6f0f24, (v) => $466114d0db30daf6$export$64f0bed4ae6f0f24 = v);\n//if(typeof require == 'function'){\nvar $466114d0db30daf6$export$d1d99cf900472499;\nvar $466114d0db30daf6$export$fe58bcf938607f6a;\nvar $466114d0db30daf6$export$455426655eab1d48;\nvar $466114d0db30daf6$export$db77ccec0bb4ccac;\nvar $466114d0db30daf6$export$85c928794f8d04d4;\nvar $466114d0db30daf6$export$79b41aa5d56abdff;\nvar $466114d0db30daf6$export$64f0bed4ae6f0f24;\n\nvar $fKAiq = parcelRequire(\"fKAiq\");\nvar $466114d0db30daf6$var$find = $fKAiq.find;\nvar $466114d0db30daf6$var$NAMESPACE = $fKAiq.NAMESPACE;\n/**\n * A prerequisite for `[].filter`, to drop elements that are empty\n * @param {string} input\n * @returns {boolean}\n */ function $466114d0db30daf6$var$notEmptyString(input) {\n    return input !== \"\";\n}\n/**\n * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace\n * @see https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * @param {string} input\n * @returns {string[]} (can be empty)\n */ function $466114d0db30daf6$var$splitOnASCIIWhitespace(input) {\n    // U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\n    return input ? input.split(/[\\t\\n\\f\\r ]+/).filter($466114d0db30daf6$var$notEmptyString) : [];\n}\n/**\n * Adds element as a key to current if it is not already present.\n *\n * @param {Record<string, boolean | undefined>} current\n * @param {string} element\n * @returns {Record<string, boolean | undefined>}\n */ function $466114d0db30daf6$var$orderedSetReducer(current, element) {\n    if (!current.hasOwnProperty(element)) current[element] = true;\n    return current;\n}\n/**\n * @see https://infra.spec.whatwg.org/#ordered-set\n * @param {string} input\n * @returns {string[]}\n */ function $466114d0db30daf6$var$toOrderedSet(input) {\n    if (!input) return [];\n    var list = $466114d0db30daf6$var$splitOnASCIIWhitespace(input);\n    return Object.keys(list.reduce($466114d0db30daf6$var$orderedSetReducer, {}));\n}\n/**\n * Uses `list.indexOf` to implement something like `Array.prototype.includes`,\n * which we can not rely on being available.\n *\n * @param {any[]} list\n * @returns {function(any): boolean}\n */ function $466114d0db30daf6$var$arrayIncludes(list) {\n    return function(element) {\n        return list && list.indexOf(element) !== -1;\n    };\n}\nfunction $466114d0db30daf6$var$copy(src, dest) {\n    for(var p in src)if (Object.prototype.hasOwnProperty.call(src, p)) dest[p] = src[p];\n}\n/**\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n */ function $466114d0db30daf6$var$_extends(Class, Super) {\n    var pt = Class.prototype;\n    if (!(pt instanceof Super)) {\n        function t() {}\n        t.prototype = Super.prototype;\n        t = new t();\n        $466114d0db30daf6$var$copy(pt, t);\n        Class.prototype = pt = t;\n    }\n    if (pt.constructor != Class) {\n        if (typeof Class != \"function\") console.error(\"unknown Class:\" + Class);\n        pt.constructor = Class;\n    }\n}\n// Node Types\nvar $466114d0db30daf6$var$NodeType = {};\nvar $466114d0db30daf6$var$ELEMENT_NODE = $466114d0db30daf6$var$NodeType.ELEMENT_NODE = 1;\nvar $466114d0db30daf6$var$ATTRIBUTE_NODE = $466114d0db30daf6$var$NodeType.ATTRIBUTE_NODE = 2;\nvar $466114d0db30daf6$var$TEXT_NODE = $466114d0db30daf6$var$NodeType.TEXT_NODE = 3;\nvar $466114d0db30daf6$var$CDATA_SECTION_NODE = $466114d0db30daf6$var$NodeType.CDATA_SECTION_NODE = 4;\nvar $466114d0db30daf6$var$ENTITY_REFERENCE_NODE = $466114d0db30daf6$var$NodeType.ENTITY_REFERENCE_NODE = 5;\nvar $466114d0db30daf6$var$ENTITY_NODE = $466114d0db30daf6$var$NodeType.ENTITY_NODE = 6;\nvar $466114d0db30daf6$var$PROCESSING_INSTRUCTION_NODE = $466114d0db30daf6$var$NodeType.PROCESSING_INSTRUCTION_NODE = 7;\nvar $466114d0db30daf6$var$COMMENT_NODE = $466114d0db30daf6$var$NodeType.COMMENT_NODE = 8;\nvar $466114d0db30daf6$var$DOCUMENT_NODE = $466114d0db30daf6$var$NodeType.DOCUMENT_NODE = 9;\nvar $466114d0db30daf6$var$DOCUMENT_TYPE_NODE = $466114d0db30daf6$var$NodeType.DOCUMENT_TYPE_NODE = 10;\nvar $466114d0db30daf6$var$DOCUMENT_FRAGMENT_NODE = $466114d0db30daf6$var$NodeType.DOCUMENT_FRAGMENT_NODE = 11;\nvar $466114d0db30daf6$var$NOTATION_NODE = $466114d0db30daf6$var$NodeType.NOTATION_NODE = 12;\n// ExceptionCode\nvar $466114d0db30daf6$var$ExceptionCode = {};\nvar $466114d0db30daf6$var$ExceptionMessage = {};\nvar $466114d0db30daf6$var$INDEX_SIZE_ERR = $466114d0db30daf6$var$ExceptionCode.INDEX_SIZE_ERR = ($466114d0db30daf6$var$ExceptionMessage[1] = \"Index size error\", 1);\nvar $466114d0db30daf6$var$DOMSTRING_SIZE_ERR = $466114d0db30daf6$var$ExceptionCode.DOMSTRING_SIZE_ERR = ($466114d0db30daf6$var$ExceptionMessage[2] = \"DOMString size error\", 2);\nvar $466114d0db30daf6$var$HIERARCHY_REQUEST_ERR = $466114d0db30daf6$var$ExceptionCode.HIERARCHY_REQUEST_ERR = ($466114d0db30daf6$var$ExceptionMessage[3] = \"Hierarchy request error\", 3);\nvar $466114d0db30daf6$var$WRONG_DOCUMENT_ERR = $466114d0db30daf6$var$ExceptionCode.WRONG_DOCUMENT_ERR = ($466114d0db30daf6$var$ExceptionMessage[4] = \"Wrong document\", 4);\nvar $466114d0db30daf6$var$INVALID_CHARACTER_ERR = $466114d0db30daf6$var$ExceptionCode.INVALID_CHARACTER_ERR = ($466114d0db30daf6$var$ExceptionMessage[5] = \"Invalid character\", 5);\nvar $466114d0db30daf6$var$NO_DATA_ALLOWED_ERR = $466114d0db30daf6$var$ExceptionCode.NO_DATA_ALLOWED_ERR = ($466114d0db30daf6$var$ExceptionMessage[6] = \"No data allowed\", 6);\nvar $466114d0db30daf6$var$NO_MODIFICATION_ALLOWED_ERR = $466114d0db30daf6$var$ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ($466114d0db30daf6$var$ExceptionMessage[7] = \"No modification allowed\", 7);\nvar $466114d0db30daf6$var$NOT_FOUND_ERR = $466114d0db30daf6$var$ExceptionCode.NOT_FOUND_ERR = ($466114d0db30daf6$var$ExceptionMessage[8] = \"Not found\", 8);\nvar $466114d0db30daf6$var$NOT_SUPPORTED_ERR = $466114d0db30daf6$var$ExceptionCode.NOT_SUPPORTED_ERR = ($466114d0db30daf6$var$ExceptionMessage[9] = \"Not supported\", 9);\nvar $466114d0db30daf6$var$INUSE_ATTRIBUTE_ERR = $466114d0db30daf6$var$ExceptionCode.INUSE_ATTRIBUTE_ERR = ($466114d0db30daf6$var$ExceptionMessage[10] = \"Attribute in use\", 10);\n//level2\nvar $466114d0db30daf6$var$INVALID_STATE_ERR = $466114d0db30daf6$var$ExceptionCode.INVALID_STATE_ERR = ($466114d0db30daf6$var$ExceptionMessage[11] = \"Invalid state\", 11);\nvar $466114d0db30daf6$var$SYNTAX_ERR = $466114d0db30daf6$var$ExceptionCode.SYNTAX_ERR = ($466114d0db30daf6$var$ExceptionMessage[12] = \"Syntax error\", 12);\nvar $466114d0db30daf6$var$INVALID_MODIFICATION_ERR = $466114d0db30daf6$var$ExceptionCode.INVALID_MODIFICATION_ERR = ($466114d0db30daf6$var$ExceptionMessage[13] = \"Invalid modification\", 13);\nvar $466114d0db30daf6$var$NAMESPACE_ERR = $466114d0db30daf6$var$ExceptionCode.NAMESPACE_ERR = ($466114d0db30daf6$var$ExceptionMessage[14] = \"Invalid namespace\", 14);\nvar $466114d0db30daf6$var$INVALID_ACCESS_ERR = $466114d0db30daf6$var$ExceptionCode.INVALID_ACCESS_ERR = ($466114d0db30daf6$var$ExceptionMessage[15] = \"Invalid access\", 15);\n/**\n * DOM Level 2\n * Object DOMException\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n */ function $466114d0db30daf6$var$DOMException(code, message) {\n    if (message instanceof Error) var error = message;\n    else {\n        error = this;\n        Error.call(this, $466114d0db30daf6$var$ExceptionMessage[code]);\n        this.message = $466114d0db30daf6$var$ExceptionMessage[code];\n        if (Error.captureStackTrace) Error.captureStackTrace(this, $466114d0db30daf6$var$DOMException);\n    }\n    error.code = code;\n    if (message) this.message = this.message + \": \" + message;\n    return error;\n}\n$466114d0db30daf6$var$DOMException.prototype = Error.prototype;\n$466114d0db30daf6$var$copy($466114d0db30daf6$var$ExceptionCode, $466114d0db30daf6$var$DOMException);\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n * The items in the NodeList are accessible via an integral index, starting from 0.\n */ function $466114d0db30daf6$var$NodeList() {}\n$466114d0db30daf6$var$NodeList.prototype = {\n    /**\n\t * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n\t * @standard level1\n\t */ length: 0,\n    /**\n\t * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n\t * @standard level1\n\t * @param index  unsigned long\n\t *   Index into the collection.\n\t * @return Node\n\t * \tThe node at the indexth position in the NodeList, or null if that is not a valid index.\n\t */ item: function(index) {\n        return index >= 0 && index < this.length ? this[index] : null;\n    },\n    toString: function(isHTML, nodeFilter) {\n        for(var buf = [], i = 0; i < this.length; i++)$466114d0db30daf6$var$serializeToString(this[i], buf, isHTML, nodeFilter);\n        return buf.join(\"\");\n    },\n    /**\n\t * @private\n\t * @param {function (Node):boolean} predicate\n\t * @returns {Node[]}\n\t */ filter: function(predicate) {\n        return Array.prototype.filter.call(this, predicate);\n    },\n    /**\n\t * @private\n\t * @param {Node} item\n\t * @returns {number}\n\t */ indexOf: function(item) {\n        return Array.prototype.indexOf.call(this, item);\n    }\n};\nfunction $466114d0db30daf6$var$LiveNodeList(node, refresh) {\n    this._node = node;\n    this._refresh = refresh;\n    $466114d0db30daf6$var$_updateLiveList(this);\n}\nfunction $466114d0db30daf6$var$_updateLiveList(list) {\n    var inc = list._node._inc || list._node.ownerDocument._inc;\n    if (list._inc !== inc) {\n        var ls = list._refresh(list._node);\n        $466114d0db30daf6$var$__set__(list, \"length\", ls.length);\n        if (!list.$$length || ls.length < list.$$length) {\n            for(var i = ls.length; (i in list); i++)if (Object.prototype.hasOwnProperty.call(list, i)) delete list[i];\n        }\n        $466114d0db30daf6$var$copy(ls, list);\n        list._inc = inc;\n    }\n}\n$466114d0db30daf6$var$LiveNodeList.prototype.item = function(i) {\n    $466114d0db30daf6$var$_updateLiveList(this);\n    return this[i] || null;\n};\n$466114d0db30daf6$var$_extends($466114d0db30daf6$var$LiveNodeList, $466114d0db30daf6$var$NodeList);\n/**\n * Objects implementing the NamedNodeMap interface are used\n * to represent collections of nodes that can be accessed by name.\n * Note that NamedNodeMap does not inherit from NodeList;\n * NamedNodeMaps are not maintained in any particular order.\n * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,\n * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\n * and does not imply that the DOM specifies an order to these Nodes.\n * NamedNodeMap objects in the DOM are live.\n * used for attributes or DocumentType entities\n */ function $466114d0db30daf6$var$NamedNodeMap() {}\nfunction $466114d0db30daf6$var$_findNodeIndex(list, node) {\n    var i = list.length;\n    while(i--){\n        if (list[i] === node) return i;\n    }\n}\nfunction $466114d0db30daf6$var$_addNamedNode(el, list, newAttr, oldAttr) {\n    if (oldAttr) list[$466114d0db30daf6$var$_findNodeIndex(list, oldAttr)] = newAttr;\n    else list[list.length++] = newAttr;\n    if (el) {\n        newAttr.ownerElement = el;\n        var doc = el.ownerDocument;\n        if (doc) {\n            oldAttr && $466114d0db30daf6$var$_onRemoveAttribute(doc, el, oldAttr);\n            $466114d0db30daf6$var$_onAddAttribute(doc, el, newAttr);\n        }\n    }\n}\nfunction $466114d0db30daf6$var$_removeNamedNode(el, list, attr) {\n    //console.log('remove attr:'+attr)\n    var i = $466114d0db30daf6$var$_findNodeIndex(list, attr);\n    if (i >= 0) {\n        var lastIndex = list.length - 1;\n        while(i < lastIndex)list[i] = list[++i];\n        list.length = lastIndex;\n        if (el) {\n            var doc = el.ownerDocument;\n            if (doc) {\n                $466114d0db30daf6$var$_onRemoveAttribute(doc, el, attr);\n                attr.ownerElement = null;\n            }\n        }\n    } else throw new $466114d0db30daf6$var$DOMException($466114d0db30daf6$var$NOT_FOUND_ERR, new Error(el.tagName + \"@\" + attr));\n}\n$466114d0db30daf6$var$NamedNodeMap.prototype = {\n    length: 0,\n    item: $466114d0db30daf6$var$NodeList.prototype.item,\n    getNamedItem: function(key) {\n        //\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n        //\t\t\treturn null;\n        //\t\t}\n        //console.log()\n        var i = this.length;\n        while(i--){\n            var attr = this[i];\n            //console.log(attr.nodeName,key)\n            if (attr.nodeName == key) return attr;\n        }\n    },\n    setNamedItem: function(attr) {\n        var el = attr.ownerElement;\n        if (el && el != this._ownerElement) throw new $466114d0db30daf6$var$DOMException($466114d0db30daf6$var$INUSE_ATTRIBUTE_ERR);\n        var oldAttr = this.getNamedItem(attr.nodeName);\n        $466114d0db30daf6$var$_addNamedNode(this._ownerElement, this, attr, oldAttr);\n        return oldAttr;\n    },\n    /* returns Node */ setNamedItemNS: function(attr) {\n        var el = attr.ownerElement, oldAttr;\n        if (el && el != this._ownerElement) throw new $466114d0db30daf6$var$DOMException($466114d0db30daf6$var$INUSE_ATTRIBUTE_ERR);\n        oldAttr = this.getNamedItemNS(attr.namespaceURI, attr.localName);\n        $466114d0db30daf6$var$_addNamedNode(this._ownerElement, this, attr, oldAttr);\n        return oldAttr;\n    },\n    /* returns Node */ removeNamedItem: function(key) {\n        var attr = this.getNamedItem(key);\n        $466114d0db30daf6$var$_removeNamedNode(this._ownerElement, this, attr);\n        return attr;\n    },\n    //for level2\n    removeNamedItemNS: function(namespaceURI, localName) {\n        var attr = this.getNamedItemNS(namespaceURI, localName);\n        $466114d0db30daf6$var$_removeNamedNode(this._ownerElement, this, attr);\n        return attr;\n    },\n    getNamedItemNS: function(namespaceURI, localName) {\n        var i = this.length;\n        while(i--){\n            var node = this[i];\n            if (node.localName == localName && node.namespaceURI == namespaceURI) return node;\n        }\n        return null;\n    }\n};\n/**\n * The DOMImplementation interface represents an object providing methods\n * which are not dependent on any particular document.\n * Such an object is returned by the `Document.implementation` property.\n *\n * __The individual methods describe the differences compared to the specs.__\n *\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\n * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)\n * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\n * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\n * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\n */ function $466114d0db30daf6$var$DOMImplementation() {}\n$466114d0db30daf6$var$DOMImplementation.prototype = {\n    /**\n\t * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.\n\t * The different implementations fairly diverged in what kind of features were reported.\n\t * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.\n\t *\n\t * @deprecated It is deprecated and modern browsers return true in all cases.\n\t *\n\t * @param {string} feature\n\t * @param {string} [version]\n\t * @returns {boolean} always true\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\n\t * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\n\t */ hasFeature: function(feature, version) {\n        return true;\n    },\n    /**\n\t * Creates an XML Document object of the specified type with its document element.\n\t *\n\t * __It behaves slightly different from the description in the living standard__:\n\t * - There is no interface/class `XMLDocument`, it returns a `Document` instance.\n\t * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string|null} namespaceURI\n\t * @param {string} qualifiedName\n\t * @param {DocumentType=null} doctype\n\t * @returns {Document}\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */ createDocument: function(namespaceURI, qualifiedName, doctype) {\n        var doc = new $466114d0db30daf6$var$Document();\n        doc.implementation = this;\n        doc.childNodes = new $466114d0db30daf6$var$NodeList();\n        doc.doctype = doctype || null;\n        if (doctype) doc.appendChild(doctype);\n        if (qualifiedName) {\n            var root = doc.createElementNS(namespaceURI, qualifiedName);\n            doc.appendChild(root);\n        }\n        return doc;\n    },\n    /**\n\t * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.\n\t *\n\t * __This behavior is slightly different from the in the specs__:\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string} qualifiedName\n\t * @param {string} [publicId]\n\t * @param {string} [systemId]\n\t * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation\n\t * \t\t\t\t  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */ createDocumentType: function(qualifiedName, publicId, systemId) {\n        var node = new $466114d0db30daf6$var$DocumentType();\n        node.name = qualifiedName;\n        node.nodeName = qualifiedName;\n        node.publicId = publicId || \"\";\n        node.systemId = systemId || \"\";\n        return node;\n    }\n};\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n */ function $466114d0db30daf6$var$Node() {}\n$466114d0db30daf6$var$Node.prototype = {\n    firstChild: null,\n    lastChild: null,\n    previousSibling: null,\n    nextSibling: null,\n    attributes: null,\n    parentNode: null,\n    childNodes: null,\n    ownerDocument: null,\n    nodeValue: null,\n    namespaceURI: null,\n    prefix: null,\n    localName: null,\n    // Modified in DOM Level 2:\n    insertBefore: function(newChild, refChild) {\n        return $466114d0db30daf6$var$_insertBefore(this, newChild, refChild);\n    },\n    replaceChild: function(newChild, oldChild) {\n        $466114d0db30daf6$var$_insertBefore(this, newChild, oldChild, $466114d0db30daf6$var$assertPreReplacementValidityInDocument);\n        if (oldChild) this.removeChild(oldChild);\n    },\n    removeChild: function(oldChild) {\n        return $466114d0db30daf6$var$_removeChild(this, oldChild);\n    },\n    appendChild: function(newChild) {\n        return this.insertBefore(newChild, null);\n    },\n    hasChildNodes: function() {\n        return this.firstChild != null;\n    },\n    cloneNode: function(deep) {\n        return $466114d0db30daf6$var$cloneNode(this.ownerDocument || this, this, deep);\n    },\n    // Modified in DOM Level 2:\n    normalize: function() {\n        var child = this.firstChild;\n        while(child){\n            var next = child.nextSibling;\n            if (next && next.nodeType == $466114d0db30daf6$var$TEXT_NODE && child.nodeType == $466114d0db30daf6$var$TEXT_NODE) {\n                this.removeChild(next);\n                child.appendData(next.data);\n            } else {\n                child.normalize();\n                child = next;\n            }\n        }\n    },\n    // Introduced in DOM Level 2:\n    isSupported: function(feature, version) {\n        return this.ownerDocument.implementation.hasFeature(feature, version);\n    },\n    // Introduced in DOM Level 2:\n    hasAttributes: function() {\n        return this.attributes.length > 0;\n    },\n    /**\n\t * Look up the prefix associated to the given namespace URI, starting from this node.\n\t * **The default namespace declarations are ignored by this method.**\n\t * See Namespace Prefix Lookup for details on the algorithm used by this method.\n\t *\n\t * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._\n\t *\n\t * @param {string | null} namespaceURI\n\t * @returns {string | null}\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\n\t * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\n\t * @see https://github.com/xmldom/xmldom/issues/322\n\t */ lookupPrefix: function(namespaceURI) {\n        var el = this;\n        while(el){\n            var map = el._nsMap;\n            //console.dir(map)\n            if (map) for(var n in map){\n                if (Object.prototype.hasOwnProperty.call(map, n) && map[n] === namespaceURI) return n;\n            }\n            el = el.nodeType == $466114d0db30daf6$var$ATTRIBUTE_NODE ? el.ownerDocument : el.parentNode;\n        }\n        return null;\n    },\n    // Introduced in DOM Level 3:\n    lookupNamespaceURI: function(prefix) {\n        var el = this;\n        while(el){\n            var map = el._nsMap;\n            //console.dir(map)\n            if (map) {\n                if (Object.prototype.hasOwnProperty.call(map, prefix)) return map[prefix];\n            }\n            el = el.nodeType == $466114d0db30daf6$var$ATTRIBUTE_NODE ? el.ownerDocument : el.parentNode;\n        }\n        return null;\n    },\n    // Introduced in DOM Level 3:\n    isDefaultNamespace: function(namespaceURI) {\n        var prefix = this.lookupPrefix(namespaceURI);\n        return prefix == null;\n    }\n};\nfunction $466114d0db30daf6$var$_xmlEncoder(c) {\n    return c == \"<\" && \"&lt;\" || c == \">\" && \"&gt;\" || c == \"&\" && \"&amp;\" || c == '\"' && \"&quot;\" || \"&#\" + c.charCodeAt() + \";\";\n}\n$466114d0db30daf6$var$copy($466114d0db30daf6$var$NodeType, $466114d0db30daf6$var$Node);\n$466114d0db30daf6$var$copy($466114d0db30daf6$var$NodeType, $466114d0db30daf6$var$Node.prototype);\n/**\n * @param callback return true for continue,false for break\n * @return boolean true: break visit;\n */ function $466114d0db30daf6$var$_visitNode(node, callback) {\n    if (callback(node)) return true;\n    if (node = node.firstChild) do {\n        if ($466114d0db30daf6$var$_visitNode(node, callback)) return true;\n    }while (node = node.nextSibling);\n}\nfunction $466114d0db30daf6$var$Document() {\n    this.ownerDocument = this;\n}\nfunction $466114d0db30daf6$var$_onAddAttribute(doc, el, newAttr) {\n    doc && doc._inc++;\n    var ns = newAttr.namespaceURI;\n    if (ns === $466114d0db30daf6$var$NAMESPACE.XMLNS) //update namespace\n    el._nsMap[newAttr.prefix ? newAttr.localName : \"\"] = newAttr.value;\n}\nfunction $466114d0db30daf6$var$_onRemoveAttribute(doc, el, newAttr, remove) {\n    doc && doc._inc++;\n    var ns = newAttr.namespaceURI;\n    if (ns === $466114d0db30daf6$var$NAMESPACE.XMLNS) //update namespace\n    delete el._nsMap[newAttr.prefix ? newAttr.localName : \"\"];\n}\n/**\n * Updates `el.childNodes`, updating the indexed items and it's `length`.\n * Passing `newChild` means it will be appended.\n * Otherwise it's assumed that an item has been removed,\n * and `el.firstNode` and it's `.nextSibling` are used\n * to walk the current list of child nodes.\n *\n * @param {Document} doc\n * @param {Node} el\n * @param {Node} [newChild]\n * @private\n */ function $466114d0db30daf6$var$_onUpdateChild(doc, el, newChild) {\n    if (doc && doc._inc) {\n        doc._inc++;\n        //update childNodes\n        var cs = el.childNodes;\n        if (newChild) cs[cs.length++] = newChild;\n        else {\n            var child = el.firstChild;\n            var i = 0;\n            while(child){\n                cs[i++] = child;\n                child = child.nextSibling;\n            }\n            cs.length = i;\n            delete cs[cs.length];\n        }\n    }\n}\n/**\n * Removes the connections between `parentNode` and `child`\n * and any existing `child.previousSibling` or `child.nextSibling`.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n *\n * @param {Node} parentNode\n * @param {Node} child\n * @returns {Node} the child that was removed.\n * @private\n */ function $466114d0db30daf6$var$_removeChild(parentNode, child) {\n    var previous = child.previousSibling;\n    var next = child.nextSibling;\n    if (previous) previous.nextSibling = next;\n    else parentNode.firstChild = next;\n    if (next) next.previousSibling = previous;\n    else parentNode.lastChild = previous;\n    child.parentNode = null;\n    child.previousSibling = null;\n    child.nextSibling = null;\n    $466114d0db30daf6$var$_onUpdateChild(parentNode.ownerDocument, parentNode);\n    return child;\n}\n/**\n * Returns `true` if `node` can be a parent for insertion.\n * @param {Node} node\n * @returns {boolean}\n */ function $466114d0db30daf6$var$hasValidParentNodeType(node) {\n    return node && (node.nodeType === $466114d0db30daf6$var$Node.DOCUMENT_NODE || node.nodeType === $466114d0db30daf6$var$Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === $466114d0db30daf6$var$Node.ELEMENT_NODE);\n}\n/**\n * Returns `true` if `node` can be inserted according to it's `nodeType`.\n * @param {Node} node\n * @returns {boolean}\n */ function $466114d0db30daf6$var$hasInsertableNodeType(node) {\n    return node && ($466114d0db30daf6$var$isElementNode(node) || $466114d0db30daf6$var$isTextNode(node) || $466114d0db30daf6$var$isDocTypeNode(node) || node.nodeType === $466114d0db30daf6$var$Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === $466114d0db30daf6$var$Node.COMMENT_NODE || node.nodeType === $466114d0db30daf6$var$Node.PROCESSING_INSTRUCTION_NODE);\n}\n/**\n * Returns true if `node` is a DOCTYPE node\n * @param {Node} node\n * @returns {boolean}\n */ function $466114d0db30daf6$var$isDocTypeNode(node) {\n    return node && node.nodeType === $466114d0db30daf6$var$Node.DOCUMENT_TYPE_NODE;\n}\n/**\n * Returns true if the node is an element\n * @param {Node} node\n * @returns {boolean}\n */ function $466114d0db30daf6$var$isElementNode(node) {\n    return node && node.nodeType === $466114d0db30daf6$var$Node.ELEMENT_NODE;\n}\n/**\n * Returns true if `node` is a text node\n * @param {Node} node\n * @returns {boolean}\n */ function $466114d0db30daf6$var$isTextNode(node) {\n    return node && node.nodeType === $466114d0db30daf6$var$Node.TEXT_NODE;\n}\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Document} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */ function $466114d0db30daf6$var$isElementInsertionPossible(doc, child) {\n    var parentChildNodes = doc.childNodes || [];\n    if ($466114d0db30daf6$var$find(parentChildNodes, $466114d0db30daf6$var$isElementNode) || $466114d0db30daf6$var$isDocTypeNode(child)) return false;\n    var docTypeNode = $466114d0db30daf6$var$find(parentChildNodes, $466114d0db30daf6$var$isDocTypeNode);\n    return !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Node} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */ function $466114d0db30daf6$var$isElementReplacementPossible(doc, child) {\n    var parentChildNodes = doc.childNodes || [];\n    function hasElementChildThatIsNotChild(node) {\n        return $466114d0db30daf6$var$isElementNode(node) && node !== child;\n    }\n    if ($466114d0db30daf6$var$find(parentChildNodes, hasElementChildThatIsNotChild)) return false;\n    var docTypeNode = $466114d0db30daf6$var$find(parentChildNodes, $466114d0db30daf6$var$isDocTypeNode);\n    return !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n/**\n * @private\n * Steps 1-5 of the checks before inserting and before replacing a child are the same.\n *\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */ function $466114d0db30daf6$var$assertPreInsertionValidity1to5(parent, node, child) {\n    // 1. If `parent` is not a Document, DocumentFragment, or Element node, then throw a \"HierarchyRequestError\" DOMException.\n    if (!$466114d0db30daf6$var$hasValidParentNodeType(parent)) throw new $466114d0db30daf6$var$DOMException($466114d0db30daf6$var$HIERARCHY_REQUEST_ERR, \"Unexpected parent node type \" + parent.nodeType);\n    // 2. If `node` is a host-including inclusive ancestor of `parent`, then throw a \"HierarchyRequestError\" DOMException.\n    // not implemented!\n    // 3. If `child` is non-null and its parent is not `parent`, then throw a \"NotFoundError\" DOMException.\n    if (child && child.parentNode !== parent) throw new $466114d0db30daf6$var$DOMException($466114d0db30daf6$var$NOT_FOUND_ERR, \"child not in parent\");\n    if (// 4. If `node` is not a DocumentFragment, DocumentType, Element, or CharacterData node, then throw a \"HierarchyRequestError\" DOMException.\n    !$466114d0db30daf6$var$hasInsertableNodeType(node) || // 5. If either `node` is a Text node and `parent` is a document,\n    // the sax parser currently adds top level text nodes, this will be fixed in 0.9.0\n    // || (node.nodeType === Node.TEXT_NODE && parent.nodeType === Node.DOCUMENT_NODE)\n    // or `node` is a doctype and `parent` is not a document, then throw a \"HierarchyRequestError\" DOMException.\n    $466114d0db30daf6$var$isDocTypeNode(node) && parent.nodeType !== $466114d0db30daf6$var$Node.DOCUMENT_NODE) throw new $466114d0db30daf6$var$DOMException($466114d0db30daf6$var$HIERARCHY_REQUEST_ERR, \"Unexpected node type \" + node.nodeType + \" for parent node type \" + parent.nodeType);\n}\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */ function $466114d0db30daf6$var$assertPreInsertionValidityInDocument(parent, node, child) {\n    var parentChildNodes = parent.childNodes || [];\n    var nodeChildNodes = node.childNodes || [];\n    // DocumentFragment\n    if (node.nodeType === $466114d0db30daf6$var$Node.DOCUMENT_FRAGMENT_NODE) {\n        var nodeChildElements = nodeChildNodes.filter($466114d0db30daf6$var$isElementNode);\n        // If node has more than one element child or has a Text node child.\n        if (nodeChildElements.length > 1 || $466114d0db30daf6$var$find(nodeChildNodes, $466114d0db30daf6$var$isTextNode)) throw new $466114d0db30daf6$var$DOMException($466114d0db30daf6$var$HIERARCHY_REQUEST_ERR, \"More than one element or text in fragment\");\n        // Otherwise, if `node` has one element child and either `parent` has an element child,\n        // `child` is a doctype, or `child` is non-null and a doctype is following `child`.\n        if (nodeChildElements.length === 1 && !$466114d0db30daf6$var$isElementInsertionPossible(parent, child)) throw new $466114d0db30daf6$var$DOMException($466114d0db30daf6$var$HIERARCHY_REQUEST_ERR, \"Element in fragment can not be inserted before doctype\");\n    }\n    // Element\n    if ($466114d0db30daf6$var$isElementNode(node)) {\n        // `parent` has an element child, `child` is a doctype,\n        // or `child` is non-null and a doctype is following `child`.\n        if (!$466114d0db30daf6$var$isElementInsertionPossible(parent, child)) throw new $466114d0db30daf6$var$DOMException($466114d0db30daf6$var$HIERARCHY_REQUEST_ERR, \"Only one element can be added and only after doctype\");\n    }\n    // DocumentType\n    if ($466114d0db30daf6$var$isDocTypeNode(node)) {\n        // `parent` has a doctype child,\n        if ($466114d0db30daf6$var$find(parentChildNodes, $466114d0db30daf6$var$isDocTypeNode)) throw new $466114d0db30daf6$var$DOMException($466114d0db30daf6$var$HIERARCHY_REQUEST_ERR, \"Only one doctype is allowed\");\n        var parentElementChild = $466114d0db30daf6$var$find(parentChildNodes, $466114d0db30daf6$var$isElementNode);\n        // `child` is non-null and an element is preceding `child`,\n        if (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) throw new $466114d0db30daf6$var$DOMException($466114d0db30daf6$var$HIERARCHY_REQUEST_ERR, \"Doctype can only be inserted before an element\");\n        // or `child` is null and `parent` has an element child.\n        if (!child && parentElementChild) throw new $466114d0db30daf6$var$DOMException($466114d0db30daf6$var$HIERARCHY_REQUEST_ERR, \"Doctype can not be appended since element is present\");\n    }\n}\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */ function $466114d0db30daf6$var$assertPreReplacementValidityInDocument(parent, node, child) {\n    var parentChildNodes = parent.childNodes || [];\n    var nodeChildNodes = node.childNodes || [];\n    // DocumentFragment\n    if (node.nodeType === $466114d0db30daf6$var$Node.DOCUMENT_FRAGMENT_NODE) {\n        var nodeChildElements = nodeChildNodes.filter($466114d0db30daf6$var$isElementNode);\n        // If `node` has more than one element child or has a Text node child.\n        if (nodeChildElements.length > 1 || $466114d0db30daf6$var$find(nodeChildNodes, $466114d0db30daf6$var$isTextNode)) throw new $466114d0db30daf6$var$DOMException($466114d0db30daf6$var$HIERARCHY_REQUEST_ERR, \"More than one element or text in fragment\");\n        // Otherwise, if `node` has one element child and either `parent` has an element child that is not `child` or a doctype is following `child`.\n        if (nodeChildElements.length === 1 && !$466114d0db30daf6$var$isElementReplacementPossible(parent, child)) throw new $466114d0db30daf6$var$DOMException($466114d0db30daf6$var$HIERARCHY_REQUEST_ERR, \"Element in fragment can not be inserted before doctype\");\n    }\n    // Element\n    if ($466114d0db30daf6$var$isElementNode(node)) {\n        // `parent` has an element child that is not `child` or a doctype is following `child`.\n        if (!$466114d0db30daf6$var$isElementReplacementPossible(parent, child)) throw new $466114d0db30daf6$var$DOMException($466114d0db30daf6$var$HIERARCHY_REQUEST_ERR, \"Only one element can be added and only after doctype\");\n    }\n    // DocumentType\n    if ($466114d0db30daf6$var$isDocTypeNode(node)) {\n        function hasDoctypeChildThatIsNotChild(node) {\n            return $466114d0db30daf6$var$isDocTypeNode(node) && node !== child;\n        }\n        // `parent` has a doctype child that is not `child`,\n        if ($466114d0db30daf6$var$find(parentChildNodes, hasDoctypeChildThatIsNotChild)) throw new $466114d0db30daf6$var$DOMException($466114d0db30daf6$var$HIERARCHY_REQUEST_ERR, \"Only one doctype is allowed\");\n        var parentElementChild = $466114d0db30daf6$var$find(parentChildNodes, $466114d0db30daf6$var$isElementNode);\n        // or an element is preceding `child`.\n        if (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) throw new $466114d0db30daf6$var$DOMException($466114d0db30daf6$var$HIERARCHY_REQUEST_ERR, \"Doctype can only be inserted before an element\");\n    }\n}\n/**\n * @private\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */ function $466114d0db30daf6$var$_insertBefore(parent, node, child, _inDocumentAssertion) {\n    // To ensure pre-insertion validity of a node into a parent before a child, run these steps:\n    $466114d0db30daf6$var$assertPreInsertionValidity1to5(parent, node, child);\n    // If parent is a document, and any of the statements below, switched on the interface node implements,\n    // are true, then throw a \"HierarchyRequestError\" DOMException.\n    if (parent.nodeType === $466114d0db30daf6$var$Node.DOCUMENT_NODE) (_inDocumentAssertion || $466114d0db30daf6$var$assertPreInsertionValidityInDocument)(parent, node, child);\n    var cp = node.parentNode;\n    if (cp) cp.removeChild(node); //remove and update\n    if (node.nodeType === $466114d0db30daf6$var$DOCUMENT_FRAGMENT_NODE) {\n        var newFirst = node.firstChild;\n        if (newFirst == null) return node;\n        var newLast = node.lastChild;\n    } else newFirst = newLast = node;\n    var pre = child ? child.previousSibling : parent.lastChild;\n    newFirst.previousSibling = pre;\n    newLast.nextSibling = child;\n    if (pre) pre.nextSibling = newFirst;\n    else parent.firstChild = newFirst;\n    if (child == null) parent.lastChild = newLast;\n    else child.previousSibling = newLast;\n    do newFirst.parentNode = parent;\n    while (newFirst !== newLast && (newFirst = newFirst.nextSibling));\n    $466114d0db30daf6$var$_onUpdateChild(parent.ownerDocument || parent, parent);\n    //console.log(parent.lastChild.nextSibling == null)\n    if (node.nodeType == $466114d0db30daf6$var$DOCUMENT_FRAGMENT_NODE) node.firstChild = node.lastChild = null;\n    return node;\n}\n/**\n * Appends `newChild` to `parentNode`.\n * If `newChild` is already connected to a `parentNode` it is first removed from it.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n * @param {Node} parentNode\n * @param {Node} newChild\n * @returns {Node}\n * @private\n */ function $466114d0db30daf6$var$_appendSingleChild(parentNode, newChild) {\n    if (newChild.parentNode) newChild.parentNode.removeChild(newChild);\n    newChild.parentNode = parentNode;\n    newChild.previousSibling = parentNode.lastChild;\n    newChild.nextSibling = null;\n    if (newChild.previousSibling) newChild.previousSibling.nextSibling = newChild;\n    else parentNode.firstChild = newChild;\n    parentNode.lastChild = newChild;\n    $466114d0db30daf6$var$_onUpdateChild(parentNode.ownerDocument, parentNode, newChild);\n    return newChild;\n}\n$466114d0db30daf6$var$Document.prototype = {\n    //implementation : null,\n    nodeName: \"#document\",\n    nodeType: $466114d0db30daf6$var$DOCUMENT_NODE,\n    /**\n\t * The DocumentType node of the document.\n\t *\n\t * @readonly\n\t * @type DocumentType\n\t */ doctype: null,\n    documentElement: null,\n    _inc: 1,\n    insertBefore: function(newChild, refChild) {\n        if (newChild.nodeType == $466114d0db30daf6$var$DOCUMENT_FRAGMENT_NODE) {\n            var child = newChild.firstChild;\n            while(child){\n                var next = child.nextSibling;\n                this.insertBefore(child, refChild);\n                child = next;\n            }\n            return newChild;\n        }\n        $466114d0db30daf6$var$_insertBefore(this, newChild, refChild);\n        newChild.ownerDocument = this;\n        if (this.documentElement === null && newChild.nodeType === $466114d0db30daf6$var$ELEMENT_NODE) this.documentElement = newChild;\n        return newChild;\n    },\n    removeChild: function(oldChild) {\n        if (this.documentElement == oldChild) this.documentElement = null;\n        return $466114d0db30daf6$var$_removeChild(this, oldChild);\n    },\n    replaceChild: function(newChild, oldChild) {\n        //raises\n        $466114d0db30daf6$var$_insertBefore(this, newChild, oldChild, $466114d0db30daf6$var$assertPreReplacementValidityInDocument);\n        newChild.ownerDocument = this;\n        if (oldChild) this.removeChild(oldChild);\n        if ($466114d0db30daf6$var$isElementNode(newChild)) this.documentElement = newChild;\n    },\n    // Introduced in DOM Level 2:\n    importNode: function(importedNode, deep) {\n        return $466114d0db30daf6$var$importNode(this, importedNode, deep);\n    },\n    // Introduced in DOM Level 2:\n    getElementById: function(id) {\n        var rtv = null;\n        $466114d0db30daf6$var$_visitNode(this.documentElement, function(node) {\n            if (node.nodeType == $466114d0db30daf6$var$ELEMENT_NODE) {\n                if (node.getAttribute(\"id\") == id) {\n                    rtv = node;\n                    return true;\n                }\n            }\n        });\n        return rtv;\n    },\n    /**\n\t * The `getElementsByClassName` method of `Document` interface returns an array-like object\n\t * of all child elements which have **all** of the given class name(s).\n\t *\n\t * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.\n\t *\n\t *\n\t * Warning: This is a live LiveNodeList.\n\t * Changes in the DOM will reflect in the array as the changes occur.\n\t * If an element selected by this array no longer qualifies for the selector,\n\t * it will automatically be removed. Be aware of this for iteration purposes.\n\t *\n\t * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\n\t * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\n\t */ getElementsByClassName: function(classNames) {\n        var classNamesSet = $466114d0db30daf6$var$toOrderedSet(classNames);\n        return new $466114d0db30daf6$var$LiveNodeList(this, function(base) {\n            var ls = [];\n            if (classNamesSet.length > 0) $466114d0db30daf6$var$_visitNode(base.documentElement, function(node) {\n                if (node !== base && node.nodeType === $466114d0db30daf6$var$ELEMENT_NODE) {\n                    var nodeClassNames = node.getAttribute(\"class\");\n                    // can be null if the attribute does not exist\n                    if (nodeClassNames) {\n                        // before splitting and iterating just compare them for the most common case\n                        var matches = classNames === nodeClassNames;\n                        if (!matches) {\n                            var nodeClassNamesSet = $466114d0db30daf6$var$toOrderedSet(nodeClassNames);\n                            matches = classNamesSet.every($466114d0db30daf6$var$arrayIncludes(nodeClassNamesSet));\n                        }\n                        if (matches) ls.push(node);\n                    }\n                }\n            });\n            return ls;\n        });\n    },\n    //document factory method:\n    createElement: function(tagName) {\n        var node = new $466114d0db30daf6$var$Element();\n        node.ownerDocument = this;\n        node.nodeName = tagName;\n        node.tagName = tagName;\n        node.localName = tagName;\n        node.childNodes = new $466114d0db30daf6$var$NodeList();\n        var attrs = node.attributes = new $466114d0db30daf6$var$NamedNodeMap();\n        attrs._ownerElement = node;\n        return node;\n    },\n    createDocumentFragment: function() {\n        var node = new $466114d0db30daf6$var$DocumentFragment();\n        node.ownerDocument = this;\n        node.childNodes = new $466114d0db30daf6$var$NodeList();\n        return node;\n    },\n    createTextNode: function(data) {\n        var node = new $466114d0db30daf6$var$Text();\n        node.ownerDocument = this;\n        node.appendData(data);\n        return node;\n    },\n    createComment: function(data) {\n        var node = new $466114d0db30daf6$var$Comment();\n        node.ownerDocument = this;\n        node.appendData(data);\n        return node;\n    },\n    createCDATASection: function(data) {\n        var node = new $466114d0db30daf6$var$CDATASection();\n        node.ownerDocument = this;\n        node.appendData(data);\n        return node;\n    },\n    createProcessingInstruction: function(target, data) {\n        var node = new $466114d0db30daf6$var$ProcessingInstruction();\n        node.ownerDocument = this;\n        node.tagName = node.nodeName = node.target = target;\n        node.nodeValue = node.data = data;\n        return node;\n    },\n    createAttribute: function(name) {\n        var node = new $466114d0db30daf6$var$Attr();\n        node.ownerDocument = this;\n        node.name = name;\n        node.nodeName = name;\n        node.localName = name;\n        node.specified = true;\n        return node;\n    },\n    createEntityReference: function(name) {\n        var node = new $466114d0db30daf6$var$EntityReference();\n        node.ownerDocument = this;\n        node.nodeName = name;\n        return node;\n    },\n    // Introduced in DOM Level 2:\n    createElementNS: function(namespaceURI, qualifiedName) {\n        var node = new $466114d0db30daf6$var$Element();\n        var pl = qualifiedName.split(\":\");\n        var attrs = node.attributes = new $466114d0db30daf6$var$NamedNodeMap();\n        node.childNodes = new $466114d0db30daf6$var$NodeList();\n        node.ownerDocument = this;\n        node.nodeName = qualifiedName;\n        node.tagName = qualifiedName;\n        node.namespaceURI = namespaceURI;\n        if (pl.length == 2) {\n            node.prefix = pl[0];\n            node.localName = pl[1];\n        } else //el.prefix = null;\n        node.localName = qualifiedName;\n        attrs._ownerElement = node;\n        return node;\n    },\n    // Introduced in DOM Level 2:\n    createAttributeNS: function(namespaceURI, qualifiedName) {\n        var node = new $466114d0db30daf6$var$Attr();\n        var pl = qualifiedName.split(\":\");\n        node.ownerDocument = this;\n        node.nodeName = qualifiedName;\n        node.name = qualifiedName;\n        node.namespaceURI = namespaceURI;\n        node.specified = true;\n        if (pl.length == 2) {\n            node.prefix = pl[0];\n            node.localName = pl[1];\n        } else //el.prefix = null;\n        node.localName = qualifiedName;\n        return node;\n    }\n};\n$466114d0db30daf6$var$_extends($466114d0db30daf6$var$Document, $466114d0db30daf6$var$Node);\nfunction $466114d0db30daf6$var$Element() {\n    this._nsMap = {};\n}\n$466114d0db30daf6$var$Element.prototype = {\n    nodeType: $466114d0db30daf6$var$ELEMENT_NODE,\n    hasAttribute: function(name) {\n        return this.getAttributeNode(name) != null;\n    },\n    getAttribute: function(name) {\n        var attr = this.getAttributeNode(name);\n        return attr && attr.value || \"\";\n    },\n    getAttributeNode: function(name) {\n        return this.attributes.getNamedItem(name);\n    },\n    setAttribute: function(name, value) {\n        var attr = this.ownerDocument.createAttribute(name);\n        attr.value = attr.nodeValue = \"\" + value;\n        this.setAttributeNode(attr);\n    },\n    removeAttribute: function(name) {\n        var attr = this.getAttributeNode(name);\n        attr && this.removeAttributeNode(attr);\n    },\n    //four real opeartion method\n    appendChild: function(newChild) {\n        if (newChild.nodeType === $466114d0db30daf6$var$DOCUMENT_FRAGMENT_NODE) return this.insertBefore(newChild, null);\n        else return $466114d0db30daf6$var$_appendSingleChild(this, newChild);\n    },\n    setAttributeNode: function(newAttr) {\n        return this.attributes.setNamedItem(newAttr);\n    },\n    setAttributeNodeNS: function(newAttr) {\n        return this.attributes.setNamedItemNS(newAttr);\n    },\n    removeAttributeNode: function(oldAttr) {\n        //console.log(this == oldAttr.ownerElement)\n        return this.attributes.removeNamedItem(oldAttr.nodeName);\n    },\n    //get real attribute name,and remove it by removeAttributeNode\n    removeAttributeNS: function(namespaceURI, localName) {\n        var old = this.getAttributeNodeNS(namespaceURI, localName);\n        old && this.removeAttributeNode(old);\n    },\n    hasAttributeNS: function(namespaceURI, localName) {\n        return this.getAttributeNodeNS(namespaceURI, localName) != null;\n    },\n    getAttributeNS: function(namespaceURI, localName) {\n        var attr = this.getAttributeNodeNS(namespaceURI, localName);\n        return attr && attr.value || \"\";\n    },\n    setAttributeNS: function(namespaceURI, qualifiedName, value) {\n        var attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n        attr.value = attr.nodeValue = \"\" + value;\n        this.setAttributeNode(attr);\n    },\n    getAttributeNodeNS: function(namespaceURI, localName) {\n        return this.attributes.getNamedItemNS(namespaceURI, localName);\n    },\n    getElementsByTagName: function(tagName) {\n        return new $466114d0db30daf6$var$LiveNodeList(this, function(base) {\n            var ls = [];\n            $466114d0db30daf6$var$_visitNode(base, function(node) {\n                if (node !== base && node.nodeType == $466114d0db30daf6$var$ELEMENT_NODE && (tagName === \"*\" || node.tagName == tagName)) ls.push(node);\n            });\n            return ls;\n        });\n    },\n    getElementsByTagNameNS: function(namespaceURI, localName) {\n        return new $466114d0db30daf6$var$LiveNodeList(this, function(base) {\n            var ls = [];\n            $466114d0db30daf6$var$_visitNode(base, function(node) {\n                if (node !== base && node.nodeType === $466114d0db30daf6$var$ELEMENT_NODE && (namespaceURI === \"*\" || node.namespaceURI === namespaceURI) && (localName === \"*\" || node.localName == localName)) ls.push(node);\n            });\n            return ls;\n        });\n    }\n};\n$466114d0db30daf6$var$Document.prototype.getElementsByTagName = $466114d0db30daf6$var$Element.prototype.getElementsByTagName;\n$466114d0db30daf6$var$Document.prototype.getElementsByTagNameNS = $466114d0db30daf6$var$Element.prototype.getElementsByTagNameNS;\n$466114d0db30daf6$var$_extends($466114d0db30daf6$var$Element, $466114d0db30daf6$var$Node);\nfunction $466114d0db30daf6$var$Attr() {}\n$466114d0db30daf6$var$Attr.prototype.nodeType = $466114d0db30daf6$var$ATTRIBUTE_NODE;\n$466114d0db30daf6$var$_extends($466114d0db30daf6$var$Attr, $466114d0db30daf6$var$Node);\nfunction $466114d0db30daf6$var$CharacterData() {}\n$466114d0db30daf6$var$CharacterData.prototype = {\n    data: \"\",\n    substringData: function(offset, count) {\n        return this.data.substring(offset, offset + count);\n    },\n    appendData: function(text) {\n        text = this.data + text;\n        this.nodeValue = this.data = text;\n        this.length = text.length;\n    },\n    insertData: function(offset, text) {\n        this.replaceData(offset, 0, text);\n    },\n    appendChild: function(newChild) {\n        throw new Error($466114d0db30daf6$var$ExceptionMessage[$466114d0db30daf6$var$HIERARCHY_REQUEST_ERR]);\n    },\n    deleteData: function(offset, count) {\n        this.replaceData(offset, count, \"\");\n    },\n    replaceData: function(offset, count, text) {\n        var start = this.data.substring(0, offset);\n        var end = this.data.substring(offset + count);\n        text = start + text + end;\n        this.nodeValue = this.data = text;\n        this.length = text.length;\n    }\n};\n$466114d0db30daf6$var$_extends($466114d0db30daf6$var$CharacterData, $466114d0db30daf6$var$Node);\nfunction $466114d0db30daf6$var$Text() {}\n$466114d0db30daf6$var$Text.prototype = {\n    nodeName: \"#text\",\n    nodeType: $466114d0db30daf6$var$TEXT_NODE,\n    splitText: function(offset) {\n        var text = this.data;\n        var newText = text.substring(offset);\n        text = text.substring(0, offset);\n        this.data = this.nodeValue = text;\n        this.length = text.length;\n        var newNode = this.ownerDocument.createTextNode(newText);\n        if (this.parentNode) this.parentNode.insertBefore(newNode, this.nextSibling);\n        return newNode;\n    }\n};\n$466114d0db30daf6$var$_extends($466114d0db30daf6$var$Text, $466114d0db30daf6$var$CharacterData);\nfunction $466114d0db30daf6$var$Comment() {}\n$466114d0db30daf6$var$Comment.prototype = {\n    nodeName: \"#comment\",\n    nodeType: $466114d0db30daf6$var$COMMENT_NODE\n};\n$466114d0db30daf6$var$_extends($466114d0db30daf6$var$Comment, $466114d0db30daf6$var$CharacterData);\nfunction $466114d0db30daf6$var$CDATASection() {}\n$466114d0db30daf6$var$CDATASection.prototype = {\n    nodeName: \"#cdata-section\",\n    nodeType: $466114d0db30daf6$var$CDATA_SECTION_NODE\n};\n$466114d0db30daf6$var$_extends($466114d0db30daf6$var$CDATASection, $466114d0db30daf6$var$CharacterData);\nfunction $466114d0db30daf6$var$DocumentType() {}\n$466114d0db30daf6$var$DocumentType.prototype.nodeType = $466114d0db30daf6$var$DOCUMENT_TYPE_NODE;\n$466114d0db30daf6$var$_extends($466114d0db30daf6$var$DocumentType, $466114d0db30daf6$var$Node);\nfunction $466114d0db30daf6$var$Notation() {}\n$466114d0db30daf6$var$Notation.prototype.nodeType = $466114d0db30daf6$var$NOTATION_NODE;\n$466114d0db30daf6$var$_extends($466114d0db30daf6$var$Notation, $466114d0db30daf6$var$Node);\nfunction $466114d0db30daf6$var$Entity() {}\n$466114d0db30daf6$var$Entity.prototype.nodeType = $466114d0db30daf6$var$ENTITY_NODE;\n$466114d0db30daf6$var$_extends($466114d0db30daf6$var$Entity, $466114d0db30daf6$var$Node);\nfunction $466114d0db30daf6$var$EntityReference() {}\n$466114d0db30daf6$var$EntityReference.prototype.nodeType = $466114d0db30daf6$var$ENTITY_REFERENCE_NODE;\n$466114d0db30daf6$var$_extends($466114d0db30daf6$var$EntityReference, $466114d0db30daf6$var$Node);\nfunction $466114d0db30daf6$var$DocumentFragment() {}\n$466114d0db30daf6$var$DocumentFragment.prototype.nodeName = \"#document-fragment\";\n$466114d0db30daf6$var$DocumentFragment.prototype.nodeType = $466114d0db30daf6$var$DOCUMENT_FRAGMENT_NODE;\n$466114d0db30daf6$var$_extends($466114d0db30daf6$var$DocumentFragment, $466114d0db30daf6$var$Node);\nfunction $466114d0db30daf6$var$ProcessingInstruction() {}\n$466114d0db30daf6$var$ProcessingInstruction.prototype.nodeType = $466114d0db30daf6$var$PROCESSING_INSTRUCTION_NODE;\n$466114d0db30daf6$var$_extends($466114d0db30daf6$var$ProcessingInstruction, $466114d0db30daf6$var$Node);\nfunction $466114d0db30daf6$var$XMLSerializer() {}\n$466114d0db30daf6$var$XMLSerializer.prototype.serializeToString = function(node, isHtml, nodeFilter) {\n    return $466114d0db30daf6$var$nodeSerializeToString.call(node, isHtml, nodeFilter);\n};\n$466114d0db30daf6$var$Node.prototype.toString = $466114d0db30daf6$var$nodeSerializeToString;\nfunction $466114d0db30daf6$var$nodeSerializeToString(isHtml, nodeFilter) {\n    var buf = [];\n    var refNode = this.nodeType == 9 && this.documentElement || this;\n    var prefix = refNode.prefix;\n    var uri = refNode.namespaceURI;\n    if (uri && prefix == null) {\n        //console.log(prefix)\n        var prefix = refNode.lookupPrefix(uri);\n        if (prefix == null) //isHTML = true;\n        var visibleNamespaces = [\n            {\n                namespace: uri,\n                prefix: null\n            }\n        ];\n    }\n    $466114d0db30daf6$var$serializeToString(this, buf, isHtml, nodeFilter, visibleNamespaces);\n    //console.log('###',this.nodeType,uri,prefix,buf.join(''))\n    return buf.join(\"\");\n}\nfunction $466114d0db30daf6$var$needNamespaceDefine(node, isHTML, visibleNamespaces) {\n    var prefix = node.prefix || \"\";\n    var uri = node.namespaceURI;\n    // According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\n    // and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\n    // > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\n    // in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\n    // and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\n    // > [...] Furthermore, the attribute value [...] must not be an empty string.\n    // so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\n    if (!uri) return false;\n    if (prefix === \"xml\" && uri === $466114d0db30daf6$var$NAMESPACE.XML || uri === $466114d0db30daf6$var$NAMESPACE.XMLNS) return false;\n    var i = visibleNamespaces.length;\n    while(i--){\n        var ns = visibleNamespaces[i];\n        // get namespace prefix\n        if (ns.prefix === prefix) return ns.namespace !== uri;\n    }\n    return true;\n}\n/**\n * Well-formed constraint: No < in Attribute Values\n * > The replacement text of any entity referred to directly or indirectly\n * > in an attribute value must not contain a <.\n * @see https://www.w3.org/TR/xml11/#CleanAttrVals\n * @see https://www.w3.org/TR/xml11/#NT-AttValue\n *\n * Literal whitespace other than space that appear in attribute values\n * are serialized as their entity references, so they will be preserved.\n * (In contrast to whitespace literals in the input which are normalized to spaces)\n * @see https://www.w3.org/TR/xml11/#AVNormalize\n * @see https://w3c.github.io/DOM-Parsing/#serializing-an-element-s-attributes\n */ function $466114d0db30daf6$var$addSerializedAttribute(buf, qualifiedName, value) {\n    buf.push(\" \", qualifiedName, '=\"', value.replace(/[<>&\"\\t\\n\\r]/g, $466114d0db30daf6$var$_xmlEncoder), '\"');\n}\nfunction $466114d0db30daf6$var$serializeToString(node, buf, isHTML, nodeFilter, visibleNamespaces) {\n    if (!visibleNamespaces) visibleNamespaces = [];\n    if (nodeFilter) {\n        node = nodeFilter(node);\n        if (node) {\n            if (typeof node == \"string\") {\n                buf.push(node);\n                return;\n            }\n        } else return;\n    //buf.sort.apply(attrs, attributeSorter);\n    }\n    switch(node.nodeType){\n        case $466114d0db30daf6$var$ELEMENT_NODE:\n            var attrs = node.attributes;\n            var len = attrs.length;\n            var child = node.firstChild;\n            var nodeName = node.tagName;\n            isHTML = $466114d0db30daf6$var$NAMESPACE.isHTML(node.namespaceURI) || isHTML;\n            var prefixedNodeName = nodeName;\n            if (!isHTML && !node.prefix && node.namespaceURI) {\n                var defaultNS;\n                // lookup current default ns from `xmlns` attribute\n                for(var ai = 0; ai < attrs.length; ai++)if (attrs.item(ai).name === \"xmlns\") {\n                    defaultNS = attrs.item(ai).value;\n                    break;\n                }\n                if (!defaultNS) // lookup current default ns in visibleNamespaces\n                for(var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--){\n                    var namespace = visibleNamespaces[nsi];\n                    if (namespace.prefix === \"\" && namespace.namespace === node.namespaceURI) {\n                        defaultNS = namespace.namespace;\n                        break;\n                    }\n                }\n                if (defaultNS !== node.namespaceURI) for(var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--){\n                    var namespace = visibleNamespaces[nsi];\n                    if (namespace.namespace === node.namespaceURI) {\n                        if (namespace.prefix) prefixedNodeName = namespace.prefix + \":\" + nodeName;\n                        break;\n                    }\n                }\n            }\n            buf.push(\"<\", prefixedNodeName);\n            for(var i = 0; i < len; i++){\n                // add namespaces for attributes\n                var attr = attrs.item(i);\n                if (attr.prefix == \"xmlns\") visibleNamespaces.push({\n                    prefix: attr.localName,\n                    namespace: attr.value\n                });\n                else if (attr.nodeName == \"xmlns\") visibleNamespaces.push({\n                    prefix: \"\",\n                    namespace: attr.value\n                });\n            }\n            for(var i = 0; i < len; i++){\n                var attr = attrs.item(i);\n                if ($466114d0db30daf6$var$needNamespaceDefine(attr, isHTML, visibleNamespaces)) {\n                    var prefix = attr.prefix || \"\";\n                    var uri = attr.namespaceURI;\n                    $466114d0db30daf6$var$addSerializedAttribute(buf, prefix ? \"xmlns:\" + prefix : \"xmlns\", uri);\n                    visibleNamespaces.push({\n                        prefix: prefix,\n                        namespace: uri\n                    });\n                }\n                $466114d0db30daf6$var$serializeToString(attr, buf, isHTML, nodeFilter, visibleNamespaces);\n            }\n            // add namespace for current node\n            if (nodeName === prefixedNodeName && $466114d0db30daf6$var$needNamespaceDefine(node, isHTML, visibleNamespaces)) {\n                var prefix = node.prefix || \"\";\n                var uri = node.namespaceURI;\n                $466114d0db30daf6$var$addSerializedAttribute(buf, prefix ? \"xmlns:\" + prefix : \"xmlns\", uri);\n                visibleNamespaces.push({\n                    prefix: prefix,\n                    namespace: uri\n                });\n            }\n            if (child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)) {\n                buf.push(\">\");\n                //if is cdata child node\n                if (isHTML && /^script$/i.test(nodeName)) while(child){\n                    if (child.data) buf.push(child.data);\n                    else $466114d0db30daf6$var$serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n                    child = child.nextSibling;\n                }\n                else while(child){\n                    $466114d0db30daf6$var$serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n                    child = child.nextSibling;\n                }\n                buf.push(\"</\", prefixedNodeName, \">\");\n            } else buf.push(\"/>\");\n            // remove added visible namespaces\n            //visibleNamespaces.length = startVisibleNamespaces;\n            return;\n        case $466114d0db30daf6$var$DOCUMENT_NODE:\n        case $466114d0db30daf6$var$DOCUMENT_FRAGMENT_NODE:\n            var child = node.firstChild;\n            while(child){\n                $466114d0db30daf6$var$serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n                child = child.nextSibling;\n            }\n            return;\n        case $466114d0db30daf6$var$ATTRIBUTE_NODE:\n            return $466114d0db30daf6$var$addSerializedAttribute(buf, node.name, node.value);\n        case $466114d0db30daf6$var$TEXT_NODE:\n            /**\n\t\t * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\n\t\t * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\n\t\t * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\n\t\t * `&amp;` and `&lt;` respectively.\n\t\t * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\n\t\t * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\n\t\t * when that string is not marking the end of a CDATA section.\n\t\t *\n\t\t * In the content of elements, character data is any string of characters\n\t\t * which does not contain the start-delimiter of any markup\n\t\t * and does not include the CDATA-section-close delimiter, `]]>`.\n\t\t *\n\t\t * @see https://www.w3.org/TR/xml/#NT-CharData\n\t\t * @see https://w3c.github.io/DOM-Parsing/#xml-serializing-a-text-node\n\t\t */ return buf.push(node.data.replace(/[<&>]/g, $466114d0db30daf6$var$_xmlEncoder));\n        case $466114d0db30daf6$var$CDATA_SECTION_NODE:\n            return buf.push(\"<![CDATA[\", node.data, \"]]>\");\n        case $466114d0db30daf6$var$COMMENT_NODE:\n            return buf.push(\"<!--\", node.data, \"-->\");\n        case $466114d0db30daf6$var$DOCUMENT_TYPE_NODE:\n            var pubid = node.publicId;\n            var sysid = node.systemId;\n            buf.push(\"<!DOCTYPE \", node.name);\n            if (pubid) {\n                buf.push(\" PUBLIC \", pubid);\n                if (sysid && sysid != \".\") buf.push(\" \", sysid);\n                buf.push(\">\");\n            } else if (sysid && sysid != \".\") buf.push(\" SYSTEM \", sysid, \">\");\n            else {\n                var sub = node.internalSubset;\n                if (sub) buf.push(\" [\", sub, \"]\");\n                buf.push(\">\");\n            }\n            return;\n        case $466114d0db30daf6$var$PROCESSING_INSTRUCTION_NODE:\n            return buf.push(\"<?\", node.target, \" \", node.data, \"?>\");\n        case $466114d0db30daf6$var$ENTITY_REFERENCE_NODE:\n            return buf.push(\"&\", node.nodeName, \";\");\n        //case ENTITY_NODE:\n        //case NOTATION_NODE:\n        default:\n            buf.push(\"??\", node.nodeName);\n    }\n}\nfunction $466114d0db30daf6$var$importNode(doc, node, deep) {\n    var node2;\n    switch(node.nodeType){\n        case $466114d0db30daf6$var$ELEMENT_NODE:\n            node2 = node.cloneNode(false);\n            node2.ownerDocument = doc;\n        //var attrs = node2.attributes;\n        //var len = attrs.length;\n        //for(var i=0;i<len;i++){\n        //node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n        //}\n        case $466114d0db30daf6$var$DOCUMENT_FRAGMENT_NODE:\n            break;\n        case $466114d0db30daf6$var$ATTRIBUTE_NODE:\n            deep = true;\n            break;\n    }\n    if (!node2) node2 = node.cloneNode(false); //false\n    node2.ownerDocument = doc;\n    node2.parentNode = null;\n    if (deep) {\n        var child = node.firstChild;\n        while(child){\n            node2.appendChild($466114d0db30daf6$var$importNode(doc, child, deep));\n            child = child.nextSibling;\n        }\n    }\n    return node2;\n}\n//\n//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n//\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\nfunction $466114d0db30daf6$var$cloneNode(doc, node, deep) {\n    var node2 = new node.constructor();\n    for(var n in node)if (Object.prototype.hasOwnProperty.call(node, n)) {\n        var v = node[n];\n        if (typeof v != \"object\") {\n            if (v != node2[n]) node2[n] = v;\n        }\n    }\n    if (node.childNodes) node2.childNodes = new $466114d0db30daf6$var$NodeList();\n    node2.ownerDocument = doc;\n    switch(node2.nodeType){\n        case $466114d0db30daf6$var$ELEMENT_NODE:\n            var attrs = node.attributes;\n            var attrs2 = node2.attributes = new $466114d0db30daf6$var$NamedNodeMap();\n            var len = attrs.length;\n            attrs2._ownerElement = node2;\n            for(var i = 0; i < len; i++)node2.setAttributeNode($466114d0db30daf6$var$cloneNode(doc, attrs.item(i), true));\n            break;\n        case $466114d0db30daf6$var$ATTRIBUTE_NODE:\n            deep = true;\n    }\n    if (deep) {\n        var child = node.firstChild;\n        while(child){\n            node2.appendChild($466114d0db30daf6$var$cloneNode(doc, child, deep));\n            child = child.nextSibling;\n        }\n    }\n    return node2;\n}\nfunction $466114d0db30daf6$var$__set__(object, key, value) {\n    object[key] = value;\n}\n//do dynamic\ntry {\n    if (Object.defineProperty) {\n        Object.defineProperty($466114d0db30daf6$var$LiveNodeList.prototype, \"length\", {\n            get: function() {\n                $466114d0db30daf6$var$_updateLiveList(this);\n                return this.$$length;\n            }\n        });\n        Object.defineProperty($466114d0db30daf6$var$Node.prototype, \"textContent\", {\n            get: function() {\n                return getTextContent(this);\n            },\n            set: function(data) {\n                switch(this.nodeType){\n                    case $466114d0db30daf6$var$ELEMENT_NODE:\n                    case $466114d0db30daf6$var$DOCUMENT_FRAGMENT_NODE:\n                        while(this.firstChild)this.removeChild(this.firstChild);\n                        if (data || String(data)) this.appendChild(this.ownerDocument.createTextNode(data));\n                        break;\n                    default:\n                        this.data = data;\n                        this.value = data;\n                        this.nodeValue = data;\n                }\n            }\n        });\n        function getTextContent(node) {\n            switch(node.nodeType){\n                case $466114d0db30daf6$var$ELEMENT_NODE:\n                case $466114d0db30daf6$var$DOCUMENT_FRAGMENT_NODE:\n                    var buf = [];\n                    node = node.firstChild;\n                    while(node){\n                        if (node.nodeType !== 7 && node.nodeType !== 8) buf.push(getTextContent(node));\n                        node = node.nextSibling;\n                    }\n                    return buf.join(\"\");\n                default:\n                    return node.nodeValue;\n            }\n        }\n        $466114d0db30daf6$var$__set__ = function(object, key, value) {\n            //console.log(value)\n            object[\"$$\" + key] = value;\n        };\n    }\n} catch (e) {}\n$466114d0db30daf6$export$d1d99cf900472499 = $466114d0db30daf6$var$DocumentType;\n$466114d0db30daf6$export$fe58bcf938607f6a = $466114d0db30daf6$var$DOMException;\n$466114d0db30daf6$export$455426655eab1d48 = $466114d0db30daf6$var$DOMImplementation;\n$466114d0db30daf6$export$db77ccec0bb4ccac = $466114d0db30daf6$var$Element;\n$466114d0db30daf6$export$85c928794f8d04d4 = $466114d0db30daf6$var$Node;\n$466114d0db30daf6$export$79b41aa5d56abdff = $466114d0db30daf6$var$NodeList;\n$466114d0db30daf6$export$64f0bed4ae6f0f24 = $466114d0db30daf6$var$XMLSerializer; //}\n\n});\nparcelRegister(\"fKAiq\", function(module, exports) {\n\n$parcel$export(module.exports, \"find\", () => $b7774e9396b5187f$export$71aa6c912b956294, (v) => $b7774e9396b5187f$export$71aa6c912b956294 = v);\n$parcel$export(module.exports, \"freeze\", () => $b7774e9396b5187f$export$792f3d81ea979f55, (v) => $b7774e9396b5187f$export$792f3d81ea979f55 = v);\n$parcel$export(module.exports, \"NAMESPACE\", () => $b7774e9396b5187f$export$6aad947bda0f3f46, (v) => $b7774e9396b5187f$export$6aad947bda0f3f46 = v);\nvar $b7774e9396b5187f$export$e6e34fd1f2686227;\nvar $b7774e9396b5187f$export$71aa6c912b956294;\nvar $b7774e9396b5187f$export$792f3d81ea979f55;\nvar $b7774e9396b5187f$export$c6cb9dd1e3ada1aa;\nvar $b7774e9396b5187f$export$6aad947bda0f3f46;\n\"use strict\";\n/**\n * Ponyfill for `Array.prototype.find` which is only available in ES6 runtimes.\n *\n * Works with anything that has a `length` property and index access properties, including NodeList.\n *\n * @template {unknown} T\n * @param {Array<T> | ({length:number, [number]: T})} list\n * @param {function (item: T, index: number, list:Array<T> | ({length:number, [number]: T})):boolean} predicate\n * @param {Partial<Pick<ArrayConstructor['prototype'], 'find'>>?} ac `Array.prototype` by default,\n * \t\t\t\tallows injecting a custom implementation in tests\n * @returns {T | undefined}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n * @see https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.find\n */ function $b7774e9396b5187f$var$find(list, predicate, ac) {\n    if (ac === undefined) ac = Array.prototype;\n    if (list && typeof ac.find === \"function\") return ac.find.call(list, predicate);\n    for(var i = 0; i < list.length; i++)if (Object.prototype.hasOwnProperty.call(list, i)) {\n        var item = list[i];\n        if (predicate.call(undefined, item, i, list)) return item;\n    }\n}\n/**\n * \"Shallow freezes\" an object to render it immutable.\n * Uses `Object.freeze` if available,\n * otherwise the immutability is only in the type.\n *\n * Is used to create \"enum like\" objects.\n *\n * @template T\n * @param {T} object the object to freeze\n * @param {Pick<ObjectConstructor, 'freeze'> = Object} oc `Object` by default,\n * \t\t\t\tallows to inject custom object constructor for tests\n * @returns {Readonly<T>}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n */ function $b7774e9396b5187f$var$freeze(object, oc) {\n    if (oc === undefined) oc = Object;\n    return oc && typeof oc.freeze === \"function\" ? oc.freeze(object) : object;\n}\n/**\n * Since we can not rely on `Object.assign` we provide a simplified version\n * that is sufficient for our needs.\n *\n * @param {Object} target\n * @param {Object | null | undefined} source\n *\n * @returns {Object} target\n * @throws TypeError if target is not an object\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n * @see https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-object.assign\n */ function $b7774e9396b5187f$var$assign(target, source) {\n    if (target === null || typeof target !== \"object\") throw new TypeError(\"target is not an object\");\n    for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];\n    return target;\n}\n/**\n * All mime types that are allowed as input to `DOMParser.parseFromString`\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02 MDN\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype WHATWG HTML Spec\n * @see DOMParser.prototype.parseFromString\n */ var $b7774e9396b5187f$var$MIME_TYPE = $b7774e9396b5187f$var$freeze({\n    /**\n\t * `text/html`, the only mime type that triggers treating an XML document as HTML.\n\t *\n\t * @see DOMParser.SupportedType.isHTML\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring WHATWG HTML Spec\n\t */ HTML: \"text/html\",\n    /**\n\t * Helper method to check a mime type if it indicates an HTML document\n\t *\n\t * @param {string} [value]\n\t * @returns {boolean}\n\t *\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring \t */ isHTML: function(value) {\n        return value === $b7774e9396b5187f$var$MIME_TYPE.HTML;\n    },\n    /**\n\t * `application/xml`, the standard mime type for XML documents.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType registration\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */ XML_APPLICATION: \"application/xml\",\n    /**\n\t * `text/html`, an alias for `application/xml`.\n\t *\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303\n\t * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */ XML_TEXT: \"text/xml\",\n    /**\n\t * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,\n\t * but is parsed as an XML document.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType registration\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec\n\t * @see https://en.wikipedia.org/wiki/XHTML Wikipedia\n\t */ XML_XHTML_APPLICATION: \"application/xhtml+xml\",\n    /**\n\t * `image/svg+xml`,\n\t *\n\t * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration\n\t * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1\n\t * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia\n\t */ XML_SVG_IMAGE: \"image/svg+xml\"\n});\n/**\n * Namespaces that are used in this code base.\n *\n * @see http://www.w3.org/TR/REC-xml-names\n */ var $b7774e9396b5187f$var$NAMESPACE = $b7774e9396b5187f$var$freeze({\n    /**\n\t * The XHTML namespace.\n\t *\n\t * @see http://www.w3.org/1999/xhtml\n\t */ HTML: \"http://www.w3.org/1999/xhtml\",\n    /**\n\t * Checks if `uri` equals `NAMESPACE.HTML`.\n\t *\n\t * @param {string} [uri]\n\t *\n\t * @see NAMESPACE.HTML\n\t */ isHTML: function(uri) {\n        return uri === $b7774e9396b5187f$var$NAMESPACE.HTML;\n    },\n    /**\n\t * The SVG namespace.\n\t *\n\t * @see http://www.w3.org/2000/svg\n\t */ SVG: \"http://www.w3.org/2000/svg\",\n    /**\n\t * The `xml:` namespace.\n\t *\n\t * @see http://www.w3.org/XML/1998/namespace\n\t */ XML: \"http://www.w3.org/XML/1998/namespace\",\n    /**\n\t * The `xmlns:` namespace\n\t *\n\t * @see https://www.w3.org/2000/xmlns/\n\t */ XMLNS: \"http://www.w3.org/2000/xmlns/\"\n});\n$b7774e9396b5187f$export$e6e34fd1f2686227 = $b7774e9396b5187f$var$assign;\n$b7774e9396b5187f$export$71aa6c912b956294 = $b7774e9396b5187f$var$find;\n$b7774e9396b5187f$export$792f3d81ea979f55 = $b7774e9396b5187f$var$freeze;\n$b7774e9396b5187f$export$c6cb9dd1e3ada1aa = $b7774e9396b5187f$var$MIME_TYPE;\n$b7774e9396b5187f$export$6aad947bda0f3f46 = $b7774e9396b5187f$var$NAMESPACE;\n\n});\n\n\nparcelRegister(\"aPWNl\", function(module, exports) {\n\n$parcel$export(module.exports, \"DOMParser\", () => $7e3c4643cf32896e$export$1059c6e7d2ce5669, (v) => $7e3c4643cf32896e$export$1059c6e7d2ce5669 = v);\nvar $7e3c4643cf32896e$export$181392475aa39887;\nvar $7e3c4643cf32896e$export$ba13e0e2f19e61a1;\nvar $7e3c4643cf32896e$export$1059c6e7d2ce5669;\n\nvar $fKAiq = parcelRequire(\"fKAiq\");\n\nvar $62CS1 = parcelRequire(\"62CS1\");\n\nvar $h9wKd = parcelRequire(\"h9wKd\");\n\nvar $bci2R = parcelRequire(\"bci2R\");\nvar $7e3c4643cf32896e$var$DOMImplementation = $62CS1.DOMImplementation;\nvar $7e3c4643cf32896e$var$NAMESPACE = $fKAiq.NAMESPACE;\nvar $7e3c4643cf32896e$var$ParseError = $bci2R.ParseError;\nvar $7e3c4643cf32896e$var$XMLReader = $bci2R.XMLReader;\n/**\n * Normalizes line ending according to https://www.w3.org/TR/xml11/#sec-line-ends:\n *\n * > XML parsed entities are often stored in computer files which,\n * > for editing convenience, are organized into lines.\n * > These lines are typically separated by some combination\n * > of the characters CARRIAGE RETURN (#xD) and LINE FEED (#xA).\n * >\n * > To simplify the tasks of applications, the XML processor must behave\n * > as if it normalized all line breaks in external parsed entities (including the document entity)\n * > on input, before parsing, by translating all of the following to a single #xA character:\n * >\n * > 1. the two-character sequence #xD #xA\n * > 2. the two-character sequence #xD #x85\n * > 3. the single character #x85\n * > 4. the single character #x2028\n * > 5. any #xD character that is not immediately followed by #xA or #x85.\n *\n * @param {string} input\n * @returns {string}\n */ function $7e3c4643cf32896e$var$normalizeLineEndings(input) {\n    return input.replace(/\\r[\\n\\u0085]/g, \"\\n\").replace(/[\\r\\u0085\\u2028]/g, \"\\n\");\n}\n/**\n * @typedef Locator\n * @property {number} [columnNumber]\n * @property {number} [lineNumber]\n */ /**\n * @typedef DOMParserOptions\n * @property {DOMHandler} [domBuilder]\n * @property {Function} [errorHandler]\n * @property {(string) => string} [normalizeLineEndings] used to replace line endings before parsing\n * \t\t\t\t\t\tdefaults to `normalizeLineEndings`\n * @property {Locator} [locator]\n * @property {Record<string, string>} [xmlns]\n *\n * @see normalizeLineEndings\n */ /**\n * The DOMParser interface provides the ability to parse XML or HTML source code\n * from a string into a DOM `Document`.\n *\n * _xmldom is different from the spec in that it allows an `options` parameter,\n * to override the default behavior._\n *\n * @param {DOMParserOptions} [options]\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-parsing-and-serialization\n */ function $7e3c4643cf32896e$var$DOMParser(options) {\n    this.options = options || {\n        locator: {}\n    };\n}\n$7e3c4643cf32896e$var$DOMParser.prototype.parseFromString = function(source, mimeType) {\n    var options = this.options;\n    var sax = new $7e3c4643cf32896e$var$XMLReader();\n    var domBuilder = options.domBuilder || new $7e3c4643cf32896e$var$DOMHandler(); //contentHandler and LexicalHandler\n    var errorHandler = options.errorHandler;\n    var locator = options.locator;\n    var defaultNSMap = options.xmlns || {};\n    var isHTML = /\\/x?html?$/.test(mimeType); //mimeType.toLowerCase().indexOf('html') > -1;\n    var entityMap = isHTML ? $h9wKd.HTML_ENTITIES : $h9wKd.XML_ENTITIES;\n    if (locator) domBuilder.setDocumentLocator(locator);\n    sax.errorHandler = $7e3c4643cf32896e$var$buildErrorHandler(errorHandler, domBuilder, locator);\n    sax.domBuilder = options.domBuilder || domBuilder;\n    if (isHTML) defaultNSMap[\"\"] = $7e3c4643cf32896e$var$NAMESPACE.HTML;\n    defaultNSMap.xml = defaultNSMap.xml || $7e3c4643cf32896e$var$NAMESPACE.XML;\n    var normalize = options.normalizeLineEndings || $7e3c4643cf32896e$var$normalizeLineEndings;\n    if (source && typeof source === \"string\") sax.parse(normalize(source), defaultNSMap, entityMap);\n    else sax.errorHandler.error(\"invalid doc source\");\n    return domBuilder.doc;\n};\nfunction $7e3c4643cf32896e$var$buildErrorHandler(errorImpl, domBuilder, locator) {\n    if (!errorImpl) {\n        if (domBuilder instanceof $7e3c4643cf32896e$var$DOMHandler) return domBuilder;\n        errorImpl = domBuilder;\n    }\n    var errorHandler = {};\n    var isCallback = errorImpl instanceof Function;\n    locator = locator || {};\n    function build(key) {\n        var fn = errorImpl[key];\n        if (!fn && isCallback) fn = errorImpl.length == 2 ? function(msg) {\n            errorImpl(key, msg);\n        } : errorImpl;\n        errorHandler[key] = fn && function(msg) {\n            fn(\"[xmldom \" + key + \"]\t\" + msg + $7e3c4643cf32896e$var$_locator(locator));\n        } || function() {};\n    }\n    build(\"warning\");\n    build(\"error\");\n    build(\"fatalError\");\n    return errorHandler;\n}\n//console.log('#\\n\\n\\n\\n\\n\\n\\n####')\n/**\n * +ContentHandler+ErrorHandler\n * +LexicalHandler+EntityResolver2\n * -DeclHandler-DTDHandler\n *\n * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\n * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\n * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\n */ function $7e3c4643cf32896e$var$DOMHandler() {\n    this.cdata = false;\n}\nfunction $7e3c4643cf32896e$var$position(locator, node) {\n    node.lineNumber = locator.lineNumber;\n    node.columnNumber = locator.columnNumber;\n}\n/**\n * @see org.xml.sax.ContentHandler#startDocument\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\n */ $7e3c4643cf32896e$var$DOMHandler.prototype = {\n    startDocument: function() {\n        this.doc = new $7e3c4643cf32896e$var$DOMImplementation().createDocument(null, null, null);\n        if (this.locator) this.doc.documentURI = this.locator.systemId;\n    },\n    startElement: function(namespaceURI, localName, qName, attrs) {\n        var doc = this.doc;\n        var el = doc.createElementNS(namespaceURI, qName || localName);\n        var len = attrs.length;\n        $7e3c4643cf32896e$var$appendElement(this, el);\n        this.currentElement = el;\n        this.locator && $7e3c4643cf32896e$var$position(this.locator, el);\n        for(var i = 0; i < len; i++){\n            var namespaceURI = attrs.getURI(i);\n            var value = attrs.getValue(i);\n            var qName = attrs.getQName(i);\n            var attr = doc.createAttributeNS(namespaceURI, qName);\n            this.locator && $7e3c4643cf32896e$var$position(attrs.getLocator(i), attr);\n            attr.value = attr.nodeValue = value;\n            el.setAttributeNode(attr);\n        }\n    },\n    endElement: function(namespaceURI, localName, qName) {\n        var current = this.currentElement;\n        var tagName = current.tagName;\n        this.currentElement = current.parentNode;\n    },\n    startPrefixMapping: function(prefix, uri) {},\n    endPrefixMapping: function(prefix) {},\n    processingInstruction: function(target, data) {\n        var ins = this.doc.createProcessingInstruction(target, data);\n        this.locator && $7e3c4643cf32896e$var$position(this.locator, ins);\n        $7e3c4643cf32896e$var$appendElement(this, ins);\n    },\n    ignorableWhitespace: function(ch, start, length) {},\n    characters: function(chars, start, length) {\n        chars = $7e3c4643cf32896e$var$_toString.apply(this, arguments);\n        //console.log(chars)\n        if (chars) {\n            if (this.cdata) var charNode = this.doc.createCDATASection(chars);\n            else var charNode = this.doc.createTextNode(chars);\n            if (this.currentElement) this.currentElement.appendChild(charNode);\n            else if (/^\\s*$/.test(chars)) this.doc.appendChild(charNode);\n            this.locator && $7e3c4643cf32896e$var$position(this.locator, charNode);\n        }\n    },\n    skippedEntity: function(name) {},\n    endDocument: function() {\n        this.doc.normalize();\n    },\n    setDocumentLocator: function(locator) {\n        if (this.locator = locator) locator.lineNumber = 0;\n    },\n    //LexicalHandler\n    comment: function(chars, start, length) {\n        chars = $7e3c4643cf32896e$var$_toString.apply(this, arguments);\n        var comm = this.doc.createComment(chars);\n        this.locator && $7e3c4643cf32896e$var$position(this.locator, comm);\n        $7e3c4643cf32896e$var$appendElement(this, comm);\n    },\n    startCDATA: function() {\n        //used in characters() methods\n        this.cdata = true;\n    },\n    endCDATA: function() {\n        this.cdata = false;\n    },\n    startDTD: function(name, publicId, systemId) {\n        var impl = this.doc.implementation;\n        if (impl && impl.createDocumentType) {\n            var dt = impl.createDocumentType(name, publicId, systemId);\n            this.locator && $7e3c4643cf32896e$var$position(this.locator, dt);\n            $7e3c4643cf32896e$var$appendElement(this, dt);\n            this.doc.doctype = dt;\n        }\n    },\n    /**\n\t * @see org.xml.sax.ErrorHandler\n\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n\t */ warning: function(error) {\n        console.warn(\"[xmldom warning]\t\" + error, $7e3c4643cf32896e$var$_locator(this.locator));\n    },\n    error: function(error) {\n        console.error(\"[xmldom error]\t\" + error, $7e3c4643cf32896e$var$_locator(this.locator));\n    },\n    fatalError: function(error) {\n        throw new $7e3c4643cf32896e$var$ParseError(error, this.locator);\n    }\n};\nfunction $7e3c4643cf32896e$var$_locator(l) {\n    if (l) return \"\\n@\" + (l.systemId || \"\") + \"#[line:\" + l.lineNumber + \",col:\" + l.columnNumber + \"]\";\n}\nfunction $7e3c4643cf32896e$var$_toString(chars, start, length) {\n    if (typeof chars == \"string\") return chars.substr(start, length);\n    else {\n        if (chars.length >= start + length || start) return new java.lang.String(chars, start, length) + \"\";\n        return chars;\n    }\n}\n/*\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\n * used method of org.xml.sax.ext.LexicalHandler:\n *  #comment(chars, start, length)\n *  #startCDATA()\n *  #endCDATA()\n *  #startDTD(name, publicId, systemId)\n *\n *\n * IGNORED method of org.xml.sax.ext.LexicalHandler:\n *  #endDTD()\n *  #startEntity(name)\n *  #endEntity(name)\n *\n *\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\n * IGNORED method of org.xml.sax.ext.DeclHandler\n * \t#attributeDecl(eName, aName, type, mode, value)\n *  #elementDecl(name, model)\n *  #externalEntityDecl(name, publicId, systemId)\n *  #internalEntityDecl(name, value)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\n * IGNORED method of org.xml.sax.EntityResolver2\n *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\n *  #resolveEntity(publicId, systemId)\n *  #getExternalSubset(name, baseURI)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\n * IGNORED method of org.xml.sax.DTDHandler\n *  #notationDecl(name, publicId, systemId) {};\n *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\n */ \"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g, function(key) {\n    $7e3c4643cf32896e$var$DOMHandler.prototype[key] = function() {\n        return null;\n    };\n});\n/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */ function $7e3c4643cf32896e$var$appendElement(hander, node) {\n    if (!hander.currentElement) hander.doc.appendChild(node);\n    else hander.currentElement.appendChild(node);\n} //appendChild and setAttributeNS are preformance key\n$7e3c4643cf32896e$export$181392475aa39887 = $7e3c4643cf32896e$var$DOMHandler;\n$7e3c4643cf32896e$export$ba13e0e2f19e61a1 = $7e3c4643cf32896e$var$normalizeLineEndings;\n$7e3c4643cf32896e$export$1059c6e7d2ce5669 = $7e3c4643cf32896e$var$DOMParser;\n\n});\nparcelRegister(\"h9wKd\", function(module, exports) {\n\n$parcel$export(module.exports, \"XML_ENTITIES\", () => $c7ccad4cdae4dce5$export$91f0e5ff03dc84f, (v) => $c7ccad4cdae4dce5$export$91f0e5ff03dc84f = v);\n$parcel$export(module.exports, \"HTML_ENTITIES\", () => $c7ccad4cdae4dce5$export$b7e4d4631df36afa, (v) => $c7ccad4cdae4dce5$export$b7e4d4631df36afa = v);\n/**\n * The entities that are predefined in every XML document.\n *\n * @see https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-predefined-ent W3C XML 1.1\n * @see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent W3C XML 1.0\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML Wikipedia\n */ var $c7ccad4cdae4dce5$export$91f0e5ff03dc84f;\n/**\n * A map of all entities that are detected in an HTML document.\n * They contain all entries from `XML_ENTITIES`.\n *\n * @see XML_ENTITIES\n * @see DOMParser.parseFromString\n * @see DOMImplementation.prototype.createHTMLDocument\n * @see https://html.spec.whatwg.org/#named-character-references WHATWG HTML(5) Spec\n * @see https://html.spec.whatwg.org/entities.json JSON\n * @see https://www.w3.org/TR/xml-entity-names/ W3C XML Entity Names\n * @see https://www.w3.org/TR/html4/sgml/entities.html W3C HTML4/SGML\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Character_entity_references_in_HTML Wikipedia (HTML)\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML Wikpedia (XHTML)\n */ var $c7ccad4cdae4dce5$export$b7e4d4631df36afa;\n/**\n * @deprecated use `HTML_ENTITIES` instead\n * @see HTML_ENTITIES\n */ var $c7ccad4cdae4dce5$export$79451380caed3f98;\n\"use strict\";\n\nvar $fKAiq = parcelRequire(\"fKAiq\");\nvar $c7ccad4cdae4dce5$require$freeze = $fKAiq.freeze;\n$c7ccad4cdae4dce5$export$91f0e5ff03dc84f = $c7ccad4cdae4dce5$require$freeze({\n    amp: \"&\",\n    apos: \"'\",\n    gt: \">\",\n    lt: \"<\",\n    quot: '\"'\n});\n$c7ccad4cdae4dce5$export$b7e4d4631df36afa = $c7ccad4cdae4dce5$require$freeze({\n    Aacute: \"\\xc1\",\n    aacute: \"\\xe1\",\n    Abreve: \"\\u0102\",\n    abreve: \"\\u0103\",\n    ac: \"\\u223E\",\n    acd: \"\\u223F\",\n    acE: \"\\u223E\\u0333\",\n    Acirc: \"\\xc2\",\n    acirc: \"\\xe2\",\n    acute: \"\\xb4\",\n    Acy: \"\\u0410\",\n    acy: \"\\u0430\",\n    AElig: \"\\xc6\",\n    aelig: \"\\xe6\",\n    af: \"\\u2061\",\n    Afr: \"\\uD835\\uDD04\",\n    afr: \"\\uD835\\uDD1E\",\n    Agrave: \"\\xc0\",\n    agrave: \"\\xe0\",\n    alefsym: \"\\u2135\",\n    aleph: \"\\u2135\",\n    Alpha: \"\\u0391\",\n    alpha: \"\\u03B1\",\n    Amacr: \"\\u0100\",\n    amacr: \"\\u0101\",\n    amalg: \"\\u2A3F\",\n    AMP: \"&\",\n    amp: \"&\",\n    And: \"\\u2A53\",\n    and: \"\\u2227\",\n    andand: \"\\u2A55\",\n    andd: \"\\u2A5C\",\n    andslope: \"\\u2A58\",\n    andv: \"\\u2A5A\",\n    ang: \"\\u2220\",\n    ange: \"\\u29A4\",\n    angle: \"\\u2220\",\n    angmsd: \"\\u2221\",\n    angmsdaa: \"\\u29A8\",\n    angmsdab: \"\\u29A9\",\n    angmsdac: \"\\u29AA\",\n    angmsdad: \"\\u29AB\",\n    angmsdae: \"\\u29AC\",\n    angmsdaf: \"\\u29AD\",\n    angmsdag: \"\\u29AE\",\n    angmsdah: \"\\u29AF\",\n    angrt: \"\\u221F\",\n    angrtvb: \"\\u22BE\",\n    angrtvbd: \"\\u299D\",\n    angsph: \"\\u2222\",\n    angst: \"\\xc5\",\n    angzarr: \"\\u237C\",\n    Aogon: \"\\u0104\",\n    aogon: \"\\u0105\",\n    Aopf: \"\\uD835\\uDD38\",\n    aopf: \"\\uD835\\uDD52\",\n    ap: \"\\u2248\",\n    apacir: \"\\u2A6F\",\n    apE: \"\\u2A70\",\n    ape: \"\\u224A\",\n    apid: \"\\u224B\",\n    apos: \"'\",\n    ApplyFunction: \"\\u2061\",\n    approx: \"\\u2248\",\n    approxeq: \"\\u224A\",\n    Aring: \"\\xc5\",\n    aring: \"\\xe5\",\n    Ascr: \"\\uD835\\uDC9C\",\n    ascr: \"\\uD835\\uDCB6\",\n    Assign: \"\\u2254\",\n    ast: \"*\",\n    asymp: \"\\u2248\",\n    asympeq: \"\\u224D\",\n    Atilde: \"\\xc3\",\n    atilde: \"\\xe3\",\n    Auml: \"\\xc4\",\n    auml: \"\\xe4\",\n    awconint: \"\\u2233\",\n    awint: \"\\u2A11\",\n    backcong: \"\\u224C\",\n    backepsilon: \"\\u03F6\",\n    backprime: \"\\u2035\",\n    backsim: \"\\u223D\",\n    backsimeq: \"\\u22CD\",\n    Backslash: \"\\u2216\",\n    Barv: \"\\u2AE7\",\n    barvee: \"\\u22BD\",\n    Barwed: \"\\u2306\",\n    barwed: \"\\u2305\",\n    barwedge: \"\\u2305\",\n    bbrk: \"\\u23B5\",\n    bbrktbrk: \"\\u23B6\",\n    bcong: \"\\u224C\",\n    Bcy: \"\\u0411\",\n    bcy: \"\\u0431\",\n    bdquo: \"\\u201E\",\n    becaus: \"\\u2235\",\n    Because: \"\\u2235\",\n    because: \"\\u2235\",\n    bemptyv: \"\\u29B0\",\n    bepsi: \"\\u03F6\",\n    bernou: \"\\u212C\",\n    Bernoullis: \"\\u212C\",\n    Beta: \"\\u0392\",\n    beta: \"\\u03B2\",\n    beth: \"\\u2136\",\n    between: \"\\u226C\",\n    Bfr: \"\\uD835\\uDD05\",\n    bfr: \"\\uD835\\uDD1F\",\n    bigcap: \"\\u22C2\",\n    bigcirc: \"\\u25EF\",\n    bigcup: \"\\u22C3\",\n    bigodot: \"\\u2A00\",\n    bigoplus: \"\\u2A01\",\n    bigotimes: \"\\u2A02\",\n    bigsqcup: \"\\u2A06\",\n    bigstar: \"\\u2605\",\n    bigtriangledown: \"\\u25BD\",\n    bigtriangleup: \"\\u25B3\",\n    biguplus: \"\\u2A04\",\n    bigvee: \"\\u22C1\",\n    bigwedge: \"\\u22C0\",\n    bkarow: \"\\u290D\",\n    blacklozenge: \"\\u29EB\",\n    blacksquare: \"\\u25AA\",\n    blacktriangle: \"\\u25B4\",\n    blacktriangledown: \"\\u25BE\",\n    blacktriangleleft: \"\\u25C2\",\n    blacktriangleright: \"\\u25B8\",\n    blank: \"\\u2423\",\n    blk12: \"\\u2592\",\n    blk14: \"\\u2591\",\n    blk34: \"\\u2593\",\n    block: \"\\u2588\",\n    bne: \"=\\u20E5\",\n    bnequiv: \"\\u2261\\u20E5\",\n    bNot: \"\\u2AED\",\n    bnot: \"\\u2310\",\n    Bopf: \"\\uD835\\uDD39\",\n    bopf: \"\\uD835\\uDD53\",\n    bot: \"\\u22A5\",\n    bottom: \"\\u22A5\",\n    bowtie: \"\\u22C8\",\n    boxbox: \"\\u29C9\",\n    boxDL: \"\\u2557\",\n    boxDl: \"\\u2556\",\n    boxdL: \"\\u2555\",\n    boxdl: \"\\u2510\",\n    boxDR: \"\\u2554\",\n    boxDr: \"\\u2553\",\n    boxdR: \"\\u2552\",\n    boxdr: \"\\u250C\",\n    boxH: \"\\u2550\",\n    boxh: \"\\u2500\",\n    boxHD: \"\\u2566\",\n    boxHd: \"\\u2564\",\n    boxhD: \"\\u2565\",\n    boxhd: \"\\u252C\",\n    boxHU: \"\\u2569\",\n    boxHu: \"\\u2567\",\n    boxhU: \"\\u2568\",\n    boxhu: \"\\u2534\",\n    boxminus: \"\\u229F\",\n    boxplus: \"\\u229E\",\n    boxtimes: \"\\u22A0\",\n    boxUL: \"\\u255D\",\n    boxUl: \"\\u255C\",\n    boxuL: \"\\u255B\",\n    boxul: \"\\u2518\",\n    boxUR: \"\\u255A\",\n    boxUr: \"\\u2559\",\n    boxuR: \"\\u2558\",\n    boxur: \"\\u2514\",\n    boxV: \"\\u2551\",\n    boxv: \"\\u2502\",\n    boxVH: \"\\u256C\",\n    boxVh: \"\\u256B\",\n    boxvH: \"\\u256A\",\n    boxvh: \"\\u253C\",\n    boxVL: \"\\u2563\",\n    boxVl: \"\\u2562\",\n    boxvL: \"\\u2561\",\n    boxvl: \"\\u2524\",\n    boxVR: \"\\u2560\",\n    boxVr: \"\\u255F\",\n    boxvR: \"\\u255E\",\n    boxvr: \"\\u251C\",\n    bprime: \"\\u2035\",\n    Breve: \"\\u02D8\",\n    breve: \"\\u02D8\",\n    brvbar: \"\\xa6\",\n    Bscr: \"\\u212C\",\n    bscr: \"\\uD835\\uDCB7\",\n    bsemi: \"\\u204F\",\n    bsim: \"\\u223D\",\n    bsime: \"\\u22CD\",\n    bsol: \"\\\\\",\n    bsolb: \"\\u29C5\",\n    bsolhsub: \"\\u27C8\",\n    bull: \"\\u2022\",\n    bullet: \"\\u2022\",\n    bump: \"\\u224E\",\n    bumpE: \"\\u2AAE\",\n    bumpe: \"\\u224F\",\n    Bumpeq: \"\\u224E\",\n    bumpeq: \"\\u224F\",\n    Cacute: \"\\u0106\",\n    cacute: \"\\u0107\",\n    Cap: \"\\u22D2\",\n    cap: \"\\u2229\",\n    capand: \"\\u2A44\",\n    capbrcup: \"\\u2A49\",\n    capcap: \"\\u2A4B\",\n    capcup: \"\\u2A47\",\n    capdot: \"\\u2A40\",\n    CapitalDifferentialD: \"\\u2145\",\n    caps: \"\\u2229\\uFE00\",\n    caret: \"\\u2041\",\n    caron: \"\\u02C7\",\n    Cayleys: \"\\u212D\",\n    ccaps: \"\\u2A4D\",\n    Ccaron: \"\\u010C\",\n    ccaron: \"\\u010D\",\n    Ccedil: \"\\xc7\",\n    ccedil: \"\\xe7\",\n    Ccirc: \"\\u0108\",\n    ccirc: \"\\u0109\",\n    Cconint: \"\\u2230\",\n    ccups: \"\\u2A4C\",\n    ccupssm: \"\\u2A50\",\n    Cdot: \"\\u010A\",\n    cdot: \"\\u010B\",\n    cedil: \"\\xb8\",\n    Cedilla: \"\\xb8\",\n    cemptyv: \"\\u29B2\",\n    cent: \"\\xa2\",\n    CenterDot: \"\\xb7\",\n    centerdot: \"\\xb7\",\n    Cfr: \"\\u212D\",\n    cfr: \"\\uD835\\uDD20\",\n    CHcy: \"\\u0427\",\n    chcy: \"\\u0447\",\n    check: \"\\u2713\",\n    checkmark: \"\\u2713\",\n    Chi: \"\\u03A7\",\n    chi: \"\\u03C7\",\n    cir: \"\\u25CB\",\n    circ: \"\\u02C6\",\n    circeq: \"\\u2257\",\n    circlearrowleft: \"\\u21BA\",\n    circlearrowright: \"\\u21BB\",\n    circledast: \"\\u229B\",\n    circledcirc: \"\\u229A\",\n    circleddash: \"\\u229D\",\n    CircleDot: \"\\u2299\",\n    circledR: \"\\xae\",\n    circledS: \"\\u24C8\",\n    CircleMinus: \"\\u2296\",\n    CirclePlus: \"\\u2295\",\n    CircleTimes: \"\\u2297\",\n    cirE: \"\\u29C3\",\n    cire: \"\\u2257\",\n    cirfnint: \"\\u2A10\",\n    cirmid: \"\\u2AEF\",\n    cirscir: \"\\u29C2\",\n    ClockwiseContourIntegral: \"\\u2232\",\n    CloseCurlyDoubleQuote: \"\\u201D\",\n    CloseCurlyQuote: \"\\u2019\",\n    clubs: \"\\u2663\",\n    clubsuit: \"\\u2663\",\n    Colon: \"\\u2237\",\n    colon: \":\",\n    Colone: \"\\u2A74\",\n    colone: \"\\u2254\",\n    coloneq: \"\\u2254\",\n    comma: \",\",\n    commat: \"@\",\n    comp: \"\\u2201\",\n    compfn: \"\\u2218\",\n    complement: \"\\u2201\",\n    complexes: \"\\u2102\",\n    cong: \"\\u2245\",\n    congdot: \"\\u2A6D\",\n    Congruent: \"\\u2261\",\n    Conint: \"\\u222F\",\n    conint: \"\\u222E\",\n    ContourIntegral: \"\\u222E\",\n    Copf: \"\\u2102\",\n    copf: \"\\uD835\\uDD54\",\n    coprod: \"\\u2210\",\n    Coproduct: \"\\u2210\",\n    COPY: \"\\xa9\",\n    copy: \"\\xa9\",\n    copysr: \"\\u2117\",\n    CounterClockwiseContourIntegral: \"\\u2233\",\n    crarr: \"\\u21B5\",\n    Cross: \"\\u2A2F\",\n    cross: \"\\u2717\",\n    Cscr: \"\\uD835\\uDC9E\",\n    cscr: \"\\uD835\\uDCB8\",\n    csub: \"\\u2ACF\",\n    csube: \"\\u2AD1\",\n    csup: \"\\u2AD0\",\n    csupe: \"\\u2AD2\",\n    ctdot: \"\\u22EF\",\n    cudarrl: \"\\u2938\",\n    cudarrr: \"\\u2935\",\n    cuepr: \"\\u22DE\",\n    cuesc: \"\\u22DF\",\n    cularr: \"\\u21B6\",\n    cularrp: \"\\u293D\",\n    Cup: \"\\u22D3\",\n    cup: \"\\u222A\",\n    cupbrcap: \"\\u2A48\",\n    CupCap: \"\\u224D\",\n    cupcap: \"\\u2A46\",\n    cupcup: \"\\u2A4A\",\n    cupdot: \"\\u228D\",\n    cupor: \"\\u2A45\",\n    cups: \"\\u222A\\uFE00\",\n    curarr: \"\\u21B7\",\n    curarrm: \"\\u293C\",\n    curlyeqprec: \"\\u22DE\",\n    curlyeqsucc: \"\\u22DF\",\n    curlyvee: \"\\u22CE\",\n    curlywedge: \"\\u22CF\",\n    curren: \"\\xa4\",\n    curvearrowleft: \"\\u21B6\",\n    curvearrowright: \"\\u21B7\",\n    cuvee: \"\\u22CE\",\n    cuwed: \"\\u22CF\",\n    cwconint: \"\\u2232\",\n    cwint: \"\\u2231\",\n    cylcty: \"\\u232D\",\n    Dagger: \"\\u2021\",\n    dagger: \"\\u2020\",\n    daleth: \"\\u2138\",\n    Darr: \"\\u21A1\",\n    dArr: \"\\u21D3\",\n    darr: \"\\u2193\",\n    dash: \"\\u2010\",\n    Dashv: \"\\u2AE4\",\n    dashv: \"\\u22A3\",\n    dbkarow: \"\\u290F\",\n    dblac: \"\\u02DD\",\n    Dcaron: \"\\u010E\",\n    dcaron: \"\\u010F\",\n    Dcy: \"\\u0414\",\n    dcy: \"\\u0434\",\n    DD: \"\\u2145\",\n    dd: \"\\u2146\",\n    ddagger: \"\\u2021\",\n    ddarr: \"\\u21CA\",\n    DDotrahd: \"\\u2911\",\n    ddotseq: \"\\u2A77\",\n    deg: \"\\xb0\",\n    Del: \"\\u2207\",\n    Delta: \"\\u0394\",\n    delta: \"\\u03B4\",\n    demptyv: \"\\u29B1\",\n    dfisht: \"\\u297F\",\n    Dfr: \"\\uD835\\uDD07\",\n    dfr: \"\\uD835\\uDD21\",\n    dHar: \"\\u2965\",\n    dharl: \"\\u21C3\",\n    dharr: \"\\u21C2\",\n    DiacriticalAcute: \"\\xb4\",\n    DiacriticalDot: \"\\u02D9\",\n    DiacriticalDoubleAcute: \"\\u02DD\",\n    DiacriticalGrave: \"`\",\n    DiacriticalTilde: \"\\u02DC\",\n    diam: \"\\u22C4\",\n    Diamond: \"\\u22C4\",\n    diamond: \"\\u22C4\",\n    diamondsuit: \"\\u2666\",\n    diams: \"\\u2666\",\n    die: \"\\xa8\",\n    DifferentialD: \"\\u2146\",\n    digamma: \"\\u03DD\",\n    disin: \"\\u22F2\",\n    div: \"\\xf7\",\n    divide: \"\\xf7\",\n    divideontimes: \"\\u22C7\",\n    divonx: \"\\u22C7\",\n    DJcy: \"\\u0402\",\n    djcy: \"\\u0452\",\n    dlcorn: \"\\u231E\",\n    dlcrop: \"\\u230D\",\n    dollar: \"$\",\n    Dopf: \"\\uD835\\uDD3B\",\n    dopf: \"\\uD835\\uDD55\",\n    Dot: \"\\xa8\",\n    dot: \"\\u02D9\",\n    DotDot: \"\\u20DC\",\n    doteq: \"\\u2250\",\n    doteqdot: \"\\u2251\",\n    DotEqual: \"\\u2250\",\n    dotminus: \"\\u2238\",\n    dotplus: \"\\u2214\",\n    dotsquare: \"\\u22A1\",\n    doublebarwedge: \"\\u2306\",\n    DoubleContourIntegral: \"\\u222F\",\n    DoubleDot: \"\\xa8\",\n    DoubleDownArrow: \"\\u21D3\",\n    DoubleLeftArrow: \"\\u21D0\",\n    DoubleLeftRightArrow: \"\\u21D4\",\n    DoubleLeftTee: \"\\u2AE4\",\n    DoubleLongLeftArrow: \"\\u27F8\",\n    DoubleLongLeftRightArrow: \"\\u27FA\",\n    DoubleLongRightArrow: \"\\u27F9\",\n    DoubleRightArrow: \"\\u21D2\",\n    DoubleRightTee: \"\\u22A8\",\n    DoubleUpArrow: \"\\u21D1\",\n    DoubleUpDownArrow: \"\\u21D5\",\n    DoubleVerticalBar: \"\\u2225\",\n    DownArrow: \"\\u2193\",\n    Downarrow: \"\\u21D3\",\n    downarrow: \"\\u2193\",\n    DownArrowBar: \"\\u2913\",\n    DownArrowUpArrow: \"\\u21F5\",\n    DownBreve: \"\\u0311\",\n    downdownarrows: \"\\u21CA\",\n    downharpoonleft: \"\\u21C3\",\n    downharpoonright: \"\\u21C2\",\n    DownLeftRightVector: \"\\u2950\",\n    DownLeftTeeVector: \"\\u295E\",\n    DownLeftVector: \"\\u21BD\",\n    DownLeftVectorBar: \"\\u2956\",\n    DownRightTeeVector: \"\\u295F\",\n    DownRightVector: \"\\u21C1\",\n    DownRightVectorBar: \"\\u2957\",\n    DownTee: \"\\u22A4\",\n    DownTeeArrow: \"\\u21A7\",\n    drbkarow: \"\\u2910\",\n    drcorn: \"\\u231F\",\n    drcrop: \"\\u230C\",\n    Dscr: \"\\uD835\\uDC9F\",\n    dscr: \"\\uD835\\uDCB9\",\n    DScy: \"\\u0405\",\n    dscy: \"\\u0455\",\n    dsol: \"\\u29F6\",\n    Dstrok: \"\\u0110\",\n    dstrok: \"\\u0111\",\n    dtdot: \"\\u22F1\",\n    dtri: \"\\u25BF\",\n    dtrif: \"\\u25BE\",\n    duarr: \"\\u21F5\",\n    duhar: \"\\u296F\",\n    dwangle: \"\\u29A6\",\n    DZcy: \"\\u040F\",\n    dzcy: \"\\u045F\",\n    dzigrarr: \"\\u27FF\",\n    Eacute: \"\\xc9\",\n    eacute: \"\\xe9\",\n    easter: \"\\u2A6E\",\n    Ecaron: \"\\u011A\",\n    ecaron: \"\\u011B\",\n    ecir: \"\\u2256\",\n    Ecirc: \"\\xca\",\n    ecirc: \"\\xea\",\n    ecolon: \"\\u2255\",\n    Ecy: \"\\u042D\",\n    ecy: \"\\u044D\",\n    eDDot: \"\\u2A77\",\n    Edot: \"\\u0116\",\n    eDot: \"\\u2251\",\n    edot: \"\\u0117\",\n    ee: \"\\u2147\",\n    efDot: \"\\u2252\",\n    Efr: \"\\uD835\\uDD08\",\n    efr: \"\\uD835\\uDD22\",\n    eg: \"\\u2A9A\",\n    Egrave: \"\\xc8\",\n    egrave: \"\\xe8\",\n    egs: \"\\u2A96\",\n    egsdot: \"\\u2A98\",\n    el: \"\\u2A99\",\n    Element: \"\\u2208\",\n    elinters: \"\\u23E7\",\n    ell: \"\\u2113\",\n    els: \"\\u2A95\",\n    elsdot: \"\\u2A97\",\n    Emacr: \"\\u0112\",\n    emacr: \"\\u0113\",\n    empty: \"\\u2205\",\n    emptyset: \"\\u2205\",\n    EmptySmallSquare: \"\\u25FB\",\n    emptyv: \"\\u2205\",\n    EmptyVerySmallSquare: \"\\u25AB\",\n    emsp: \"\\u2003\",\n    emsp13: \"\\u2004\",\n    emsp14: \"\\u2005\",\n    ENG: \"\\u014A\",\n    eng: \"\\u014B\",\n    ensp: \"\\u2002\",\n    Eogon: \"\\u0118\",\n    eogon: \"\\u0119\",\n    Eopf: \"\\uD835\\uDD3C\",\n    eopf: \"\\uD835\\uDD56\",\n    epar: \"\\u22D5\",\n    eparsl: \"\\u29E3\",\n    eplus: \"\\u2A71\",\n    epsi: \"\\u03B5\",\n    Epsilon: \"\\u0395\",\n    epsilon: \"\\u03B5\",\n    epsiv: \"\\u03F5\",\n    eqcirc: \"\\u2256\",\n    eqcolon: \"\\u2255\",\n    eqsim: \"\\u2242\",\n    eqslantgtr: \"\\u2A96\",\n    eqslantless: \"\\u2A95\",\n    Equal: \"\\u2A75\",\n    equals: \"=\",\n    EqualTilde: \"\\u2242\",\n    equest: \"\\u225F\",\n    Equilibrium: \"\\u21CC\",\n    equiv: \"\\u2261\",\n    equivDD: \"\\u2A78\",\n    eqvparsl: \"\\u29E5\",\n    erarr: \"\\u2971\",\n    erDot: \"\\u2253\",\n    Escr: \"\\u2130\",\n    escr: \"\\u212F\",\n    esdot: \"\\u2250\",\n    Esim: \"\\u2A73\",\n    esim: \"\\u2242\",\n    Eta: \"\\u0397\",\n    eta: \"\\u03B7\",\n    ETH: \"\\xd0\",\n    eth: \"\\xf0\",\n    Euml: \"\\xcb\",\n    euml: \"\\xeb\",\n    euro: \"\\u20AC\",\n    excl: \"!\",\n    exist: \"\\u2203\",\n    Exists: \"\\u2203\",\n    expectation: \"\\u2130\",\n    ExponentialE: \"\\u2147\",\n    exponentiale: \"\\u2147\",\n    fallingdotseq: \"\\u2252\",\n    Fcy: \"\\u0424\",\n    fcy: \"\\u0444\",\n    female: \"\\u2640\",\n    ffilig: \"\\uFB03\",\n    fflig: \"\\uFB00\",\n    ffllig: \"\\uFB04\",\n    Ffr: \"\\uD835\\uDD09\",\n    ffr: \"\\uD835\\uDD23\",\n    filig: \"\\uFB01\",\n    FilledSmallSquare: \"\\u25FC\",\n    FilledVerySmallSquare: \"\\u25AA\",\n    fjlig: \"fj\",\n    flat: \"\\u266D\",\n    fllig: \"\\uFB02\",\n    fltns: \"\\u25B1\",\n    fnof: \"\\u0192\",\n    Fopf: \"\\uD835\\uDD3D\",\n    fopf: \"\\uD835\\uDD57\",\n    ForAll: \"\\u2200\",\n    forall: \"\\u2200\",\n    fork: \"\\u22D4\",\n    forkv: \"\\u2AD9\",\n    Fouriertrf: \"\\u2131\",\n    fpartint: \"\\u2A0D\",\n    frac12: \"\\xbd\",\n    frac13: \"\\u2153\",\n    frac14: \"\\xbc\",\n    frac15: \"\\u2155\",\n    frac16: \"\\u2159\",\n    frac18: \"\\u215B\",\n    frac23: \"\\u2154\",\n    frac25: \"\\u2156\",\n    frac34: \"\\xbe\",\n    frac35: \"\\u2157\",\n    frac38: \"\\u215C\",\n    frac45: \"\\u2158\",\n    frac56: \"\\u215A\",\n    frac58: \"\\u215D\",\n    frac78: \"\\u215E\",\n    frasl: \"\\u2044\",\n    frown: \"\\u2322\",\n    Fscr: \"\\u2131\",\n    fscr: \"\\uD835\\uDCBB\",\n    gacute: \"\\u01F5\",\n    Gamma: \"\\u0393\",\n    gamma: \"\\u03B3\",\n    Gammad: \"\\u03DC\",\n    gammad: \"\\u03DD\",\n    gap: \"\\u2A86\",\n    Gbreve: \"\\u011E\",\n    gbreve: \"\\u011F\",\n    Gcedil: \"\\u0122\",\n    Gcirc: \"\\u011C\",\n    gcirc: \"\\u011D\",\n    Gcy: \"\\u0413\",\n    gcy: \"\\u0433\",\n    Gdot: \"\\u0120\",\n    gdot: \"\\u0121\",\n    gE: \"\\u2267\",\n    ge: \"\\u2265\",\n    gEl: \"\\u2A8C\",\n    gel: \"\\u22DB\",\n    geq: \"\\u2265\",\n    geqq: \"\\u2267\",\n    geqslant: \"\\u2A7E\",\n    ges: \"\\u2A7E\",\n    gescc: \"\\u2AA9\",\n    gesdot: \"\\u2A80\",\n    gesdoto: \"\\u2A82\",\n    gesdotol: \"\\u2A84\",\n    gesl: \"\\u22DB\\uFE00\",\n    gesles: \"\\u2A94\",\n    Gfr: \"\\uD835\\uDD0A\",\n    gfr: \"\\uD835\\uDD24\",\n    Gg: \"\\u22D9\",\n    gg: \"\\u226B\",\n    ggg: \"\\u22D9\",\n    gimel: \"\\u2137\",\n    GJcy: \"\\u0403\",\n    gjcy: \"\\u0453\",\n    gl: \"\\u2277\",\n    gla: \"\\u2AA5\",\n    glE: \"\\u2A92\",\n    glj: \"\\u2AA4\",\n    gnap: \"\\u2A8A\",\n    gnapprox: \"\\u2A8A\",\n    gnE: \"\\u2269\",\n    gne: \"\\u2A88\",\n    gneq: \"\\u2A88\",\n    gneqq: \"\\u2269\",\n    gnsim: \"\\u22E7\",\n    Gopf: \"\\uD835\\uDD3E\",\n    gopf: \"\\uD835\\uDD58\",\n    grave: \"`\",\n    GreaterEqual: \"\\u2265\",\n    GreaterEqualLess: \"\\u22DB\",\n    GreaterFullEqual: \"\\u2267\",\n    GreaterGreater: \"\\u2AA2\",\n    GreaterLess: \"\\u2277\",\n    GreaterSlantEqual: \"\\u2A7E\",\n    GreaterTilde: \"\\u2273\",\n    Gscr: \"\\uD835\\uDCA2\",\n    gscr: \"\\u210A\",\n    gsim: \"\\u2273\",\n    gsime: \"\\u2A8E\",\n    gsiml: \"\\u2A90\",\n    Gt: \"\\u226B\",\n    GT: \">\",\n    gt: \">\",\n    gtcc: \"\\u2AA7\",\n    gtcir: \"\\u2A7A\",\n    gtdot: \"\\u22D7\",\n    gtlPar: \"\\u2995\",\n    gtquest: \"\\u2A7C\",\n    gtrapprox: \"\\u2A86\",\n    gtrarr: \"\\u2978\",\n    gtrdot: \"\\u22D7\",\n    gtreqless: \"\\u22DB\",\n    gtreqqless: \"\\u2A8C\",\n    gtrless: \"\\u2277\",\n    gtrsim: \"\\u2273\",\n    gvertneqq: \"\\u2269\\uFE00\",\n    gvnE: \"\\u2269\\uFE00\",\n    Hacek: \"\\u02C7\",\n    hairsp: \"\\u200A\",\n    half: \"\\xbd\",\n    hamilt: \"\\u210B\",\n    HARDcy: \"\\u042A\",\n    hardcy: \"\\u044A\",\n    hArr: \"\\u21D4\",\n    harr: \"\\u2194\",\n    harrcir: \"\\u2948\",\n    harrw: \"\\u21AD\",\n    Hat: \"^\",\n    hbar: \"\\u210F\",\n    Hcirc: \"\\u0124\",\n    hcirc: \"\\u0125\",\n    hearts: \"\\u2665\",\n    heartsuit: \"\\u2665\",\n    hellip: \"\\u2026\",\n    hercon: \"\\u22B9\",\n    Hfr: \"\\u210C\",\n    hfr: \"\\uD835\\uDD25\",\n    HilbertSpace: \"\\u210B\",\n    hksearow: \"\\u2925\",\n    hkswarow: \"\\u2926\",\n    hoarr: \"\\u21FF\",\n    homtht: \"\\u223B\",\n    hookleftarrow: \"\\u21A9\",\n    hookrightarrow: \"\\u21AA\",\n    Hopf: \"\\u210D\",\n    hopf: \"\\uD835\\uDD59\",\n    horbar: \"\\u2015\",\n    HorizontalLine: \"\\u2500\",\n    Hscr: \"\\u210B\",\n    hscr: \"\\uD835\\uDCBD\",\n    hslash: \"\\u210F\",\n    Hstrok: \"\\u0126\",\n    hstrok: \"\\u0127\",\n    HumpDownHump: \"\\u224E\",\n    HumpEqual: \"\\u224F\",\n    hybull: \"\\u2043\",\n    hyphen: \"\\u2010\",\n    Iacute: \"\\xcd\",\n    iacute: \"\\xed\",\n    ic: \"\\u2063\",\n    Icirc: \"\\xce\",\n    icirc: \"\\xee\",\n    Icy: \"\\u0418\",\n    icy: \"\\u0438\",\n    Idot: \"\\u0130\",\n    IEcy: \"\\u0415\",\n    iecy: \"\\u0435\",\n    iexcl: \"\\xa1\",\n    iff: \"\\u21D4\",\n    Ifr: \"\\u2111\",\n    ifr: \"\\uD835\\uDD26\",\n    Igrave: \"\\xcc\",\n    igrave: \"\\xec\",\n    ii: \"\\u2148\",\n    iiiint: \"\\u2A0C\",\n    iiint: \"\\u222D\",\n    iinfin: \"\\u29DC\",\n    iiota: \"\\u2129\",\n    IJlig: \"\\u0132\",\n    ijlig: \"\\u0133\",\n    Im: \"\\u2111\",\n    Imacr: \"\\u012A\",\n    imacr: \"\\u012B\",\n    image: \"\\u2111\",\n    ImaginaryI: \"\\u2148\",\n    imagline: \"\\u2110\",\n    imagpart: \"\\u2111\",\n    imath: \"\\u0131\",\n    imof: \"\\u22B7\",\n    imped: \"\\u01B5\",\n    Implies: \"\\u21D2\",\n    in: \"\\u2208\",\n    incare: \"\\u2105\",\n    infin: \"\\u221E\",\n    infintie: \"\\u29DD\",\n    inodot: \"\\u0131\",\n    Int: \"\\u222C\",\n    int: \"\\u222B\",\n    intcal: \"\\u22BA\",\n    integers: \"\\u2124\",\n    Integral: \"\\u222B\",\n    intercal: \"\\u22BA\",\n    Intersection: \"\\u22C2\",\n    intlarhk: \"\\u2A17\",\n    intprod: \"\\u2A3C\",\n    InvisibleComma: \"\\u2063\",\n    InvisibleTimes: \"\\u2062\",\n    IOcy: \"\\u0401\",\n    iocy: \"\\u0451\",\n    Iogon: \"\\u012E\",\n    iogon: \"\\u012F\",\n    Iopf: \"\\uD835\\uDD40\",\n    iopf: \"\\uD835\\uDD5A\",\n    Iota: \"\\u0399\",\n    iota: \"\\u03B9\",\n    iprod: \"\\u2A3C\",\n    iquest: \"\\xbf\",\n    Iscr: \"\\u2110\",\n    iscr: \"\\uD835\\uDCBE\",\n    isin: \"\\u2208\",\n    isindot: \"\\u22F5\",\n    isinE: \"\\u22F9\",\n    isins: \"\\u22F4\",\n    isinsv: \"\\u22F3\",\n    isinv: \"\\u2208\",\n    it: \"\\u2062\",\n    Itilde: \"\\u0128\",\n    itilde: \"\\u0129\",\n    Iukcy: \"\\u0406\",\n    iukcy: \"\\u0456\",\n    Iuml: \"\\xcf\",\n    iuml: \"\\xef\",\n    Jcirc: \"\\u0134\",\n    jcirc: \"\\u0135\",\n    Jcy: \"\\u0419\",\n    jcy: \"\\u0439\",\n    Jfr: \"\\uD835\\uDD0D\",\n    jfr: \"\\uD835\\uDD27\",\n    jmath: \"\\u0237\",\n    Jopf: \"\\uD835\\uDD41\",\n    jopf: \"\\uD835\\uDD5B\",\n    Jscr: \"\\uD835\\uDCA5\",\n    jscr: \"\\uD835\\uDCBF\",\n    Jsercy: \"\\u0408\",\n    jsercy: \"\\u0458\",\n    Jukcy: \"\\u0404\",\n    jukcy: \"\\u0454\",\n    Kappa: \"\\u039A\",\n    kappa: \"\\u03BA\",\n    kappav: \"\\u03F0\",\n    Kcedil: \"\\u0136\",\n    kcedil: \"\\u0137\",\n    Kcy: \"\\u041A\",\n    kcy: \"\\u043A\",\n    Kfr: \"\\uD835\\uDD0E\",\n    kfr: \"\\uD835\\uDD28\",\n    kgreen: \"\\u0138\",\n    KHcy: \"\\u0425\",\n    khcy: \"\\u0445\",\n    KJcy: \"\\u040C\",\n    kjcy: \"\\u045C\",\n    Kopf: \"\\uD835\\uDD42\",\n    kopf: \"\\uD835\\uDD5C\",\n    Kscr: \"\\uD835\\uDCA6\",\n    kscr: \"\\uD835\\uDCC0\",\n    lAarr: \"\\u21DA\",\n    Lacute: \"\\u0139\",\n    lacute: \"\\u013A\",\n    laemptyv: \"\\u29B4\",\n    lagran: \"\\u2112\",\n    Lambda: \"\\u039B\",\n    lambda: \"\\u03BB\",\n    Lang: \"\\u27EA\",\n    lang: \"\\u27E8\",\n    langd: \"\\u2991\",\n    langle: \"\\u27E8\",\n    lap: \"\\u2A85\",\n    Laplacetrf: \"\\u2112\",\n    laquo: \"\\xab\",\n    Larr: \"\\u219E\",\n    lArr: \"\\u21D0\",\n    larr: \"\\u2190\",\n    larrb: \"\\u21E4\",\n    larrbfs: \"\\u291F\",\n    larrfs: \"\\u291D\",\n    larrhk: \"\\u21A9\",\n    larrlp: \"\\u21AB\",\n    larrpl: \"\\u2939\",\n    larrsim: \"\\u2973\",\n    larrtl: \"\\u21A2\",\n    lat: \"\\u2AAB\",\n    lAtail: \"\\u291B\",\n    latail: \"\\u2919\",\n    late: \"\\u2AAD\",\n    lates: \"\\u2AAD\\uFE00\",\n    lBarr: \"\\u290E\",\n    lbarr: \"\\u290C\",\n    lbbrk: \"\\u2772\",\n    lbrace: \"{\",\n    lbrack: \"[\",\n    lbrke: \"\\u298B\",\n    lbrksld: \"\\u298F\",\n    lbrkslu: \"\\u298D\",\n    Lcaron: \"\\u013D\",\n    lcaron: \"\\u013E\",\n    Lcedil: \"\\u013B\",\n    lcedil: \"\\u013C\",\n    lceil: \"\\u2308\",\n    lcub: \"{\",\n    Lcy: \"\\u041B\",\n    lcy: \"\\u043B\",\n    ldca: \"\\u2936\",\n    ldquo: \"\\u201C\",\n    ldquor: \"\\u201E\",\n    ldrdhar: \"\\u2967\",\n    ldrushar: \"\\u294B\",\n    ldsh: \"\\u21B2\",\n    lE: \"\\u2266\",\n    le: \"\\u2264\",\n    LeftAngleBracket: \"\\u27E8\",\n    LeftArrow: \"\\u2190\",\n    Leftarrow: \"\\u21D0\",\n    leftarrow: \"\\u2190\",\n    LeftArrowBar: \"\\u21E4\",\n    LeftArrowRightArrow: \"\\u21C6\",\n    leftarrowtail: \"\\u21A2\",\n    LeftCeiling: \"\\u2308\",\n    LeftDoubleBracket: \"\\u27E6\",\n    LeftDownTeeVector: \"\\u2961\",\n    LeftDownVector: \"\\u21C3\",\n    LeftDownVectorBar: \"\\u2959\",\n    LeftFloor: \"\\u230A\",\n    leftharpoondown: \"\\u21BD\",\n    leftharpoonup: \"\\u21BC\",\n    leftleftarrows: \"\\u21C7\",\n    LeftRightArrow: \"\\u2194\",\n    Leftrightarrow: \"\\u21D4\",\n    leftrightarrow: \"\\u2194\",\n    leftrightarrows: \"\\u21C6\",\n    leftrightharpoons: \"\\u21CB\",\n    leftrightsquigarrow: \"\\u21AD\",\n    LeftRightVector: \"\\u294E\",\n    LeftTee: \"\\u22A3\",\n    LeftTeeArrow: \"\\u21A4\",\n    LeftTeeVector: \"\\u295A\",\n    leftthreetimes: \"\\u22CB\",\n    LeftTriangle: \"\\u22B2\",\n    LeftTriangleBar: \"\\u29CF\",\n    LeftTriangleEqual: \"\\u22B4\",\n    LeftUpDownVector: \"\\u2951\",\n    LeftUpTeeVector: \"\\u2960\",\n    LeftUpVector: \"\\u21BF\",\n    LeftUpVectorBar: \"\\u2958\",\n    LeftVector: \"\\u21BC\",\n    LeftVectorBar: \"\\u2952\",\n    lEg: \"\\u2A8B\",\n    leg: \"\\u22DA\",\n    leq: \"\\u2264\",\n    leqq: \"\\u2266\",\n    leqslant: \"\\u2A7D\",\n    les: \"\\u2A7D\",\n    lescc: \"\\u2AA8\",\n    lesdot: \"\\u2A7F\",\n    lesdoto: \"\\u2A81\",\n    lesdotor: \"\\u2A83\",\n    lesg: \"\\u22DA\\uFE00\",\n    lesges: \"\\u2A93\",\n    lessapprox: \"\\u2A85\",\n    lessdot: \"\\u22D6\",\n    lesseqgtr: \"\\u22DA\",\n    lesseqqgtr: \"\\u2A8B\",\n    LessEqualGreater: \"\\u22DA\",\n    LessFullEqual: \"\\u2266\",\n    LessGreater: \"\\u2276\",\n    lessgtr: \"\\u2276\",\n    LessLess: \"\\u2AA1\",\n    lesssim: \"\\u2272\",\n    LessSlantEqual: \"\\u2A7D\",\n    LessTilde: \"\\u2272\",\n    lfisht: \"\\u297C\",\n    lfloor: \"\\u230A\",\n    Lfr: \"\\uD835\\uDD0F\",\n    lfr: \"\\uD835\\uDD29\",\n    lg: \"\\u2276\",\n    lgE: \"\\u2A91\",\n    lHar: \"\\u2962\",\n    lhard: \"\\u21BD\",\n    lharu: \"\\u21BC\",\n    lharul: \"\\u296A\",\n    lhblk: \"\\u2584\",\n    LJcy: \"\\u0409\",\n    ljcy: \"\\u0459\",\n    Ll: \"\\u22D8\",\n    ll: \"\\u226A\",\n    llarr: \"\\u21C7\",\n    llcorner: \"\\u231E\",\n    Lleftarrow: \"\\u21DA\",\n    llhard: \"\\u296B\",\n    lltri: \"\\u25FA\",\n    Lmidot: \"\\u013F\",\n    lmidot: \"\\u0140\",\n    lmoust: \"\\u23B0\",\n    lmoustache: \"\\u23B0\",\n    lnap: \"\\u2A89\",\n    lnapprox: \"\\u2A89\",\n    lnE: \"\\u2268\",\n    lne: \"\\u2A87\",\n    lneq: \"\\u2A87\",\n    lneqq: \"\\u2268\",\n    lnsim: \"\\u22E6\",\n    loang: \"\\u27EC\",\n    loarr: \"\\u21FD\",\n    lobrk: \"\\u27E6\",\n    LongLeftArrow: \"\\u27F5\",\n    Longleftarrow: \"\\u27F8\",\n    longleftarrow: \"\\u27F5\",\n    LongLeftRightArrow: \"\\u27F7\",\n    Longleftrightarrow: \"\\u27FA\",\n    longleftrightarrow: \"\\u27F7\",\n    longmapsto: \"\\u27FC\",\n    LongRightArrow: \"\\u27F6\",\n    Longrightarrow: \"\\u27F9\",\n    longrightarrow: \"\\u27F6\",\n    looparrowleft: \"\\u21AB\",\n    looparrowright: \"\\u21AC\",\n    lopar: \"\\u2985\",\n    Lopf: \"\\uD835\\uDD43\",\n    lopf: \"\\uD835\\uDD5D\",\n    loplus: \"\\u2A2D\",\n    lotimes: \"\\u2A34\",\n    lowast: \"\\u2217\",\n    lowbar: \"_\",\n    LowerLeftArrow: \"\\u2199\",\n    LowerRightArrow: \"\\u2198\",\n    loz: \"\\u25CA\",\n    lozenge: \"\\u25CA\",\n    lozf: \"\\u29EB\",\n    lpar: \"(\",\n    lparlt: \"\\u2993\",\n    lrarr: \"\\u21C6\",\n    lrcorner: \"\\u231F\",\n    lrhar: \"\\u21CB\",\n    lrhard: \"\\u296D\",\n    lrm: \"\\u200E\",\n    lrtri: \"\\u22BF\",\n    lsaquo: \"\\u2039\",\n    Lscr: \"\\u2112\",\n    lscr: \"\\uD835\\uDCC1\",\n    Lsh: \"\\u21B0\",\n    lsh: \"\\u21B0\",\n    lsim: \"\\u2272\",\n    lsime: \"\\u2A8D\",\n    lsimg: \"\\u2A8F\",\n    lsqb: \"[\",\n    lsquo: \"\\u2018\",\n    lsquor: \"\\u201A\",\n    Lstrok: \"\\u0141\",\n    lstrok: \"\\u0142\",\n    Lt: \"\\u226A\",\n    LT: \"<\",\n    lt: \"<\",\n    ltcc: \"\\u2AA6\",\n    ltcir: \"\\u2A79\",\n    ltdot: \"\\u22D6\",\n    lthree: \"\\u22CB\",\n    ltimes: \"\\u22C9\",\n    ltlarr: \"\\u2976\",\n    ltquest: \"\\u2A7B\",\n    ltri: \"\\u25C3\",\n    ltrie: \"\\u22B4\",\n    ltrif: \"\\u25C2\",\n    ltrPar: \"\\u2996\",\n    lurdshar: \"\\u294A\",\n    luruhar: \"\\u2966\",\n    lvertneqq: \"\\u2268\\uFE00\",\n    lvnE: \"\\u2268\\uFE00\",\n    macr: \"\\xaf\",\n    male: \"\\u2642\",\n    malt: \"\\u2720\",\n    maltese: \"\\u2720\",\n    Map: \"\\u2905\",\n    map: \"\\u21A6\",\n    mapsto: \"\\u21A6\",\n    mapstodown: \"\\u21A7\",\n    mapstoleft: \"\\u21A4\",\n    mapstoup: \"\\u21A5\",\n    marker: \"\\u25AE\",\n    mcomma: \"\\u2A29\",\n    Mcy: \"\\u041C\",\n    mcy: \"\\u043C\",\n    mdash: \"\\u2014\",\n    mDDot: \"\\u223A\",\n    measuredangle: \"\\u2221\",\n    MediumSpace: \"\\u205F\",\n    Mellintrf: \"\\u2133\",\n    Mfr: \"\\uD835\\uDD10\",\n    mfr: \"\\uD835\\uDD2A\",\n    mho: \"\\u2127\",\n    micro: \"\\xb5\",\n    mid: \"\\u2223\",\n    midast: \"*\",\n    midcir: \"\\u2AF0\",\n    middot: \"\\xb7\",\n    minus: \"\\u2212\",\n    minusb: \"\\u229F\",\n    minusd: \"\\u2238\",\n    minusdu: \"\\u2A2A\",\n    MinusPlus: \"\\u2213\",\n    mlcp: \"\\u2ADB\",\n    mldr: \"\\u2026\",\n    mnplus: \"\\u2213\",\n    models: \"\\u22A7\",\n    Mopf: \"\\uD835\\uDD44\",\n    mopf: \"\\uD835\\uDD5E\",\n    mp: \"\\u2213\",\n    Mscr: \"\\u2133\",\n    mscr: \"\\uD835\\uDCC2\",\n    mstpos: \"\\u223E\",\n    Mu: \"\\u039C\",\n    mu: \"\\u03BC\",\n    multimap: \"\\u22B8\",\n    mumap: \"\\u22B8\",\n    nabla: \"\\u2207\",\n    Nacute: \"\\u0143\",\n    nacute: \"\\u0144\",\n    nang: \"\\u2220\\u20D2\",\n    nap: \"\\u2249\",\n    napE: \"\\u2A70\\u0338\",\n    napid: \"\\u224B\\u0338\",\n    napos: \"\\u0149\",\n    napprox: \"\\u2249\",\n    natur: \"\\u266E\",\n    natural: \"\\u266E\",\n    naturals: \"\\u2115\",\n    nbsp: \"\\xa0\",\n    nbump: \"\\u224E\\u0338\",\n    nbumpe: \"\\u224F\\u0338\",\n    ncap: \"\\u2A43\",\n    Ncaron: \"\\u0147\",\n    ncaron: \"\\u0148\",\n    Ncedil: \"\\u0145\",\n    ncedil: \"\\u0146\",\n    ncong: \"\\u2247\",\n    ncongdot: \"\\u2A6D\\u0338\",\n    ncup: \"\\u2A42\",\n    Ncy: \"\\u041D\",\n    ncy: \"\\u043D\",\n    ndash: \"\\u2013\",\n    ne: \"\\u2260\",\n    nearhk: \"\\u2924\",\n    neArr: \"\\u21D7\",\n    nearr: \"\\u2197\",\n    nearrow: \"\\u2197\",\n    nedot: \"\\u2250\\u0338\",\n    NegativeMediumSpace: \"\\u200B\",\n    NegativeThickSpace: \"\\u200B\",\n    NegativeThinSpace: \"\\u200B\",\n    NegativeVeryThinSpace: \"\\u200B\",\n    nequiv: \"\\u2262\",\n    nesear: \"\\u2928\",\n    nesim: \"\\u2242\\u0338\",\n    NestedGreaterGreater: \"\\u226B\",\n    NestedLessLess: \"\\u226A\",\n    NewLine: \"\\n\",\n    nexist: \"\\u2204\",\n    nexists: \"\\u2204\",\n    Nfr: \"\\uD835\\uDD11\",\n    nfr: \"\\uD835\\uDD2B\",\n    ngE: \"\\u2267\\u0338\",\n    nge: \"\\u2271\",\n    ngeq: \"\\u2271\",\n    ngeqq: \"\\u2267\\u0338\",\n    ngeqslant: \"\\u2A7E\\u0338\",\n    nges: \"\\u2A7E\\u0338\",\n    nGg: \"\\u22D9\\u0338\",\n    ngsim: \"\\u2275\",\n    nGt: \"\\u226B\\u20D2\",\n    ngt: \"\\u226F\",\n    ngtr: \"\\u226F\",\n    nGtv: \"\\u226B\\u0338\",\n    nhArr: \"\\u21CE\",\n    nharr: \"\\u21AE\",\n    nhpar: \"\\u2AF2\",\n    ni: \"\\u220B\",\n    nis: \"\\u22FC\",\n    nisd: \"\\u22FA\",\n    niv: \"\\u220B\",\n    NJcy: \"\\u040A\",\n    njcy: \"\\u045A\",\n    nlArr: \"\\u21CD\",\n    nlarr: \"\\u219A\",\n    nldr: \"\\u2025\",\n    nlE: \"\\u2266\\u0338\",\n    nle: \"\\u2270\",\n    nLeftarrow: \"\\u21CD\",\n    nleftarrow: \"\\u219A\",\n    nLeftrightarrow: \"\\u21CE\",\n    nleftrightarrow: \"\\u21AE\",\n    nleq: \"\\u2270\",\n    nleqq: \"\\u2266\\u0338\",\n    nleqslant: \"\\u2A7D\\u0338\",\n    nles: \"\\u2A7D\\u0338\",\n    nless: \"\\u226E\",\n    nLl: \"\\u22D8\\u0338\",\n    nlsim: \"\\u2274\",\n    nLt: \"\\u226A\\u20D2\",\n    nlt: \"\\u226E\",\n    nltri: \"\\u22EA\",\n    nltrie: \"\\u22EC\",\n    nLtv: \"\\u226A\\u0338\",\n    nmid: \"\\u2224\",\n    NoBreak: \"\\u2060\",\n    NonBreakingSpace: \"\\xa0\",\n    Nopf: \"\\u2115\",\n    nopf: \"\\uD835\\uDD5F\",\n    Not: \"\\u2AEC\",\n    not: \"\\xac\",\n    NotCongruent: \"\\u2262\",\n    NotCupCap: \"\\u226D\",\n    NotDoubleVerticalBar: \"\\u2226\",\n    NotElement: \"\\u2209\",\n    NotEqual: \"\\u2260\",\n    NotEqualTilde: \"\\u2242\\u0338\",\n    NotExists: \"\\u2204\",\n    NotGreater: \"\\u226F\",\n    NotGreaterEqual: \"\\u2271\",\n    NotGreaterFullEqual: \"\\u2267\\u0338\",\n    NotGreaterGreater: \"\\u226B\\u0338\",\n    NotGreaterLess: \"\\u2279\",\n    NotGreaterSlantEqual: \"\\u2A7E\\u0338\",\n    NotGreaterTilde: \"\\u2275\",\n    NotHumpDownHump: \"\\u224E\\u0338\",\n    NotHumpEqual: \"\\u224F\\u0338\",\n    notin: \"\\u2209\",\n    notindot: \"\\u22F5\\u0338\",\n    notinE: \"\\u22F9\\u0338\",\n    notinva: \"\\u2209\",\n    notinvb: \"\\u22F7\",\n    notinvc: \"\\u22F6\",\n    NotLeftTriangle: \"\\u22EA\",\n    NotLeftTriangleBar: \"\\u29CF\\u0338\",\n    NotLeftTriangleEqual: \"\\u22EC\",\n    NotLess: \"\\u226E\",\n    NotLessEqual: \"\\u2270\",\n    NotLessGreater: \"\\u2278\",\n    NotLessLess: \"\\u226A\\u0338\",\n    NotLessSlantEqual: \"\\u2A7D\\u0338\",\n    NotLessTilde: \"\\u2274\",\n    NotNestedGreaterGreater: \"\\u2AA2\\u0338\",\n    NotNestedLessLess: \"\\u2AA1\\u0338\",\n    notni: \"\\u220C\",\n    notniva: \"\\u220C\",\n    notnivb: \"\\u22FE\",\n    notnivc: \"\\u22FD\",\n    NotPrecedes: \"\\u2280\",\n    NotPrecedesEqual: \"\\u2AAF\\u0338\",\n    NotPrecedesSlantEqual: \"\\u22E0\",\n    NotReverseElement: \"\\u220C\",\n    NotRightTriangle: \"\\u22EB\",\n    NotRightTriangleBar: \"\\u29D0\\u0338\",\n    NotRightTriangleEqual: \"\\u22ED\",\n    NotSquareSubset: \"\\u228F\\u0338\",\n    NotSquareSubsetEqual: \"\\u22E2\",\n    NotSquareSuperset: \"\\u2290\\u0338\",\n    NotSquareSupersetEqual: \"\\u22E3\",\n    NotSubset: \"\\u2282\\u20D2\",\n    NotSubsetEqual: \"\\u2288\",\n    NotSucceeds: \"\\u2281\",\n    NotSucceedsEqual: \"\\u2AB0\\u0338\",\n    NotSucceedsSlantEqual: \"\\u22E1\",\n    NotSucceedsTilde: \"\\u227F\\u0338\",\n    NotSuperset: \"\\u2283\\u20D2\",\n    NotSupersetEqual: \"\\u2289\",\n    NotTilde: \"\\u2241\",\n    NotTildeEqual: \"\\u2244\",\n    NotTildeFullEqual: \"\\u2247\",\n    NotTildeTilde: \"\\u2249\",\n    NotVerticalBar: \"\\u2224\",\n    npar: \"\\u2226\",\n    nparallel: \"\\u2226\",\n    nparsl: \"\\u2AFD\\u20E5\",\n    npart: \"\\u2202\\u0338\",\n    npolint: \"\\u2A14\",\n    npr: \"\\u2280\",\n    nprcue: \"\\u22E0\",\n    npre: \"\\u2AAF\\u0338\",\n    nprec: \"\\u2280\",\n    npreceq: \"\\u2AAF\\u0338\",\n    nrArr: \"\\u21CF\",\n    nrarr: \"\\u219B\",\n    nrarrc: \"\\u2933\\u0338\",\n    nrarrw: \"\\u219D\\u0338\",\n    nRightarrow: \"\\u21CF\",\n    nrightarrow: \"\\u219B\",\n    nrtri: \"\\u22EB\",\n    nrtrie: \"\\u22ED\",\n    nsc: \"\\u2281\",\n    nsccue: \"\\u22E1\",\n    nsce: \"\\u2AB0\\u0338\",\n    Nscr: \"\\uD835\\uDCA9\",\n    nscr: \"\\uD835\\uDCC3\",\n    nshortmid: \"\\u2224\",\n    nshortparallel: \"\\u2226\",\n    nsim: \"\\u2241\",\n    nsime: \"\\u2244\",\n    nsimeq: \"\\u2244\",\n    nsmid: \"\\u2224\",\n    nspar: \"\\u2226\",\n    nsqsube: \"\\u22E2\",\n    nsqsupe: \"\\u22E3\",\n    nsub: \"\\u2284\",\n    nsubE: \"\\u2AC5\\u0338\",\n    nsube: \"\\u2288\",\n    nsubset: \"\\u2282\\u20D2\",\n    nsubseteq: \"\\u2288\",\n    nsubseteqq: \"\\u2AC5\\u0338\",\n    nsucc: \"\\u2281\",\n    nsucceq: \"\\u2AB0\\u0338\",\n    nsup: \"\\u2285\",\n    nsupE: \"\\u2AC6\\u0338\",\n    nsupe: \"\\u2289\",\n    nsupset: \"\\u2283\\u20D2\",\n    nsupseteq: \"\\u2289\",\n    nsupseteqq: \"\\u2AC6\\u0338\",\n    ntgl: \"\\u2279\",\n    Ntilde: \"\\xd1\",\n    ntilde: \"\\xf1\",\n    ntlg: \"\\u2278\",\n    ntriangleleft: \"\\u22EA\",\n    ntrianglelefteq: \"\\u22EC\",\n    ntriangleright: \"\\u22EB\",\n    ntrianglerighteq: \"\\u22ED\",\n    Nu: \"\\u039D\",\n    nu: \"\\u03BD\",\n    num: \"#\",\n    numero: \"\\u2116\",\n    numsp: \"\\u2007\",\n    nvap: \"\\u224D\\u20D2\",\n    nVDash: \"\\u22AF\",\n    nVdash: \"\\u22AE\",\n    nvDash: \"\\u22AD\",\n    nvdash: \"\\u22AC\",\n    nvge: \"\\u2265\\u20D2\",\n    nvgt: \">\\u20D2\",\n    nvHarr: \"\\u2904\",\n    nvinfin: \"\\u29DE\",\n    nvlArr: \"\\u2902\",\n    nvle: \"\\u2264\\u20D2\",\n    nvlt: \"<\\u20D2\",\n    nvltrie: \"\\u22B4\\u20D2\",\n    nvrArr: \"\\u2903\",\n    nvrtrie: \"\\u22B5\\u20D2\",\n    nvsim: \"\\u223C\\u20D2\",\n    nwarhk: \"\\u2923\",\n    nwArr: \"\\u21D6\",\n    nwarr: \"\\u2196\",\n    nwarrow: \"\\u2196\",\n    nwnear: \"\\u2927\",\n    Oacute: \"\\xd3\",\n    oacute: \"\\xf3\",\n    oast: \"\\u229B\",\n    ocir: \"\\u229A\",\n    Ocirc: \"\\xd4\",\n    ocirc: \"\\xf4\",\n    Ocy: \"\\u041E\",\n    ocy: \"\\u043E\",\n    odash: \"\\u229D\",\n    Odblac: \"\\u0150\",\n    odblac: \"\\u0151\",\n    odiv: \"\\u2A38\",\n    odot: \"\\u2299\",\n    odsold: \"\\u29BC\",\n    OElig: \"\\u0152\",\n    oelig: \"\\u0153\",\n    ofcir: \"\\u29BF\",\n    Ofr: \"\\uD835\\uDD12\",\n    ofr: \"\\uD835\\uDD2C\",\n    ogon: \"\\u02DB\",\n    Ograve: \"\\xd2\",\n    ograve: \"\\xf2\",\n    ogt: \"\\u29C1\",\n    ohbar: \"\\u29B5\",\n    ohm: \"\\u03A9\",\n    oint: \"\\u222E\",\n    olarr: \"\\u21BA\",\n    olcir: \"\\u29BE\",\n    olcross: \"\\u29BB\",\n    oline: \"\\u203E\",\n    olt: \"\\u29C0\",\n    Omacr: \"\\u014C\",\n    omacr: \"\\u014D\",\n    Omega: \"\\u03A9\",\n    omega: \"\\u03C9\",\n    Omicron: \"\\u039F\",\n    omicron: \"\\u03BF\",\n    omid: \"\\u29B6\",\n    ominus: \"\\u2296\",\n    Oopf: \"\\uD835\\uDD46\",\n    oopf: \"\\uD835\\uDD60\",\n    opar: \"\\u29B7\",\n    OpenCurlyDoubleQuote: \"\\u201C\",\n    OpenCurlyQuote: \"\\u2018\",\n    operp: \"\\u29B9\",\n    oplus: \"\\u2295\",\n    Or: \"\\u2A54\",\n    or: \"\\u2228\",\n    orarr: \"\\u21BB\",\n    ord: \"\\u2A5D\",\n    order: \"\\u2134\",\n    orderof: \"\\u2134\",\n    ordf: \"\\xaa\",\n    ordm: \"\\xba\",\n    origof: \"\\u22B6\",\n    oror: \"\\u2A56\",\n    orslope: \"\\u2A57\",\n    orv: \"\\u2A5B\",\n    oS: \"\\u24C8\",\n    Oscr: \"\\uD835\\uDCAA\",\n    oscr: \"\\u2134\",\n    Oslash: \"\\xd8\",\n    oslash: \"\\xf8\",\n    osol: \"\\u2298\",\n    Otilde: \"\\xd5\",\n    otilde: \"\\xf5\",\n    Otimes: \"\\u2A37\",\n    otimes: \"\\u2297\",\n    otimesas: \"\\u2A36\",\n    Ouml: \"\\xd6\",\n    ouml: \"\\xf6\",\n    ovbar: \"\\u233D\",\n    OverBar: \"\\u203E\",\n    OverBrace: \"\\u23DE\",\n    OverBracket: \"\\u23B4\",\n    OverParenthesis: \"\\u23DC\",\n    par: \"\\u2225\",\n    para: \"\\xb6\",\n    parallel: \"\\u2225\",\n    parsim: \"\\u2AF3\",\n    parsl: \"\\u2AFD\",\n    part: \"\\u2202\",\n    PartialD: \"\\u2202\",\n    Pcy: \"\\u041F\",\n    pcy: \"\\u043F\",\n    percnt: \"%\",\n    period: \".\",\n    permil: \"\\u2030\",\n    perp: \"\\u22A5\",\n    pertenk: \"\\u2031\",\n    Pfr: \"\\uD835\\uDD13\",\n    pfr: \"\\uD835\\uDD2D\",\n    Phi: \"\\u03A6\",\n    phi: \"\\u03C6\",\n    phiv: \"\\u03D5\",\n    phmmat: \"\\u2133\",\n    phone: \"\\u260E\",\n    Pi: \"\\u03A0\",\n    pi: \"\\u03C0\",\n    pitchfork: \"\\u22D4\",\n    piv: \"\\u03D6\",\n    planck: \"\\u210F\",\n    planckh: \"\\u210E\",\n    plankv: \"\\u210F\",\n    plus: \"+\",\n    plusacir: \"\\u2A23\",\n    plusb: \"\\u229E\",\n    pluscir: \"\\u2A22\",\n    plusdo: \"\\u2214\",\n    plusdu: \"\\u2A25\",\n    pluse: \"\\u2A72\",\n    PlusMinus: \"\\xb1\",\n    plusmn: \"\\xb1\",\n    plussim: \"\\u2A26\",\n    plustwo: \"\\u2A27\",\n    pm: \"\\xb1\",\n    Poincareplane: \"\\u210C\",\n    pointint: \"\\u2A15\",\n    Popf: \"\\u2119\",\n    popf: \"\\uD835\\uDD61\",\n    pound: \"\\xa3\",\n    Pr: \"\\u2ABB\",\n    pr: \"\\u227A\",\n    prap: \"\\u2AB7\",\n    prcue: \"\\u227C\",\n    prE: \"\\u2AB3\",\n    pre: \"\\u2AAF\",\n    prec: \"\\u227A\",\n    precapprox: \"\\u2AB7\",\n    preccurlyeq: \"\\u227C\",\n    Precedes: \"\\u227A\",\n    PrecedesEqual: \"\\u2AAF\",\n    PrecedesSlantEqual: \"\\u227C\",\n    PrecedesTilde: \"\\u227E\",\n    preceq: \"\\u2AAF\",\n    precnapprox: \"\\u2AB9\",\n    precneqq: \"\\u2AB5\",\n    precnsim: \"\\u22E8\",\n    precsim: \"\\u227E\",\n    Prime: \"\\u2033\",\n    prime: \"\\u2032\",\n    primes: \"\\u2119\",\n    prnap: \"\\u2AB9\",\n    prnE: \"\\u2AB5\",\n    prnsim: \"\\u22E8\",\n    prod: \"\\u220F\",\n    Product: \"\\u220F\",\n    profalar: \"\\u232E\",\n    profline: \"\\u2312\",\n    profsurf: \"\\u2313\",\n    prop: \"\\u221D\",\n    Proportion: \"\\u2237\",\n    Proportional: \"\\u221D\",\n    propto: \"\\u221D\",\n    prsim: \"\\u227E\",\n    prurel: \"\\u22B0\",\n    Pscr: \"\\uD835\\uDCAB\",\n    pscr: \"\\uD835\\uDCC5\",\n    Psi: \"\\u03A8\",\n    psi: \"\\u03C8\",\n    puncsp: \"\\u2008\",\n    Qfr: \"\\uD835\\uDD14\",\n    qfr: \"\\uD835\\uDD2E\",\n    qint: \"\\u2A0C\",\n    Qopf: \"\\u211A\",\n    qopf: \"\\uD835\\uDD62\",\n    qprime: \"\\u2057\",\n    Qscr: \"\\uD835\\uDCAC\",\n    qscr: \"\\uD835\\uDCC6\",\n    quaternions: \"\\u210D\",\n    quatint: \"\\u2A16\",\n    quest: \"?\",\n    questeq: \"\\u225F\",\n    QUOT: '\"',\n    quot: '\"',\n    rAarr: \"\\u21DB\",\n    race: \"\\u223D\\u0331\",\n    Racute: \"\\u0154\",\n    racute: \"\\u0155\",\n    radic: \"\\u221A\",\n    raemptyv: \"\\u29B3\",\n    Rang: \"\\u27EB\",\n    rang: \"\\u27E9\",\n    rangd: \"\\u2992\",\n    range: \"\\u29A5\",\n    rangle: \"\\u27E9\",\n    raquo: \"\\xbb\",\n    Rarr: \"\\u21A0\",\n    rArr: \"\\u21D2\",\n    rarr: \"\\u2192\",\n    rarrap: \"\\u2975\",\n    rarrb: \"\\u21E5\",\n    rarrbfs: \"\\u2920\",\n    rarrc: \"\\u2933\",\n    rarrfs: \"\\u291E\",\n    rarrhk: \"\\u21AA\",\n    rarrlp: \"\\u21AC\",\n    rarrpl: \"\\u2945\",\n    rarrsim: \"\\u2974\",\n    Rarrtl: \"\\u2916\",\n    rarrtl: \"\\u21A3\",\n    rarrw: \"\\u219D\",\n    rAtail: \"\\u291C\",\n    ratail: \"\\u291A\",\n    ratio: \"\\u2236\",\n    rationals: \"\\u211A\",\n    RBarr: \"\\u2910\",\n    rBarr: \"\\u290F\",\n    rbarr: \"\\u290D\",\n    rbbrk: \"\\u2773\",\n    rbrace: \"}\",\n    rbrack: \"]\",\n    rbrke: \"\\u298C\",\n    rbrksld: \"\\u298E\",\n    rbrkslu: \"\\u2990\",\n    Rcaron: \"\\u0158\",\n    rcaron: \"\\u0159\",\n    Rcedil: \"\\u0156\",\n    rcedil: \"\\u0157\",\n    rceil: \"\\u2309\",\n    rcub: \"}\",\n    Rcy: \"\\u0420\",\n    rcy: \"\\u0440\",\n    rdca: \"\\u2937\",\n    rdldhar: \"\\u2969\",\n    rdquo: \"\\u201D\",\n    rdquor: \"\\u201D\",\n    rdsh: \"\\u21B3\",\n    Re: \"\\u211C\",\n    real: \"\\u211C\",\n    realine: \"\\u211B\",\n    realpart: \"\\u211C\",\n    reals: \"\\u211D\",\n    rect: \"\\u25AD\",\n    REG: \"\\xae\",\n    reg: \"\\xae\",\n    ReverseElement: \"\\u220B\",\n    ReverseEquilibrium: \"\\u21CB\",\n    ReverseUpEquilibrium: \"\\u296F\",\n    rfisht: \"\\u297D\",\n    rfloor: \"\\u230B\",\n    Rfr: \"\\u211C\",\n    rfr: \"\\uD835\\uDD2F\",\n    rHar: \"\\u2964\",\n    rhard: \"\\u21C1\",\n    rharu: \"\\u21C0\",\n    rharul: \"\\u296C\",\n    Rho: \"\\u03A1\",\n    rho: \"\\u03C1\",\n    rhov: \"\\u03F1\",\n    RightAngleBracket: \"\\u27E9\",\n    RightArrow: \"\\u2192\",\n    Rightarrow: \"\\u21D2\",\n    rightarrow: \"\\u2192\",\n    RightArrowBar: \"\\u21E5\",\n    RightArrowLeftArrow: \"\\u21C4\",\n    rightarrowtail: \"\\u21A3\",\n    RightCeiling: \"\\u2309\",\n    RightDoubleBracket: \"\\u27E7\",\n    RightDownTeeVector: \"\\u295D\",\n    RightDownVector: \"\\u21C2\",\n    RightDownVectorBar: \"\\u2955\",\n    RightFloor: \"\\u230B\",\n    rightharpoondown: \"\\u21C1\",\n    rightharpoonup: \"\\u21C0\",\n    rightleftarrows: \"\\u21C4\",\n    rightleftharpoons: \"\\u21CC\",\n    rightrightarrows: \"\\u21C9\",\n    rightsquigarrow: \"\\u219D\",\n    RightTee: \"\\u22A2\",\n    RightTeeArrow: \"\\u21A6\",\n    RightTeeVector: \"\\u295B\",\n    rightthreetimes: \"\\u22CC\",\n    RightTriangle: \"\\u22B3\",\n    RightTriangleBar: \"\\u29D0\",\n    RightTriangleEqual: \"\\u22B5\",\n    RightUpDownVector: \"\\u294F\",\n    RightUpTeeVector: \"\\u295C\",\n    RightUpVector: \"\\u21BE\",\n    RightUpVectorBar: \"\\u2954\",\n    RightVector: \"\\u21C0\",\n    RightVectorBar: \"\\u2953\",\n    ring: \"\\u02DA\",\n    risingdotseq: \"\\u2253\",\n    rlarr: \"\\u21C4\",\n    rlhar: \"\\u21CC\",\n    rlm: \"\\u200F\",\n    rmoust: \"\\u23B1\",\n    rmoustache: \"\\u23B1\",\n    rnmid: \"\\u2AEE\",\n    roang: \"\\u27ED\",\n    roarr: \"\\u21FE\",\n    robrk: \"\\u27E7\",\n    ropar: \"\\u2986\",\n    Ropf: \"\\u211D\",\n    ropf: \"\\uD835\\uDD63\",\n    roplus: \"\\u2A2E\",\n    rotimes: \"\\u2A35\",\n    RoundImplies: \"\\u2970\",\n    rpar: \")\",\n    rpargt: \"\\u2994\",\n    rppolint: \"\\u2A12\",\n    rrarr: \"\\u21C9\",\n    Rrightarrow: \"\\u21DB\",\n    rsaquo: \"\\u203A\",\n    Rscr: \"\\u211B\",\n    rscr: \"\\uD835\\uDCC7\",\n    Rsh: \"\\u21B1\",\n    rsh: \"\\u21B1\",\n    rsqb: \"]\",\n    rsquo: \"\\u2019\",\n    rsquor: \"\\u2019\",\n    rthree: \"\\u22CC\",\n    rtimes: \"\\u22CA\",\n    rtri: \"\\u25B9\",\n    rtrie: \"\\u22B5\",\n    rtrif: \"\\u25B8\",\n    rtriltri: \"\\u29CE\",\n    RuleDelayed: \"\\u29F4\",\n    ruluhar: \"\\u2968\",\n    rx: \"\\u211E\",\n    Sacute: \"\\u015A\",\n    sacute: \"\\u015B\",\n    sbquo: \"\\u201A\",\n    Sc: \"\\u2ABC\",\n    sc: \"\\u227B\",\n    scap: \"\\u2AB8\",\n    Scaron: \"\\u0160\",\n    scaron: \"\\u0161\",\n    sccue: \"\\u227D\",\n    scE: \"\\u2AB4\",\n    sce: \"\\u2AB0\",\n    Scedil: \"\\u015E\",\n    scedil: \"\\u015F\",\n    Scirc: \"\\u015C\",\n    scirc: \"\\u015D\",\n    scnap: \"\\u2ABA\",\n    scnE: \"\\u2AB6\",\n    scnsim: \"\\u22E9\",\n    scpolint: \"\\u2A13\",\n    scsim: \"\\u227F\",\n    Scy: \"\\u0421\",\n    scy: \"\\u0441\",\n    sdot: \"\\u22C5\",\n    sdotb: \"\\u22A1\",\n    sdote: \"\\u2A66\",\n    searhk: \"\\u2925\",\n    seArr: \"\\u21D8\",\n    searr: \"\\u2198\",\n    searrow: \"\\u2198\",\n    sect: \"\\xa7\",\n    semi: \";\",\n    seswar: \"\\u2929\",\n    setminus: \"\\u2216\",\n    setmn: \"\\u2216\",\n    sext: \"\\u2736\",\n    Sfr: \"\\uD835\\uDD16\",\n    sfr: \"\\uD835\\uDD30\",\n    sfrown: \"\\u2322\",\n    sharp: \"\\u266F\",\n    SHCHcy: \"\\u0429\",\n    shchcy: \"\\u0449\",\n    SHcy: \"\\u0428\",\n    shcy: \"\\u0448\",\n    ShortDownArrow: \"\\u2193\",\n    ShortLeftArrow: \"\\u2190\",\n    shortmid: \"\\u2223\",\n    shortparallel: \"\\u2225\",\n    ShortRightArrow: \"\\u2192\",\n    ShortUpArrow: \"\\u2191\",\n    shy: \"\\xad\",\n    Sigma: \"\\u03A3\",\n    sigma: \"\\u03C3\",\n    sigmaf: \"\\u03C2\",\n    sigmav: \"\\u03C2\",\n    sim: \"\\u223C\",\n    simdot: \"\\u2A6A\",\n    sime: \"\\u2243\",\n    simeq: \"\\u2243\",\n    simg: \"\\u2A9E\",\n    simgE: \"\\u2AA0\",\n    siml: \"\\u2A9D\",\n    simlE: \"\\u2A9F\",\n    simne: \"\\u2246\",\n    simplus: \"\\u2A24\",\n    simrarr: \"\\u2972\",\n    slarr: \"\\u2190\",\n    SmallCircle: \"\\u2218\",\n    smallsetminus: \"\\u2216\",\n    smashp: \"\\u2A33\",\n    smeparsl: \"\\u29E4\",\n    smid: \"\\u2223\",\n    smile: \"\\u2323\",\n    smt: \"\\u2AAA\",\n    smte: \"\\u2AAC\",\n    smtes: \"\\u2AAC\\uFE00\",\n    SOFTcy: \"\\u042C\",\n    softcy: \"\\u044C\",\n    sol: \"/\",\n    solb: \"\\u29C4\",\n    solbar: \"\\u233F\",\n    Sopf: \"\\uD835\\uDD4A\",\n    sopf: \"\\uD835\\uDD64\",\n    spades: \"\\u2660\",\n    spadesuit: \"\\u2660\",\n    spar: \"\\u2225\",\n    sqcap: \"\\u2293\",\n    sqcaps: \"\\u2293\\uFE00\",\n    sqcup: \"\\u2294\",\n    sqcups: \"\\u2294\\uFE00\",\n    Sqrt: \"\\u221A\",\n    sqsub: \"\\u228F\",\n    sqsube: \"\\u2291\",\n    sqsubset: \"\\u228F\",\n    sqsubseteq: \"\\u2291\",\n    sqsup: \"\\u2290\",\n    sqsupe: \"\\u2292\",\n    sqsupset: \"\\u2290\",\n    sqsupseteq: \"\\u2292\",\n    squ: \"\\u25A1\",\n    Square: \"\\u25A1\",\n    square: \"\\u25A1\",\n    SquareIntersection: \"\\u2293\",\n    SquareSubset: \"\\u228F\",\n    SquareSubsetEqual: \"\\u2291\",\n    SquareSuperset: \"\\u2290\",\n    SquareSupersetEqual: \"\\u2292\",\n    SquareUnion: \"\\u2294\",\n    squarf: \"\\u25AA\",\n    squf: \"\\u25AA\",\n    srarr: \"\\u2192\",\n    Sscr: \"\\uD835\\uDCAE\",\n    sscr: \"\\uD835\\uDCC8\",\n    ssetmn: \"\\u2216\",\n    ssmile: \"\\u2323\",\n    sstarf: \"\\u22C6\",\n    Star: \"\\u22C6\",\n    star: \"\\u2606\",\n    starf: \"\\u2605\",\n    straightepsilon: \"\\u03F5\",\n    straightphi: \"\\u03D5\",\n    strns: \"\\xaf\",\n    Sub: \"\\u22D0\",\n    sub: \"\\u2282\",\n    subdot: \"\\u2ABD\",\n    subE: \"\\u2AC5\",\n    sube: \"\\u2286\",\n    subedot: \"\\u2AC3\",\n    submult: \"\\u2AC1\",\n    subnE: \"\\u2ACB\",\n    subne: \"\\u228A\",\n    subplus: \"\\u2ABF\",\n    subrarr: \"\\u2979\",\n    Subset: \"\\u22D0\",\n    subset: \"\\u2282\",\n    subseteq: \"\\u2286\",\n    subseteqq: \"\\u2AC5\",\n    SubsetEqual: \"\\u2286\",\n    subsetneq: \"\\u228A\",\n    subsetneqq: \"\\u2ACB\",\n    subsim: \"\\u2AC7\",\n    subsub: \"\\u2AD5\",\n    subsup: \"\\u2AD3\",\n    succ: \"\\u227B\",\n    succapprox: \"\\u2AB8\",\n    succcurlyeq: \"\\u227D\",\n    Succeeds: \"\\u227B\",\n    SucceedsEqual: \"\\u2AB0\",\n    SucceedsSlantEqual: \"\\u227D\",\n    SucceedsTilde: \"\\u227F\",\n    succeq: \"\\u2AB0\",\n    succnapprox: \"\\u2ABA\",\n    succneqq: \"\\u2AB6\",\n    succnsim: \"\\u22E9\",\n    succsim: \"\\u227F\",\n    SuchThat: \"\\u220B\",\n    Sum: \"\\u2211\",\n    sum: \"\\u2211\",\n    sung: \"\\u266A\",\n    Sup: \"\\u22D1\",\n    sup: \"\\u2283\",\n    sup1: \"\\xb9\",\n    sup2: \"\\xb2\",\n    sup3: \"\\xb3\",\n    supdot: \"\\u2ABE\",\n    supdsub: \"\\u2AD8\",\n    supE: \"\\u2AC6\",\n    supe: \"\\u2287\",\n    supedot: \"\\u2AC4\",\n    Superset: \"\\u2283\",\n    SupersetEqual: \"\\u2287\",\n    suphsol: \"\\u27C9\",\n    suphsub: \"\\u2AD7\",\n    suplarr: \"\\u297B\",\n    supmult: \"\\u2AC2\",\n    supnE: \"\\u2ACC\",\n    supne: \"\\u228B\",\n    supplus: \"\\u2AC0\",\n    Supset: \"\\u22D1\",\n    supset: \"\\u2283\",\n    supseteq: \"\\u2287\",\n    supseteqq: \"\\u2AC6\",\n    supsetneq: \"\\u228B\",\n    supsetneqq: \"\\u2ACC\",\n    supsim: \"\\u2AC8\",\n    supsub: \"\\u2AD4\",\n    supsup: \"\\u2AD6\",\n    swarhk: \"\\u2926\",\n    swArr: \"\\u21D9\",\n    swarr: \"\\u2199\",\n    swarrow: \"\\u2199\",\n    swnwar: \"\\u292A\",\n    szlig: \"\\xdf\",\n    Tab: \"\t\",\n    target: \"\\u2316\",\n    Tau: \"\\u03A4\",\n    tau: \"\\u03C4\",\n    tbrk: \"\\u23B4\",\n    Tcaron: \"\\u0164\",\n    tcaron: \"\\u0165\",\n    Tcedil: \"\\u0162\",\n    tcedil: \"\\u0163\",\n    Tcy: \"\\u0422\",\n    tcy: \"\\u0442\",\n    tdot: \"\\u20DB\",\n    telrec: \"\\u2315\",\n    Tfr: \"\\uD835\\uDD17\",\n    tfr: \"\\uD835\\uDD31\",\n    there4: \"\\u2234\",\n    Therefore: \"\\u2234\",\n    therefore: \"\\u2234\",\n    Theta: \"\\u0398\",\n    theta: \"\\u03B8\",\n    thetasym: \"\\u03D1\",\n    thetav: \"\\u03D1\",\n    thickapprox: \"\\u2248\",\n    thicksim: \"\\u223C\",\n    ThickSpace: \"\\u205F\\u200A\",\n    thinsp: \"\\u2009\",\n    ThinSpace: \"\\u2009\",\n    thkap: \"\\u2248\",\n    thksim: \"\\u223C\",\n    THORN: \"\\xde\",\n    thorn: \"\\xfe\",\n    Tilde: \"\\u223C\",\n    tilde: \"\\u02DC\",\n    TildeEqual: \"\\u2243\",\n    TildeFullEqual: \"\\u2245\",\n    TildeTilde: \"\\u2248\",\n    times: \"\\xd7\",\n    timesb: \"\\u22A0\",\n    timesbar: \"\\u2A31\",\n    timesd: \"\\u2A30\",\n    tint: \"\\u222D\",\n    toea: \"\\u2928\",\n    top: \"\\u22A4\",\n    topbot: \"\\u2336\",\n    topcir: \"\\u2AF1\",\n    Topf: \"\\uD835\\uDD4B\",\n    topf: \"\\uD835\\uDD65\",\n    topfork: \"\\u2ADA\",\n    tosa: \"\\u2929\",\n    tprime: \"\\u2034\",\n    TRADE: \"\\u2122\",\n    trade: \"\\u2122\",\n    triangle: \"\\u25B5\",\n    triangledown: \"\\u25BF\",\n    triangleleft: \"\\u25C3\",\n    trianglelefteq: \"\\u22B4\",\n    triangleq: \"\\u225C\",\n    triangleright: \"\\u25B9\",\n    trianglerighteq: \"\\u22B5\",\n    tridot: \"\\u25EC\",\n    trie: \"\\u225C\",\n    triminus: \"\\u2A3A\",\n    TripleDot: \"\\u20DB\",\n    triplus: \"\\u2A39\",\n    trisb: \"\\u29CD\",\n    tritime: \"\\u2A3B\",\n    trpezium: \"\\u23E2\",\n    Tscr: \"\\uD835\\uDCAF\",\n    tscr: \"\\uD835\\uDCC9\",\n    TScy: \"\\u0426\",\n    tscy: \"\\u0446\",\n    TSHcy: \"\\u040B\",\n    tshcy: \"\\u045B\",\n    Tstrok: \"\\u0166\",\n    tstrok: \"\\u0167\",\n    twixt: \"\\u226C\",\n    twoheadleftarrow: \"\\u219E\",\n    twoheadrightarrow: \"\\u21A0\",\n    Uacute: \"\\xda\",\n    uacute: \"\\xfa\",\n    Uarr: \"\\u219F\",\n    uArr: \"\\u21D1\",\n    uarr: \"\\u2191\",\n    Uarrocir: \"\\u2949\",\n    Ubrcy: \"\\u040E\",\n    ubrcy: \"\\u045E\",\n    Ubreve: \"\\u016C\",\n    ubreve: \"\\u016D\",\n    Ucirc: \"\\xdb\",\n    ucirc: \"\\xfb\",\n    Ucy: \"\\u0423\",\n    ucy: \"\\u0443\",\n    udarr: \"\\u21C5\",\n    Udblac: \"\\u0170\",\n    udblac: \"\\u0171\",\n    udhar: \"\\u296E\",\n    ufisht: \"\\u297E\",\n    Ufr: \"\\uD835\\uDD18\",\n    ufr: \"\\uD835\\uDD32\",\n    Ugrave: \"\\xd9\",\n    ugrave: \"\\xf9\",\n    uHar: \"\\u2963\",\n    uharl: \"\\u21BF\",\n    uharr: \"\\u21BE\",\n    uhblk: \"\\u2580\",\n    ulcorn: \"\\u231C\",\n    ulcorner: \"\\u231C\",\n    ulcrop: \"\\u230F\",\n    ultri: \"\\u25F8\",\n    Umacr: \"\\u016A\",\n    umacr: \"\\u016B\",\n    uml: \"\\xa8\",\n    UnderBar: \"_\",\n    UnderBrace: \"\\u23DF\",\n    UnderBracket: \"\\u23B5\",\n    UnderParenthesis: \"\\u23DD\",\n    Union: \"\\u22C3\",\n    UnionPlus: \"\\u228E\",\n    Uogon: \"\\u0172\",\n    uogon: \"\\u0173\",\n    Uopf: \"\\uD835\\uDD4C\",\n    uopf: \"\\uD835\\uDD66\",\n    UpArrow: \"\\u2191\",\n    Uparrow: \"\\u21D1\",\n    uparrow: \"\\u2191\",\n    UpArrowBar: \"\\u2912\",\n    UpArrowDownArrow: \"\\u21C5\",\n    UpDownArrow: \"\\u2195\",\n    Updownarrow: \"\\u21D5\",\n    updownarrow: \"\\u2195\",\n    UpEquilibrium: \"\\u296E\",\n    upharpoonleft: \"\\u21BF\",\n    upharpoonright: \"\\u21BE\",\n    uplus: \"\\u228E\",\n    UpperLeftArrow: \"\\u2196\",\n    UpperRightArrow: \"\\u2197\",\n    Upsi: \"\\u03D2\",\n    upsi: \"\\u03C5\",\n    upsih: \"\\u03D2\",\n    Upsilon: \"\\u03A5\",\n    upsilon: \"\\u03C5\",\n    UpTee: \"\\u22A5\",\n    UpTeeArrow: \"\\u21A5\",\n    upuparrows: \"\\u21C8\",\n    urcorn: \"\\u231D\",\n    urcorner: \"\\u231D\",\n    urcrop: \"\\u230E\",\n    Uring: \"\\u016E\",\n    uring: \"\\u016F\",\n    urtri: \"\\u25F9\",\n    Uscr: \"\\uD835\\uDCB0\",\n    uscr: \"\\uD835\\uDCCA\",\n    utdot: \"\\u22F0\",\n    Utilde: \"\\u0168\",\n    utilde: \"\\u0169\",\n    utri: \"\\u25B5\",\n    utrif: \"\\u25B4\",\n    uuarr: \"\\u21C8\",\n    Uuml: \"\\xdc\",\n    uuml: \"\\xfc\",\n    uwangle: \"\\u29A7\",\n    vangrt: \"\\u299C\",\n    varepsilon: \"\\u03F5\",\n    varkappa: \"\\u03F0\",\n    varnothing: \"\\u2205\",\n    varphi: \"\\u03D5\",\n    varpi: \"\\u03D6\",\n    varpropto: \"\\u221D\",\n    vArr: \"\\u21D5\",\n    varr: \"\\u2195\",\n    varrho: \"\\u03F1\",\n    varsigma: \"\\u03C2\",\n    varsubsetneq: \"\\u228A\\uFE00\",\n    varsubsetneqq: \"\\u2ACB\\uFE00\",\n    varsupsetneq: \"\\u228B\\uFE00\",\n    varsupsetneqq: \"\\u2ACC\\uFE00\",\n    vartheta: \"\\u03D1\",\n    vartriangleleft: \"\\u22B2\",\n    vartriangleright: \"\\u22B3\",\n    Vbar: \"\\u2AEB\",\n    vBar: \"\\u2AE8\",\n    vBarv: \"\\u2AE9\",\n    Vcy: \"\\u0412\",\n    vcy: \"\\u0432\",\n    VDash: \"\\u22AB\",\n    Vdash: \"\\u22A9\",\n    vDash: \"\\u22A8\",\n    vdash: \"\\u22A2\",\n    Vdashl: \"\\u2AE6\",\n    Vee: \"\\u22C1\",\n    vee: \"\\u2228\",\n    veebar: \"\\u22BB\",\n    veeeq: \"\\u225A\",\n    vellip: \"\\u22EE\",\n    Verbar: \"\\u2016\",\n    verbar: \"|\",\n    Vert: \"\\u2016\",\n    vert: \"|\",\n    VerticalBar: \"\\u2223\",\n    VerticalLine: \"|\",\n    VerticalSeparator: \"\\u2758\",\n    VerticalTilde: \"\\u2240\",\n    VeryThinSpace: \"\\u200A\",\n    Vfr: \"\\uD835\\uDD19\",\n    vfr: \"\\uD835\\uDD33\",\n    vltri: \"\\u22B2\",\n    vnsub: \"\\u2282\\u20D2\",\n    vnsup: \"\\u2283\\u20D2\",\n    Vopf: \"\\uD835\\uDD4D\",\n    vopf: \"\\uD835\\uDD67\",\n    vprop: \"\\u221D\",\n    vrtri: \"\\u22B3\",\n    Vscr: \"\\uD835\\uDCB1\",\n    vscr: \"\\uD835\\uDCCB\",\n    vsubnE: \"\\u2ACB\\uFE00\",\n    vsubne: \"\\u228A\\uFE00\",\n    vsupnE: \"\\u2ACC\\uFE00\",\n    vsupne: \"\\u228B\\uFE00\",\n    Vvdash: \"\\u22AA\",\n    vzigzag: \"\\u299A\",\n    Wcirc: \"\\u0174\",\n    wcirc: \"\\u0175\",\n    wedbar: \"\\u2A5F\",\n    Wedge: \"\\u22C0\",\n    wedge: \"\\u2227\",\n    wedgeq: \"\\u2259\",\n    weierp: \"\\u2118\",\n    Wfr: \"\\uD835\\uDD1A\",\n    wfr: \"\\uD835\\uDD34\",\n    Wopf: \"\\uD835\\uDD4E\",\n    wopf: \"\\uD835\\uDD68\",\n    wp: \"\\u2118\",\n    wr: \"\\u2240\",\n    wreath: \"\\u2240\",\n    Wscr: \"\\uD835\\uDCB2\",\n    wscr: \"\\uD835\\uDCCC\",\n    xcap: \"\\u22C2\",\n    xcirc: \"\\u25EF\",\n    xcup: \"\\u22C3\",\n    xdtri: \"\\u25BD\",\n    Xfr: \"\\uD835\\uDD1B\",\n    xfr: \"\\uD835\\uDD35\",\n    xhArr: \"\\u27FA\",\n    xharr: \"\\u27F7\",\n    Xi: \"\\u039E\",\n    xi: \"\\u03BE\",\n    xlArr: \"\\u27F8\",\n    xlarr: \"\\u27F5\",\n    xmap: \"\\u27FC\",\n    xnis: \"\\u22FB\",\n    xodot: \"\\u2A00\",\n    Xopf: \"\\uD835\\uDD4F\",\n    xopf: \"\\uD835\\uDD69\",\n    xoplus: \"\\u2A01\",\n    xotime: \"\\u2A02\",\n    xrArr: \"\\u27F9\",\n    xrarr: \"\\u27F6\",\n    Xscr: \"\\uD835\\uDCB3\",\n    xscr: \"\\uD835\\uDCCD\",\n    xsqcup: \"\\u2A06\",\n    xuplus: \"\\u2A04\",\n    xutri: \"\\u25B3\",\n    xvee: \"\\u22C1\",\n    xwedge: \"\\u22C0\",\n    Yacute: \"\\xdd\",\n    yacute: \"\\xfd\",\n    YAcy: \"\\u042F\",\n    yacy: \"\\u044F\",\n    Ycirc: \"\\u0176\",\n    ycirc: \"\\u0177\",\n    Ycy: \"\\u042B\",\n    ycy: \"\\u044B\",\n    yen: \"\\xa5\",\n    Yfr: \"\\uD835\\uDD1C\",\n    yfr: \"\\uD835\\uDD36\",\n    YIcy: \"\\u0407\",\n    yicy: \"\\u0457\",\n    Yopf: \"\\uD835\\uDD50\",\n    yopf: \"\\uD835\\uDD6A\",\n    Yscr: \"\\uD835\\uDCB4\",\n    yscr: \"\\uD835\\uDCCE\",\n    YUcy: \"\\u042E\",\n    yucy: \"\\u044E\",\n    Yuml: \"\\u0178\",\n    yuml: \"\\xff\",\n    Zacute: \"\\u0179\",\n    zacute: \"\\u017A\",\n    Zcaron: \"\\u017D\",\n    zcaron: \"\\u017E\",\n    Zcy: \"\\u0417\",\n    zcy: \"\\u0437\",\n    Zdot: \"\\u017B\",\n    zdot: \"\\u017C\",\n    zeetrf: \"\\u2128\",\n    ZeroWidthSpace: \"\\u200B\",\n    Zeta: \"\\u0396\",\n    zeta: \"\\u03B6\",\n    Zfr: \"\\u2128\",\n    zfr: \"\\uD835\\uDD37\",\n    ZHcy: \"\\u0416\",\n    zhcy: \"\\u0436\",\n    zigrarr: \"\\u21DD\",\n    Zopf: \"\\u2124\",\n    zopf: \"\\uD835\\uDD6B\",\n    Zscr: \"\\uD835\\uDCB5\",\n    zscr: \"\\uD835\\uDCCF\",\n    zwj: \"\\u200D\",\n    zwnj: \"\\u200C\"\n});\n$c7ccad4cdae4dce5$export$79451380caed3f98 = $c7ccad4cdae4dce5$export$b7e4d4631df36afa;\n\n});\n\nparcelRegister(\"bci2R\", function(module, exports) {\n\n$parcel$export(module.exports, \"XMLReader\", () => $826ed0110d21e5cb$export$ccbc9f9f018333e9, (v) => $826ed0110d21e5cb$export$ccbc9f9f018333e9 = v);\n$parcel$export(module.exports, \"ParseError\", () => $826ed0110d21e5cb$export$f9c837a54db411d, (v) => $826ed0110d21e5cb$export$f9c837a54db411d = v);\nvar $826ed0110d21e5cb$export$ccbc9f9f018333e9;\nvar $826ed0110d21e5cb$export$f9c837a54db411d;\n\nvar $fKAiq = parcelRequire(\"fKAiq\");\nvar $826ed0110d21e5cb$require$NAMESPACE = $fKAiq.NAMESPACE;\n//[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n//[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n//[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\nvar $826ed0110d21e5cb$var$nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/ //\\u10000-\\uEFFFF\n;\nvar $826ed0110d21e5cb$var$nameChar = new RegExp(\"[\\\\-\\\\.0-9\" + $826ed0110d21e5cb$var$nameStartChar.source.slice(1, -1) + \"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\nvar $826ed0110d21e5cb$var$tagNamePattern = new RegExp(\"^\" + $826ed0110d21e5cb$var$nameStartChar.source + $826ed0110d21e5cb$var$nameChar.source + \"*(?::\" + $826ed0110d21e5cb$var$nameStartChar.source + $826ed0110d21e5cb$var$nameChar.source + \"*)?$\");\n//var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\n//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\nvar $826ed0110d21e5cb$var$S_TAG = 0; //tag name offerring\nvar $826ed0110d21e5cb$var$S_ATTR = 1; //attr name offerring\nvar $826ed0110d21e5cb$var$S_ATTR_SPACE = 2; //attr name end and space offer\nvar $826ed0110d21e5cb$var$S_EQ = 3; //=space?\nvar $826ed0110d21e5cb$var$S_ATTR_NOQUOT_VALUE = 4; //attr value(no quot value only)\nvar $826ed0110d21e5cb$var$S_ATTR_END = 5; //attr value end and no space(quot end)\nvar $826ed0110d21e5cb$var$S_TAG_SPACE = 6; //(attr value end || tag end ) && (space offer)\nvar $826ed0110d21e5cb$var$S_TAG_CLOSE = 7; //closed el<el />\n/**\n * Creates an error that will not be caught by XMLReader aka the SAX parser.\n *\n * @param {string} message\n * @param {any?} locator Optional, can provide details about the location in the source\n * @constructor\n */ function $826ed0110d21e5cb$var$ParseError(message, locator) {\n    this.message = message;\n    this.locator = locator;\n    if (Error.captureStackTrace) Error.captureStackTrace(this, $826ed0110d21e5cb$var$ParseError);\n}\n$826ed0110d21e5cb$var$ParseError.prototype = new Error();\n$826ed0110d21e5cb$var$ParseError.prototype.name = $826ed0110d21e5cb$var$ParseError.name;\nfunction $826ed0110d21e5cb$var$XMLReader() {}\n$826ed0110d21e5cb$var$XMLReader.prototype = {\n    parse: function(source, defaultNSMap, entityMap) {\n        var domBuilder = this.domBuilder;\n        domBuilder.startDocument();\n        $826ed0110d21e5cb$var$_copy(defaultNSMap, defaultNSMap = {});\n        $826ed0110d21e5cb$var$parse(source, defaultNSMap, entityMap, domBuilder, this.errorHandler);\n        domBuilder.endDocument();\n    }\n};\nfunction $826ed0110d21e5cb$var$parse(source, defaultNSMapCopy, entityMap, domBuilder, errorHandler) {\n    function fixedFromCharCode(code) {\n        // String.prototype.fromCharCode does not supports\n        // > 2 bytes unicode chars directly\n        if (code > 0xffff) {\n            code -= 0x10000;\n            var surrogate1 = 0xd800 + (code >> 10), surrogate2 = 0xdc00 + (code & 0x3ff);\n            return String.fromCharCode(surrogate1, surrogate2);\n        } else return String.fromCharCode(code);\n    }\n    function entityReplacer(a) {\n        var k = a.slice(1, -1);\n        if (Object.hasOwnProperty.call(entityMap, k)) return entityMap[k];\n        else if (k.charAt(0) === \"#\") return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\", \"0x\")));\n        else {\n            errorHandler.error(\"entity not found:\" + a);\n            return a;\n        }\n    }\n    function appendText(end) {\n        if (end > start) {\n            var xt = source.substring(start, end).replace(/&#?\\w+;/g, entityReplacer);\n            locator && position(start);\n            domBuilder.characters(xt, 0, end - start);\n            start = end;\n        }\n    }\n    function position(p, m) {\n        while(p >= lineEnd && (m = linePattern.exec(source))){\n            lineStart = m.index;\n            lineEnd = lineStart + m[0].length;\n            locator.lineNumber++;\n        //console.log('line++:',locator,startPos,endPos)\n        }\n        locator.columnNumber = p - lineStart + 1;\n    }\n    var lineStart = 0;\n    var lineEnd = 0;\n    var linePattern = /.*(?:\\r\\n?|\\n)|.*$/g;\n    var locator = domBuilder.locator;\n    var parseStack = [\n        {\n            currentNSMap: defaultNSMapCopy\n        }\n    ];\n    var closeMap = {};\n    var start = 0;\n    while(true){\n        try {\n            var tagStart = source.indexOf(\"<\", start);\n            if (tagStart < 0) {\n                if (!source.substr(start).match(/^\\s*$/)) {\n                    var doc = domBuilder.doc;\n                    var text = doc.createTextNode(source.substr(start));\n                    doc.appendChild(text);\n                    domBuilder.currentElement = text;\n                }\n                return;\n            }\n            if (tagStart > start) appendText(tagStart);\n            switch(source.charAt(tagStart + 1)){\n                case \"/\":\n                    var end = source.indexOf(\">\", tagStart + 3);\n                    var tagName = source.substring(tagStart + 2, end).replace(/[ \\t\\n\\r]+$/g, \"\");\n                    var config = parseStack.pop();\n                    if (end < 0) {\n                        tagName = source.substring(tagStart + 2).replace(/[\\s<].*/, \"\");\n                        errorHandler.error(\"end tag name: \" + tagName + \" is not complete:\" + config.tagName);\n                        end = tagStart + 1 + tagName.length;\n                    } else if (tagName.match(/\\s</)) {\n                        tagName = tagName.replace(/[\\s<].*/, \"\");\n                        errorHandler.error(\"end tag name: \" + tagName + \" maybe not complete\");\n                        end = tagStart + 1 + tagName.length;\n                    }\n                    var localNSMap = config.localNSMap;\n                    var endMatch = config.tagName == tagName;\n                    var endIgnoreCaseMach = endMatch || config.tagName && config.tagName.toLowerCase() == tagName.toLowerCase();\n                    if (endIgnoreCaseMach) {\n                        domBuilder.endElement(config.uri, config.localName, tagName);\n                        if (localNSMap) {\n                            for(var prefix in localNSMap)if (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) domBuilder.endPrefixMapping(prefix);\n                        }\n                        if (!endMatch) errorHandler.fatalError(\"end tag name: \" + tagName + \" is not match the current start tagName:\" + config.tagName); // No known test case\n                    } else parseStack.push(config);\n                    end++;\n                    break;\n                // end elment\n                case \"?\":\n                    locator && position(tagStart);\n                    end = $826ed0110d21e5cb$var$parseInstruction(source, tagStart, domBuilder);\n                    break;\n                case \"!\":\n                    locator && position(tagStart);\n                    end = $826ed0110d21e5cb$var$parseDCC(source, tagStart, domBuilder, errorHandler);\n                    break;\n                default:\n                    locator && position(tagStart);\n                    var el = new $826ed0110d21e5cb$var$ElementAttributes();\n                    var currentNSMap = parseStack[parseStack.length - 1].currentNSMap;\n                    //elStartEnd\n                    var end = $826ed0110d21e5cb$var$parseElementStartPart(source, tagStart, el, currentNSMap, entityReplacer, errorHandler);\n                    var len = el.length;\n                    if (!el.closed && $826ed0110d21e5cb$var$fixSelfClosed(source, end, el.tagName, closeMap)) {\n                        el.closed = true;\n                        if (!entityMap.nbsp) errorHandler.warning(\"unclosed xml attribute\");\n                    }\n                    if (locator && len) {\n                        var locator2 = $826ed0110d21e5cb$var$copyLocator(locator, {});\n                        //try{//attribute position fixed\n                        for(var i = 0; i < len; i++){\n                            var a = el[i];\n                            position(a.offset);\n                            a.locator = $826ed0110d21e5cb$var$copyLocator(locator, {});\n                        }\n                        domBuilder.locator = locator2;\n                        if ($826ed0110d21e5cb$var$appendElement(el, domBuilder, currentNSMap)) parseStack.push(el);\n                        domBuilder.locator = locator;\n                    } else if ($826ed0110d21e5cb$var$appendElement(el, domBuilder, currentNSMap)) parseStack.push(el);\n                    if ($826ed0110d21e5cb$require$NAMESPACE.isHTML(el.uri) && !el.closed) end = $826ed0110d21e5cb$var$parseHtmlSpecialContent(source, end, el.tagName, entityReplacer, domBuilder);\n                    else end++;\n            }\n        } catch (e) {\n            if (e instanceof $826ed0110d21e5cb$var$ParseError) throw e;\n            errorHandler.error(\"element parse error: \" + e);\n            end = -1;\n        }\n        if (end > start) start = end;\n        else //TODO: 这里有可能sax回退，有位置错误风险\n        appendText(Math.max(tagStart, start) + 1);\n    }\n}\nfunction $826ed0110d21e5cb$var$copyLocator(f, t) {\n    t.lineNumber = f.lineNumber;\n    t.columnNumber = f.columnNumber;\n    return t;\n}\n/**\n * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\n * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\n */ function $826ed0110d21e5cb$var$parseElementStartPart(source, start, el, currentNSMap, entityReplacer, errorHandler) {\n    /**\n\t * @param {string} qname\n\t * @param {string} value\n\t * @param {number} startIndex\n\t */ function addAttribute(qname, value, startIndex) {\n        if (el.attributeNames.hasOwnProperty(qname)) errorHandler.fatalError(\"Attribute \" + qname + \" redefined\");\n        el.addValue(qname, // @see https://www.w3.org/TR/xml/#AVNormalize\n        // since the xmldom sax parser does not \"interpret\" DTD the following is not implemented:\n        // - recursive replacement of (DTD) entity references\n        // - trimming and collapsing multiple spaces into a single one for attributes that are not of type CDATA\n        value.replace(/[\\t\\n\\r]/g, \" \").replace(/&#?\\w+;/g, entityReplacer), startIndex);\n    }\n    var attrName;\n    var value;\n    var p = ++start;\n    var s = $826ed0110d21e5cb$var$S_TAG; //status\n    while(true){\n        var c = source.charAt(p);\n        switch(c){\n            case \"=\":\n                if (s === $826ed0110d21e5cb$var$S_ATTR) {\n                    attrName = source.slice(start, p);\n                    s = $826ed0110d21e5cb$var$S_EQ;\n                } else if (s === $826ed0110d21e5cb$var$S_ATTR_SPACE) s = $826ed0110d21e5cb$var$S_EQ;\n                else //fatalError: equal must after attrName or space after attrName\n                throw new Error(\"attribute equal must after attrName\"); // No known test case\n                break;\n            case \"'\":\n            case '\"':\n                if (s === $826ed0110d21e5cb$var$S_EQ || s === $826ed0110d21e5cb$var$S_ATTR //|| s == S_ATTR_SPACE\n                ) {\n                    if (s === $826ed0110d21e5cb$var$S_ATTR) {\n                        errorHandler.warning('attribute value must after \"=\"');\n                        attrName = source.slice(start, p);\n                    }\n                    start = p + 1;\n                    p = source.indexOf(c, start);\n                    if (p > 0) {\n                        value = source.slice(start, p);\n                        addAttribute(attrName, value, start - 1);\n                        s = $826ed0110d21e5cb$var$S_ATTR_END;\n                    } else //fatalError: no end quot match\n                    throw new Error(\"attribute value no end '\" + c + \"' match\");\n                } else if (s == $826ed0110d21e5cb$var$S_ATTR_NOQUOT_VALUE) {\n                    value = source.slice(start, p);\n                    addAttribute(attrName, value, start);\n                    errorHandler.warning('attribute \"' + attrName + '\" missed start quot(' + c + \")!!\");\n                    start = p + 1;\n                    s = $826ed0110d21e5cb$var$S_ATTR_END;\n                } else //fatalError: no equal before\n                throw new Error('attribute value must after \"=\"'); // No known test case\n                break;\n            case \"/\":\n                switch(s){\n                    case $826ed0110d21e5cb$var$S_TAG:\n                        el.setTagName(source.slice(start, p));\n                    case $826ed0110d21e5cb$var$S_ATTR_END:\n                    case $826ed0110d21e5cb$var$S_TAG_SPACE:\n                    case $826ed0110d21e5cb$var$S_TAG_CLOSE:\n                        s = $826ed0110d21e5cb$var$S_TAG_CLOSE;\n                        el.closed = true;\n                    case $826ed0110d21e5cb$var$S_ATTR_NOQUOT_VALUE:\n                    case $826ed0110d21e5cb$var$S_ATTR:\n                        break;\n                    case $826ed0110d21e5cb$var$S_ATTR_SPACE:\n                        el.closed = true;\n                        break;\n                    //case S_EQ:\n                    default:\n                        throw new Error(\"attribute invalid close char('/')\") // No known test case\n                        ;\n                }\n                break;\n            case \"\":\n                errorHandler.error(\"unexpected end of input\");\n                if (s == $826ed0110d21e5cb$var$S_TAG) el.setTagName(source.slice(start, p));\n                return p;\n            case \">\":\n                switch(s){\n                    case $826ed0110d21e5cb$var$S_TAG:\n                        el.setTagName(source.slice(start, p));\n                    case $826ed0110d21e5cb$var$S_ATTR_END:\n                    case $826ed0110d21e5cb$var$S_TAG_SPACE:\n                    case $826ed0110d21e5cb$var$S_TAG_CLOSE:\n                        break; //normal\n                    case $826ed0110d21e5cb$var$S_ATTR_NOQUOT_VALUE:\n                    case $826ed0110d21e5cb$var$S_ATTR:\n                        value = source.slice(start, p);\n                        if (value.slice(-1) === \"/\") {\n                            el.closed = true;\n                            value = value.slice(0, -1);\n                        }\n                    case $826ed0110d21e5cb$var$S_ATTR_SPACE:\n                        if (s === $826ed0110d21e5cb$var$S_ATTR_SPACE) value = attrName;\n                        if (s == $826ed0110d21e5cb$var$S_ATTR_NOQUOT_VALUE) {\n                            errorHandler.warning('attribute \"' + value + '\" missed quot(\")!');\n                            addAttribute(attrName, value, start);\n                        } else {\n                            if (!$826ed0110d21e5cb$require$NAMESPACE.isHTML(currentNSMap[\"\"]) || !value.match(/^(?:disabled|checked|selected)$/i)) errorHandler.warning('attribute \"' + value + '\" missed value!! \"' + value + '\" instead!!');\n                            addAttribute(value, value, start);\n                        }\n                        break;\n                    case $826ed0110d21e5cb$var$S_EQ:\n                        throw new Error(\"attribute value missed!!\");\n                }\n                //\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\n                return p;\n            /*xml space '\\x20' | #x9 | #xD | #xA; */ case \"\\x80\":\n                c = \" \";\n            default:\n                if (c <= \" \") switch(s){\n                    case $826ed0110d21e5cb$var$S_TAG:\n                        el.setTagName(source.slice(start, p)); //tagName\n                        s = $826ed0110d21e5cb$var$S_TAG_SPACE;\n                        break;\n                    case $826ed0110d21e5cb$var$S_ATTR:\n                        attrName = source.slice(start, p);\n                        s = $826ed0110d21e5cb$var$S_ATTR_SPACE;\n                        break;\n                    case $826ed0110d21e5cb$var$S_ATTR_NOQUOT_VALUE:\n                        var value = source.slice(start, p);\n                        errorHandler.warning('attribute \"' + value + '\" missed quot(\")!!');\n                        addAttribute(attrName, value, start);\n                    case $826ed0110d21e5cb$var$S_ATTR_END:\n                        s = $826ed0110d21e5cb$var$S_TAG_SPACE;\n                        break;\n                }\n                else //S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n                //S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n                switch(s){\n                    //case S_TAG:void();break;\n                    //case S_ATTR:void();break;\n                    //case S_ATTR_NOQUOT_VALUE:void();break;\n                    case $826ed0110d21e5cb$var$S_ATTR_SPACE:\n                        var tagName = el.tagName;\n                        if (!$826ed0110d21e5cb$require$NAMESPACE.isHTML(currentNSMap[\"\"]) || !attrName.match(/^(?:disabled|checked|selected)$/i)) errorHandler.warning('attribute \"' + attrName + '\" missed value!! \"' + attrName + '\" instead2!!');\n                        addAttribute(attrName, attrName, start);\n                        start = p;\n                        s = $826ed0110d21e5cb$var$S_ATTR;\n                        break;\n                    case $826ed0110d21e5cb$var$S_ATTR_END:\n                        errorHandler.warning('attribute space is required\"' + attrName + '\"!!');\n                    case $826ed0110d21e5cb$var$S_TAG_SPACE:\n                        s = $826ed0110d21e5cb$var$S_ATTR;\n                        start = p;\n                        break;\n                    case $826ed0110d21e5cb$var$S_EQ:\n                        s = $826ed0110d21e5cb$var$S_ATTR_NOQUOT_VALUE;\n                        start = p;\n                        break;\n                    case $826ed0110d21e5cb$var$S_TAG_CLOSE:\n                        throw new Error(\"elements closed character '/' and '>' must be connected to\");\n                }\n        } //end outer switch\n        //console.log('p++',p)\n        p++;\n    }\n}\n/**\n * @return true if has new namespace define\n */ function $826ed0110d21e5cb$var$appendElement(el, domBuilder, currentNSMap) {\n    var tagName = el.tagName;\n    var localNSMap = null;\n    //var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n    var i = el.length;\n    while(i--){\n        var a = el[i];\n        var qName = a.qName;\n        var value = a.value;\n        var nsp = qName.indexOf(\":\");\n        if (nsp > 0) {\n            var prefix = a.prefix = qName.slice(0, nsp);\n            var localName = qName.slice(nsp + 1);\n            var nsPrefix = prefix === \"xmlns\" && localName;\n        } else {\n            localName = qName;\n            prefix = null;\n            nsPrefix = qName === \"xmlns\" && \"\";\n        }\n        //can not set prefix,because prefix !== ''\n        a.localName = localName;\n        //prefix == null for no ns prefix attribute\n        if (nsPrefix !== false) {\n            if (localNSMap == null) {\n                localNSMap = {};\n                //console.log(currentNSMap,0)\n                $826ed0110d21e5cb$var$_copy(currentNSMap, currentNSMap = {});\n            //console.log(currentNSMap,1)\n            }\n            currentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\n            a.uri = $826ed0110d21e5cb$require$NAMESPACE.XMLNS;\n            domBuilder.startPrefixMapping(nsPrefix, value);\n        }\n    }\n    var i = el.length;\n    while(i--){\n        a = el[i];\n        var prefix = a.prefix;\n        if (prefix) {\n            if (prefix === \"xml\") a.uri = $826ed0110d21e5cb$require$NAMESPACE.XML;\n            if (prefix !== \"xmlns\") a.uri = currentNSMap[prefix || \"\"];\n        }\n    }\n    var nsp = tagName.indexOf(\":\");\n    if (nsp > 0) {\n        prefix = el.prefix = tagName.slice(0, nsp);\n        localName = el.localName = tagName.slice(nsp + 1);\n    } else {\n        prefix = null; //important!!\n        localName = el.localName = tagName;\n    }\n    //no prefix element has default namespace\n    var ns = el.uri = currentNSMap[prefix || \"\"];\n    domBuilder.startElement(ns, localName, tagName, el);\n    //endPrefixMapping and startPrefixMapping have not any help for dom builder\n    //localNSMap = null\n    if (el.closed) {\n        domBuilder.endElement(ns, localName, tagName);\n        if (localNSMap) {\n            for(prefix in localNSMap)if (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) domBuilder.endPrefixMapping(prefix);\n        }\n    } else {\n        el.currentNSMap = currentNSMap;\n        el.localNSMap = localNSMap;\n        //parseStack.push(el);\n        return true;\n    }\n}\nfunction $826ed0110d21e5cb$var$parseHtmlSpecialContent(source, elStartEnd, tagName, entityReplacer, domBuilder) {\n    if (/^(?:script|textarea)$/i.test(tagName)) {\n        var elEndStart = source.indexOf(\"</\" + tagName + \">\", elStartEnd);\n        var text = source.substring(elStartEnd + 1, elEndStart);\n        if (/[&<]/.test(text)) {\n            if (/^script$/i.test(tagName)) {\n                //if(!/\\]\\]>/.test(text)){\n                //lexHandler.startCDATA();\n                domBuilder.characters(text, 0, text.length);\n                //lexHandler.endCDATA();\n                return elEndStart;\n            //}\n            } //}else{//text area\n            text = text.replace(/&#?\\w+;/g, entityReplacer);\n            domBuilder.characters(text, 0, text.length);\n            return elEndStart;\n        //}\n        }\n    }\n    return elStartEnd + 1;\n}\nfunction $826ed0110d21e5cb$var$fixSelfClosed(source, elStartEnd, tagName, closeMap) {\n    //if(tagName in closeMap){\n    var pos = closeMap[tagName];\n    if (pos == null) {\n        //console.log(tagName)\n        pos = source.lastIndexOf(\"</\" + tagName + \">\");\n        if (pos < elStartEnd) pos = source.lastIndexOf(\"</\" + tagName);\n        closeMap[tagName] = pos;\n    }\n    return pos < elStartEnd;\n//}\n}\nfunction $826ed0110d21e5cb$var$_copy(source, target) {\n    for(var n in source)if (Object.prototype.hasOwnProperty.call(source, n)) target[n] = source[n];\n}\nfunction $826ed0110d21e5cb$var$parseDCC(source, start, domBuilder, errorHandler) {\n    var next = source.charAt(start + 2);\n    switch(next){\n        case \"-\":\n            if (source.charAt(start + 3) === \"-\") {\n                var end = source.indexOf(\"-->\", start + 4);\n                //append comment source.substring(4,end)//<!--\n                if (end > start) {\n                    domBuilder.comment(source, start + 4, end - start - 4);\n                    return end + 3;\n                } else {\n                    errorHandler.error(\"Unclosed comment\");\n                    return -1;\n                }\n            } else //error\n            return -1;\n        default:\n            if (source.substr(start + 3, 6) == \"CDATA[\") {\n                var end = source.indexOf(\"]]>\", start + 9);\n                domBuilder.startCDATA();\n                domBuilder.characters(source, start + 9, end - start - 9);\n                domBuilder.endCDATA();\n                return end + 3;\n            }\n            //<!DOCTYPE\n            //startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId)\n            var matchs = $826ed0110d21e5cb$var$split(source, start);\n            var len = matchs.length;\n            if (len > 1 && /!doctype/i.test(matchs[0][0])) {\n                var name = matchs[1][0];\n                var pubid = false;\n                var sysid = false;\n                if (len > 3) {\n                    if (/^public$/i.test(matchs[2][0])) {\n                        pubid = matchs[3][0];\n                        sysid = len > 4 && matchs[4][0];\n                    } else if (/^system$/i.test(matchs[2][0])) sysid = matchs[3][0];\n                }\n                var lastMatch = matchs[len - 1];\n                domBuilder.startDTD(name, pubid, sysid);\n                domBuilder.endDTD();\n                return lastMatch.index + lastMatch[0].length;\n            }\n    }\n    return -1;\n}\nfunction $826ed0110d21e5cb$var$parseInstruction(source, start, domBuilder) {\n    var end = source.indexOf(\"?>\", start);\n    if (end) {\n        var match = source.substring(start, end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\n        if (match) {\n            var len = match[0].length;\n            domBuilder.processingInstruction(match[1], match[2]);\n            return end + 2;\n        } else return -1;\n    }\n    return -1;\n}\nfunction $826ed0110d21e5cb$var$ElementAttributes() {\n    this.attributeNames = {};\n}\n$826ed0110d21e5cb$var$ElementAttributes.prototype = {\n    setTagName: function(tagName) {\n        if (!$826ed0110d21e5cb$var$tagNamePattern.test(tagName)) throw new Error(\"invalid tagName:\" + tagName);\n        this.tagName = tagName;\n    },\n    addValue: function(qName, value, offset) {\n        if (!$826ed0110d21e5cb$var$tagNamePattern.test(qName)) throw new Error(\"invalid attribute:\" + qName);\n        this.attributeNames[qName] = this.length;\n        this[this.length++] = {\n            qName: qName,\n            value: value,\n            offset: offset\n        };\n    },\n    length: 0,\n    getLocalName: function(i) {\n        return this[i].localName;\n    },\n    getLocator: function(i) {\n        return this[i].locator;\n    },\n    getQName: function(i) {\n        return this[i].qName;\n    },\n    getURI: function(i) {\n        return this[i].uri;\n    },\n    getValue: function(i) {\n        return this[i].value;\n    }\n};\nfunction $826ed0110d21e5cb$var$split(source, start) {\n    var match;\n    var buf = [];\n    var reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\n    reg.lastIndex = start;\n    reg.exec(source); //skip <\n    while(match = reg.exec(source)){\n        buf.push(match);\n        if (match[1]) return buf;\n    }\n}\n$826ed0110d21e5cb$export$ccbc9f9f018333e9 = $826ed0110d21e5cb$var$XMLReader;\n$826ed0110d21e5cb$export$f9c837a54db411d = $826ed0110d21e5cb$var$ParseError;\n\n});\n\n\n\n\nparcelRegister(\"iDF5K\", function(module, exports) {\n\n$parcel$export(module.exports, \"ValueDict\", () => $8603f6000d300c9d$export$eb6d03473e8f6fd);\n\nvar $jujKN = parcelRequire(\"jujKN\");\n\nvar $2pNoI = parcelRequire(\"2pNoI\");\n\nvar $hEhQD = parcelRequire(\"hEhQD\");\n\nvar $5wocU = parcelRequire(\"5wocU\");\n\nvar $41IcW = parcelRequire(\"41IcW\");\n\nvar $52A4d = parcelRequire(\"52A4d\");\n\nvar $cfC0L = parcelRequire(\"cfC0L\");\n\nvar $htfZz = parcelRequire(\"htfZz\");\n\nvar $iZNym = parcelRequire(\"iZNym\");\nlet $8603f6000d300c9d$var$childTagNames;\nclass $8603f6000d300c9d$export$eb6d03473e8f6fd extends (0, $hEhQD.Value) {\n    /**\n   * Value type.\n   */ static TYPE = \"dict\";\n    /**\n   * Tag names.\n   */ static TAG_NAMES = [\n        \"dict\"\n    ];\n    /**\n   * Child tag names.\n   *\n   * @returns Child tag names map.\n   */ // eslint-disable-next-line @typescript-eslint/naming-convention\n    static get CHILD_TAG_NAMES() {\n        if (!$8603f6000d300c9d$var$childTagNames) {\n            $8603f6000d300c9d$var$childTagNames = new Map();\n            for (const ValueType of [\n                (0, $5wocU.ValueArray),\n                (0, $41IcW.ValueBoolean),\n                (0, $52A4d.ValueData),\n                $8603f6000d300c9d$export$eb6d03473e8f6fd,\n                (0, $cfC0L.ValueInteger),\n                (0, $htfZz.ValueReal),\n                (0, $iZNym.ValueString)\n            ])for (const t of ValueType.TAG_NAMES)$8603f6000d300c9d$var$childTagNames.set(t, ValueType);\n        }\n        return $8603f6000d300c9d$var$childTagNames;\n    }\n    /**\n   * Value value.\n   */ value = new Map();\n    /**\n   * ValueDict constructor.\n   *\n   * @param value The value.\n   */ constructor(value = new Map()){\n        super();\n        this.value = value;\n    }\n    /**\n   * Dictionary size.\n   *\n   * @returns The size.\n   */ get size() {\n        return this.value.size;\n    }\n    /**\n   * Check if key exists.\n   *\n   * @param key Dictionary key.\n   * @returns The value or null.\n   */ has(key) {\n        return this.value.has(key);\n    }\n    /**\n   * Get value for key or null if does not exist.\n   *\n   * @param key Dictionary key.\n   * @returns The value or null.\n   */ get(key) {\n        return this.value.get(key) || null;\n    }\n    /**\n   * Get value for key or throw.\n   *\n   * @param key Dictionary key.\n   * @returns The value.\n   */ getValue(key) {\n        const r = this.get(key);\n        if (!r) throw new Error(`Key is null: ${key}`);\n        return r;\n    }\n    /**\n   * Set value for key.\n   *\n   * @param key Dictionary key.\n   * @param value Value object.\n   */ set(key, value) {\n        this.value.set(key, value);\n    }\n    /**\n   * Delete value for key.\n   *\n   * @param key Dictionary key.\n   */ delete(key) {\n        this.value.delete(key);\n    }\n    /**\n   * Clear dictionary.\n   */ clear() {\n        this.value.clear();\n    }\n    /**\n   * @inheritdoc\n   */ fromXmlElement(element) {\n        (0, $2pNoI.assertXmlTagName)(element, \"dict\");\n        const children = (0, $2pNoI.xmlElementChildElements)(element);\n        const l = children.length;\n        if (l % 2) throw new Error(`Uneven number of child elements: ${l}`);\n        const v = new Map();\n        for(let i = 0; i < l; i += 2){\n            const eK = children[i];\n            const eV = children[i + 1];\n            (0, $2pNoI.assertXmlTagName)(eK, \"key\");\n            const key = (0, $2pNoI.xmlElementText)(eK)?.nodeValue || \"\";\n            const value = this.childFromXmlElement(eV);\n            v.set(key, value);\n        }\n        this.value = v;\n    }\n    /**\n   * Decode child element from XML element.\n   *\n   * @param element XML element.\n   * @returns Value element.\n   */ childFromXmlElement(element) {\n        const { tagName: tagName } = element;\n        const { CHILD_TAG_NAMES: CHILD_TAG_NAMES } = this.constructor;\n        const Value = CHILD_TAG_NAMES.get(tagName) || null;\n        if (!Value) throw new Error(`Unknown element type: ${tagName}`);\n        const r = new Value();\n        r.fromXmlElement(element);\n        return r;\n    }\n    /**\n   * @inheritdoc\n   */ toXml(options = null, depth = 0) {\n        const i = options?.indentString ?? (0, $jujKN.INDENT_STRING);\n        const n = options?.newlineString ?? (0, $jujKN.NEWLINE_STRING);\n        const p = i.repeat(depth);\n        const v = this.value;\n        if (!v.size) return `${p}<dict/>`;\n        const p2 = i.repeat(depth + 1);\n        let r = `${p}<dict>`;\n        for (const [key, val] of v){\n            const e = key.replaceAll(\"&\", \"&amp;\").replaceAll(\"<\", \"&lt;\").replaceAll(\">\", \"&gt;\");\n            r += `${n}${p2}<key>${e}</key>${n}${val.toXml(options, depth + 1)}`;\n        }\n        r += `${n}${p}</dict>`;\n        return r;\n    }\n}\n\n});\nparcelRegister(\"hEhQD\", function(module, exports) {\n\n$parcel$export(module.exports, \"Value\", () => $0c6ae379152bcc8a$export$4c8d1a57a761ef94);\n\nvar $2pNoI = parcelRequire(\"2pNoI\");\nclass $0c6ae379152bcc8a$export$4c8d1a57a761ef94 {\n    /**\n   * Value type.\n   */ /**\n   * Tag names.\n   */ /**\n   * Value constructor.\n   */ constructor(){}\n    /**\n   * Value type.\n   *\n   * @returns Type string.\n   */ get type() {\n        return this.constructor.TYPE;\n    }\n    /**\n   * Cast to specific type or null.\n   *\n   * @param Type Type constructor.\n   * @returns This object or null.\n   */ castTo(Type) {\n        return this.type === Type.TYPE ? this : null;\n    }\n    /**\n   * Cast to specific type or throw.\n   *\n   * @param Type Type constructor.\n   * @returns This object.\n   */ castAs(Type) {\n        const casted = this.castTo(Type);\n        if (!casted) throw new Error(`Cannot cast type '${this.type}' to '${Type.TYPE}'`);\n        return casted;\n    }\n    /**\n   * Decode document from string.\n   *\n   * @param xml XML string.\n   */ fromXml(xml) {\n        const { documentElement: documentElement } = (0, $2pNoI.xmlDecode)(xml);\n        this.fromXmlElement(documentElement);\n    }\n}\n\n});\n\nparcelRegister(\"5wocU\", function(module, exports) {\n\n$parcel$export(module.exports, \"ValueArray\", () => $d7e2e7cb119b7bcd$export$efd6342825622772);\n\nvar $jujKN = parcelRequire(\"jujKN\");\n\nvar $2pNoI = parcelRequire(\"2pNoI\");\n\nvar $hEhQD = parcelRequire(\"hEhQD\");\n\nvar $41IcW = parcelRequire(\"41IcW\");\n\nvar $52A4d = parcelRequire(\"52A4d\");\n\nvar $iDF5K = parcelRequire(\"iDF5K\");\n\nvar $cfC0L = parcelRequire(\"cfC0L\");\n\nvar $htfZz = parcelRequire(\"htfZz\");\n\nvar $iZNym = parcelRequire(\"iZNym\");\nlet $d7e2e7cb119b7bcd$var$childTagNames;\nclass $d7e2e7cb119b7bcd$export$efd6342825622772 extends (0, $hEhQD.Value) {\n    /**\n   * Value type.\n   */ static TYPE = \"array\";\n    /**\n   * Tag names.\n   */ static TAG_NAMES = [\n        \"array\"\n    ];\n    /**\n   * Child tag names.\n   *\n   * @returns Child tag names map.\n   */ // eslint-disable-next-line @typescript-eslint/naming-convention\n    static get CHILD_TAG_NAMES() {\n        if (!$d7e2e7cb119b7bcd$var$childTagNames) {\n            $d7e2e7cb119b7bcd$var$childTagNames = new Map();\n            for (const ValueType of [\n                $d7e2e7cb119b7bcd$export$efd6342825622772,\n                (0, $41IcW.ValueBoolean),\n                (0, $52A4d.ValueData),\n                (0, $iDF5K.ValueDict),\n                (0, $cfC0L.ValueInteger),\n                (0, $htfZz.ValueReal),\n                (0, $iZNym.ValueString)\n            ])for (const t of ValueType.TAG_NAMES)$d7e2e7cb119b7bcd$var$childTagNames.set(t, ValueType);\n        }\n        return $d7e2e7cb119b7bcd$var$childTagNames;\n    }\n    /**\n   * Value value.\n   */ value = [];\n    /**\n   * ValueArray constructor.\n   *\n   * @param value The value.\n   */ constructor(value = []){\n        super();\n        this.value = value;\n    }\n    /**\n   * Array length.\n   *\n   * @returns The length.\n   */ get length() {\n        return this.value.length;\n    }\n    /**\n   * Get value at index or null if out of bounds.\n   *\n   * @param index Array index.\n   * @returns The value or null.\n   */ get(index) {\n        const { value: value } = this;\n        return index < this.length ? value[index] : null;\n    }\n    /**\n   * Get value at index or throw.\n   *\n   * @param index Array index.\n   * @returns The value.\n   */ getValue(index) {\n        const r = this.get(index);\n        if (!r) throw new Error(`Index out of bounds: ${index}`);\n        return r;\n    }\n    /**\n   * Set value at index.\n   *\n   * @param index Array index.\n   * @param value Value object.\n   */ set(index, value) {\n        this.value[index] = value;\n    }\n    /**\n   * Push values onto array.\n   *\n   * @param values Value objects.\n   */ push(...values) {\n        this.value.push(...values);\n    }\n    /**\n   * Pop value off array or null.\n   *\n   * @returns Value object or null.\n   */ pop() {\n        return this.value.pop() || null;\n    }\n    /**\n   * Pop value off array or throw.\n   *\n   * @returns Value object or null.\n   */ popValue() {\n        const r = this.pop();\n        if (!r) throw new Error(\"Cannot pop empty array\");\n        return r;\n    }\n    /**\n   * Shift value off array or null.\n   *\n   * @returns Value object or null.\n   */ shift() {\n        return this.value.shift() || null;\n    }\n    /**\n   * Pop value off array or throw.\n   *\n   * @returns Value object or null.\n   */ shiftValue() {\n        const r = this.shift();\n        if (!r) throw new Error(\"Cannot shift empty array\");\n        return r;\n    }\n    /**\n   * @inheritdoc\n   */ fromXmlElement(element) {\n        (0, $2pNoI.assertXmlTagName)(element, \"array\");\n        const children = (0, $2pNoI.xmlElementChildElements)(element);\n        this.value = children.map((el)=>this.childFromXmlElement(el));\n    }\n    /**\n   * Decode child element from XML element.\n   *\n   * @param element XML element.\n   * @returns Value element.\n   */ childFromXmlElement(element) {\n        const { tagName: tagName } = element;\n        const { CHILD_TAG_NAMES: CHILD_TAG_NAMES } = this.constructor;\n        const Value = CHILD_TAG_NAMES.get(tagName) || null;\n        if (!Value) throw new Error(`Unknown element type: ${tagName}`);\n        const r = new Value();\n        r.fromXmlElement(element);\n        return r;\n    }\n    /**\n   * @inheritdoc\n   */ toXml(options = null, depth = 0) {\n        const n = options?.newlineString ?? (0, $jujKN.NEWLINE_STRING);\n        const p = (options?.indentString ?? (0, $jujKN.INDENT_STRING)).repeat(depth);\n        const v = this.value;\n        if (!v.length) return `${p}<array/>`;\n        let r = `${p}<array>`;\n        for (const el of v)r += `${n}${el.toXml(options, depth + 1)}`;\n        r += `${n}${p}</array>`;\n        return r;\n    }\n}\n\n});\nparcelRegister(\"41IcW\", function(module, exports) {\n\n$parcel$export(module.exports, \"ValueBoolean\", () => $672fe79a0082f581$export$70ba2e51e03d3dca);\n\nvar $jujKN = parcelRequire(\"jujKN\");\n\nvar $2pNoI = parcelRequire(\"2pNoI\");\n\nvar $hEhQD = parcelRequire(\"hEhQD\");\nclass $672fe79a0082f581$export$70ba2e51e03d3dca extends (0, $hEhQD.Value) {\n    /**\n   * Value type.\n   */ static TYPE = \"boolean\";\n    /**\n   * Tag names.\n   */ static TAG_NAMES = [\n        \"true\",\n        \"false\"\n    ];\n    /**\n   * Value value.\n   */ value = false;\n    /**\n   * ValueBoolean constructor.\n   *\n   * @param value The value.\n   */ constructor(value = false){\n        super();\n        this.value = value;\n    }\n    /**\n   * @inheritdoc\n   */ fromXmlElement(element) {\n        (0, $2pNoI.assertNoXmlElementChildNodes)(element);\n        switch(element.tagName){\n            case \"true\":\n                this.value = true;\n                return;\n            case \"false\":\n                this.value = false;\n                return;\n            default:\n                throw (0, $2pNoI.assertXmlTagName)(element, \"\");\n        }\n    }\n    /**\n   * @inheritdoc\n   */ toXml(options = null, depth = 0) {\n        const p = (options?.indentString ?? (0, $jujKN.INDENT_STRING)).repeat(depth);\n        return this.value ? `${p}<true/>` : `${p}<false/>`;\n    }\n}\n\n});\n\nparcelRegister(\"52A4d\", function(module, exports) {\n\n$parcel$export(module.exports, \"ValueData\", () => $a2d927542a51ce26$export$b52eba92ad5c7245);\n\nvar $jujKN = parcelRequire(\"jujKN\");\n\nvar $2pNoI = parcelRequire(\"2pNoI\");\n\nvar $hEhQD = parcelRequire(\"hEhQD\");\nclass $a2d927542a51ce26$export$b52eba92ad5c7245 extends (0, $hEhQD.Value) {\n    /**\n   * Value type.\n   */ static TYPE = \"data\";\n    /**\n   * Tag names.\n   */ static TAG_NAMES = [\n        \"data\"\n    ];\n    /**\n   * Value value.\n   */ /**\n   * ValueData constructor.\n   *\n   * @param value The value.\n   */ constructor(value = new Uint8Array(0)){\n        super();\n        this.value = value;\n    }\n    /**\n   * @inheritdoc\n   */ fromXmlElement(element) {\n        (0, $2pNoI.assertXmlTagName)(element, \"data\");\n        const text = (0, $2pNoI.xmlElementText)(element)?.nodeValue || \"\";\n        this.value = (0, $2pNoI.base64Decode)(text);\n    }\n    /**\n   * @inheritdoc\n   */ toXml(options = null, depth = 0) {\n        const n = options?.newlineString ?? (0, $jujKN.NEWLINE_STRING);\n        const c = options?.dataColumns ?? (0, $jujKN.DATA_COLUMNS);\n        const p = (options?.indentString ?? (0, $jujKN.INDENT_STRING)).repeat(depth);\n        let r = `${p}<data>`;\n        if (c > 0) for(let s = (0, $2pNoI.base64Encode)(this.value); s; s = s.slice(c))r += `${n}${p}${s.slice(0, c)}`;\n        else r += `${n}${p}${(0, $2pNoI.base64Encode)(this.value)}`;\n        r += `${n}${p}</data>`;\n        return r;\n    }\n}\n\n});\n\nparcelRegister(\"cfC0L\", function(module, exports) {\n\n$parcel$export(module.exports, \"ValueInteger\", () => $b0f8580fae03c70d$export$28790b87716bcc55);\n\nvar $jujKN = parcelRequire(\"jujKN\");\n\nvar $2pNoI = parcelRequire(\"2pNoI\");\n\nvar $hEhQD = parcelRequire(\"hEhQD\");\nconst $b0f8580fae03c70d$var$MAX_NUM = 0x1fffffffffffff;\n/**\n * Assert number is integer.\n *\n * @param value Number value.\n */ function $b0f8580fae03c70d$var$assertInteger(value) {\n    if (typeof value === \"number\" && !Number.isInteger(value)) // eslint-disable-next-line unicorn/prefer-type-error\n    throw new Error(`Value not an integer: ${value}`);\n}\nclass $b0f8580fae03c70d$export$28790b87716bcc55 extends (0, $hEhQD.Value) {\n    /**\n   * Value type.\n   */ static TYPE = \"integer\";\n    /**\n   * Tag names.\n   */ static TAG_NAMES = [\n        \"integer\"\n    ];\n    /**\n   * Value value.\n   */ value = 0;\n    /**\n   * ValueInteger constructor.\n   *\n   * @param value The value.\n   */ constructor(value = 0){\n        super();\n        $b0f8580fae03c70d$var$assertInteger(value);\n        this.value = value;\n    }\n    /**\n   * Get value as BigInt.\n   *\n   * @returns Value as a BigInt.\n   */ asBigInt() {\n        return BigInt(this.value);\n    }\n    /**\n   * Get value as Number, possibly losing some precision.\n   *\n   * @returns Value as a Number.\n   */ asNumber() {\n        return Number(this.value);\n    }\n    /**\n   * @inheritdoc\n   */ fromXmlElement(element) {\n        (0, $2pNoI.assertXmlTagName)(element, \"integer\");\n        const text = (0, $2pNoI.xmlElementText)(element)?.nodeValue || \"\";\n        if (!/^[+-]?\\d+$/.test(text)) throw new Error(`Invalid integer data: ${text}`);\n        const num = +text;\n        this.value = num > $b0f8580fae03c70d$var$MAX_NUM || num < -$b0f8580fae03c70d$var$MAX_NUM ? BigInt(text) : num;\n    }\n    /**\n   * @inheritdoc\n   */ toXml(options = null, depth = 0) {\n        const p = (options?.indentString ?? (0, $jujKN.INDENT_STRING)).repeat(depth);\n        const v = this.value;\n        $b0f8580fae03c70d$var$assertInteger(v);\n        return `${p}<integer>${v}</integer>`;\n    }\n}\n\n});\n\nparcelRegister(\"htfZz\", function(module, exports) {\n\n$parcel$export(module.exports, \"ValueReal\", () => $d7d6885bd521d3ea$export$7870216e9baa6b53);\n\nvar $jujKN = parcelRequire(\"jujKN\");\n\nvar $2pNoI = parcelRequire(\"2pNoI\");\n\nvar $hEhQD = parcelRequire(\"hEhQD\");\nclass $d7d6885bd521d3ea$export$7870216e9baa6b53 extends (0, $hEhQD.Value) {\n    /**\n   * Value type.\n   */ static TYPE = \"real\";\n    /**\n   * Tag names.\n   */ static TAG_NAMES = [\n        \"real\"\n    ];\n    /**\n   * Value value.\n   */ value = 0;\n    /**\n   * ValueReal constructor.\n   *\n   * @param value The value.\n   */ constructor(value = 0){\n        super();\n        this.value = value;\n    }\n    /**\n   * @inheritdoc\n   */ fromXmlElement(element) {\n        (0, $2pNoI.assertXmlTagName)(element, \"real\");\n        const text = (0, $2pNoI.xmlElementText)(element)?.nodeValue || \"\";\n        if (!/^[+-]?(\\d+|\\d*\\.\\d+)$/.test(text)) throw new Error(`Invalid real data: ${text}`);\n        this.value = +text;\n    }\n    /**\n   * @inheritdoc\n   */ toXml(options = null, depth = 0) {\n        const p = (options?.indentString ?? (0, $jujKN.INDENT_STRING)).repeat(depth);\n        const v = this.value;\n        return `${p}<real>${v}</real>`;\n    }\n}\n\n});\n\nparcelRegister(\"iZNym\", function(module, exports) {\n\n$parcel$export(module.exports, \"ValueString\", () => $ed8fb54d984acf63$export$a5a3bdd166fb5151);\n\nvar $jujKN = parcelRequire(\"jujKN\");\n\nvar $2pNoI = parcelRequire(\"2pNoI\");\n\nvar $hEhQD = parcelRequire(\"hEhQD\");\nclass $ed8fb54d984acf63$export$a5a3bdd166fb5151 extends (0, $hEhQD.Value) {\n    /**\n   * Value type.\n   */ static TYPE = \"string\";\n    /**\n   * Tag names.\n   */ static TAG_NAMES = [\n        \"string\"\n    ];\n    /**\n   * Value value.\n   */ value = \"\";\n    /**\n   * ValueString constructor.\n   *\n   * @param value The value.\n   */ constructor(value = \"\"){\n        super();\n        this.value = value;\n    }\n    /**\n   * @inheritdoc\n   */ fromXmlElement(element) {\n        (0, $2pNoI.assertXmlTagName)(element, \"string\");\n        this.value = (0, $2pNoI.xmlElementText)(element)?.nodeValue || \"\";\n    }\n    /**\n   * @inheritdoc\n   */ toXml(options = null, depth = 0) {\n        const p = (options?.indentString ?? (0, $jujKN.INDENT_STRING)).repeat(depth);\n        const e = this.value.replaceAll(\"&\", \"&amp;\").replaceAll(\"<\", \"&lt;\").replaceAll(\">\", \"&gt;\");\n        return `${p}<string>${e}</string>`;\n    }\n}\n\n});\n\n\n\n\n\nparcelRegister(\"23Sbd\", function(module, exports) {\n\n$parcel$export(module.exports, \"Entry\", () => $b7de880ec19b15be$export$3bb977b3ba9d3b59);\n$parcel$export(module.exports, \"Archive\", () => $b7de880ec19b15be$export$767c3cfd836ab901);\n/* eslint-disable max-classes-per-file */ \n\nvar $h63wN = parcelRequire(\"h63wN\");\n\n\n\n\nvar $2qKQL = parcelRequire(\"2qKQL\");\n\nvar $aYbnF = parcelRequire(\"aYbnF\");\nconst $b7de880ec19b15be$var$pipe = (0, $4U4iP$promisify)((0, $4U4iP$pipeline));\nclass $b7de880ec19b15be$export$3bb977b3ba9d3b59 {\n    /**\n   * Entry archive.\n   */ /**\n   * Entry type.\n   */ /**\n   * Entry path.\n   */ /**\n   * Entry path, raw.\n   */ /**\n   * Entry size.\n   */ /**\n   * Entry size, compressed.\n   */ /**\n   * Entry mode.\n   */ /**\n   * Entry uid.\n   */ /**\n   * Entry gid.\n   */ /**\n   * Entry uname.\n   */ /**\n   * Entry gname.\n   */ /**\n   * Entry atime.\n   */ /**\n   * Entry mtime.\n   */ /**\n   * Read data.\n   */ /**\n   * Read rsrc.\n   */ /**\n   * Read symlink.\n   */ /**\n   * Entry triggering.\n   */ _triggering = false;\n    /**\n   * Entry triggered.\n   */ _triggered = false;\n    /**\n   * Entry extracted.\n   */ _extracted = false;\n    /**\n   * Entry constructor.\n   *\n   * @param info Info object.\n   */ constructor(info){\n        this.archive = info.archive;\n        this.type = info.type;\n        this.pathRaw = info.pathRaw;\n        this.path = (0, $aYbnF.pathNormalize)(info.pathRaw);\n        this.size = info.size ?? null;\n        this.sizeComp = info.sizeComp ?? null;\n        this.mode = info.mode ?? null;\n        this.uid = info.uid ?? null;\n        this.gid = info.gid ?? null;\n        this.uname = info.uname ?? null;\n        this.gname = info.gname ?? null;\n        this.atime = info.atime ?? null;\n        this.mtime = info.mtime ?? null;\n        this._readData = info.readData ?? null;\n        this._readRsrc = info.readRsrc ?? null;\n        this._readSymlink = info.readSymlink ?? null;\n    }\n    /**\n   * This entry path includes named volume.\n   *\n   * @returns Entry has volume name in path.\n   */ get hasNamedVolume() {\n        return this.archive.hasNamedVolumes;\n    }\n    /**\n   * This entry volume name, or null.\n   *\n   * @returns Entry path volume name.\n   */ get volumeName() {\n        if (this.hasNamedVolume) {\n            const { path: path } = this;\n            return path.substring(0, path.indexOf(\"/\"));\n        }\n        return null;\n    }\n    /**\n   * This entry path without any possible volume name.\n   *\n   * @returns Entry path without the volume name.\n   */ get volumePath() {\n        const { path: path } = this;\n        if (this.hasNamedVolume) return path.substring(path.indexOf(\"/\") + 1);\n        return path;\n    }\n    /**\n   * Read entry as stream, or null if nothing to read.\n   * Consuming function will need to wait for stream to close.\n   *\n   * @returns Readable stream or null if nothing to read.\n   */ async stream() {\n        this._beginExtract();\n        return this._stream();\n    }\n    /**\n   * Read entire entry into a Buffer.\n   *\n   * @returns Buffer or null if nothing to be read.\n   */ async read() {\n        this._beginExtract();\n        const stream = await this._stream();\n        return stream ? (0, $aYbnF.streamToBuffer)(stream) : null;\n    }\n    /**\n   * Extract entry.\n   *\n   * @param path Extract path.\n   * @param options Extract options.\n   */ async extract(path, options = {}) {\n        this._beginExtract();\n        await this._extract(path, options);\n    }\n    /**\n   * Trigger on itterator function.\n   *\n   * @param itter Itterator function.\n   * @returns Return value.\n   */ async trigger(itter) {\n        let r;\n        if (this._triggered) throw new Error(\"Archive entry already triggered\");\n        this._triggered = this._triggering = true;\n        try {\n            r = await itter(this);\n        } finally{\n            this._triggering = false;\n        }\n        return r;\n    }\n    /**\n   * Run again after reading.\n   *\n   * @param path Extract path, relative.\n   * @param pathFull An optional full path to be used.\n   * @param options Extract options.\n   */ async setAttributes(path, pathFull = null, options = {}) {\n        const pathSet = pathFull === null ? path : pathFull;\n        const { ignorePermissions: ignorePermissions, ignoreTimes: ignoreTimes } = options;\n        const { type: type, mode: mode, atime: atime, mtime: mtime } = this;\n        let link = false;\n        switch(type){\n            case (0, $2qKQL.PathType).FILE:\n                break;\n            case (0, $2qKQL.PathType).RESOURCE_FORK:\n                break;\n            case (0, $2qKQL.PathType).DIRECTORY:\n                break;\n            case (0, $2qKQL.PathType).SYMLINK:\n                link = true;\n                break;\n            default:\n                throw new Error(`Unsupported path type: ${type}`);\n        }\n        const atimeSet = atime || mtime || null;\n        const mtimeSet = mtime || atime || null;\n        if (!ignorePermissions && mode !== null) {\n            const chmod = link ? (0, $aYbnF.fsLchmod) : (0, $aYbnF.fsChmod);\n            const modeSet = (0, $aYbnF.modePermissionBits)(mode);\n            await chmod(pathSet, modeSet);\n        }\n        if (!ignoreTimes && atimeSet && mtimeSet) {\n            const utimes = link ? (0, $aYbnF.fsLutimes) : (0, $aYbnF.fsUtimes);\n            await utimes(pathSet, atimeSet, mtimeSet);\n        }\n    }\n    /**\n   * Method to call before begining extraction.\n   * Throws error if extraction already started or entry not active.\n   */ _beginExtract() {\n        if (!this._triggering) throw new Error(\"Archive entry is not active\");\n        if (this._extracted) throw new Error(\"Archive entry can only be extracted once\");\n        this._extracted = true;\n    }\n    /**\n   * Create an extract error for path that exists.\n   *\n   * @param path Extract path.\n   * @returns Error object.\n   */ _errorExtractPathExists(path) {\n        return new Error(`Extract path already exists: ${path}`);\n    }\n    /**\n   * Create an extract error for a resource fork not going to a file.\n   *\n   * @param path Extract path.\n   * @returns Error object.\n   */ _errorNoResourceFork(path) {\n        return new Error(`Extract path for resource fork not a file: ${path}`);\n    }\n    /**\n   * Extract entry.\n   *\n   * @param path Extract path.\n   * @param options Extract options.\n   */ async _extract(path, options) {\n        this.archive.afterReadSetAttributesRemove(path);\n        const { type: type } = this;\n        switch(type){\n            case (0, $2qKQL.PathType).FILE:\n                await this._extractFile(path, options);\n                break;\n            case (0, $2qKQL.PathType).RESOURCE_FORK:\n                await this._extractResourceFork(path, options);\n                break;\n            case (0, $2qKQL.PathType).DIRECTORY:\n                await this._extractDirectory(path, options);\n                break;\n            case (0, $2qKQL.PathType).SYMLINK:\n                await this._extractSymlink(path, options);\n                break;\n            default:\n                throw new Error(`Unsupported path type: ${type}`);\n        }\n    }\n    /**\n   * Base function for extracting stream to a file.\n   *\n   * @param path Extract path.\n   * @param reader Reader function.\n   * @param options Extract options.\n   */ async _extractStreamToFile(path, reader, options) {\n        const { replace: replace } = options;\n        // Check if something exists at path, optionally removing.\n        const stat = await (0, $aYbnF.fsLstatExists)(path);\n        if (stat) {\n            // If replacing, then remove, else throw.\n            if (replace) await (0, $h63wN.rm)(path, {\n                recursive: true,\n                force: true\n            });\n            else throw this._errorExtractPathExists(path);\n        } else await (0, $h63wN.mkdir)((0, $4U4iP$dirname)(path), {\n            recursive: true\n        });\n        // Write file.\n        await (0, $h63wN.writeFile)(path, Buffer.alloc(0));\n        const stream = await reader();\n        if (stream) await $b7de880ec19b15be$var$pipe(stream, (0, $4U4iP$createWriteStream)(path));\n        // Set attributes.\n        await this.setAttributes(path, null, options);\n    }\n    /**\n   * Extract as a file.\n   *\n   * @param path Extract path.\n   * @param options Extract options.\n   */ async _extractFile(path, options) {\n        const readData = this._readData;\n        if (!readData) throw new Error(\"Internal error\");\n        await this._extractStreamToFile(path, readData, options);\n    }\n    /**\n   * Extract as resource fork to an existing file.\n   *\n   * @param path Extract path.\n   * @param options Extract options.\n   */ async _extractResourceFork(path, options) {\n        const readRsrc = this._readRsrc;\n        if (!readRsrc) throw new Error(\"Internal error\");\n        // Optionally extract as a data file.\n        if (options.resourceForkAsFile) {\n            await this._extractStreamToFile(path, readRsrc, options);\n            return;\n        }\n        // Check if file exists at path, else throw.\n        const stat = await (0, $aYbnF.fsLstatExists)(path);\n        if (!stat || !stat.isFile()) throw this._errorNoResourceFork(path);\n        // Create resource fork path.\n        const pathRsrc = (0, $aYbnF.pathResourceFork)(path);\n        // Write the resource fork.\n        const stream = await readRsrc();\n        if (stream) await $b7de880ec19b15be$var$pipe(stream, (0, $4U4iP$createWriteStream)(pathRsrc));\n        else await (0, $h63wN.writeFile)(pathRsrc, Buffer.alloc(0));\n        // Set attributes.\n        await this.setAttributes(path, null, options);\n    }\n    /**\n   * Extract as a directory.\n   *\n   * @param path Extract path.\n   * @param options Extract options.\n   */ async _extractDirectory(path, options) {\n        const { replace: replace } = options;\n        // Check if something exists at path, else create.\n        const stat = await (0, $aYbnF.fsLstatExists)(path);\n        if (stat) // If not directory, then remove and replace it, else throw.\n        {\n            if (!stat.isDirectory()) {\n                if (replace) {\n                    await (0, $h63wN.rm)(path, {\n                        recursive: true,\n                        force: true\n                    });\n                    await (0, $h63wN.mkdir)(path, {\n                        recursive: true\n                    });\n                } else throw this._errorExtractPathExists(path);\n            }\n        } else await (0, $h63wN.mkdir)(path, {\n            recursive: true\n        });\n        // Set directory attributes after any children are added.\n        this.archive.afterReadSetAttributes(path, this, {\n            ...options\n        });\n    }\n    /**\n   * Extract as a symlink.\n   *\n   * @param path Extract path.\n   * @param options Extract options.\n   */ async _extractSymlink(path, options) {\n        const readSymlink = this._readSymlink;\n        if (!readSymlink) throw new Error(\"Internal error\");\n        const { replace: replace, symlinkAsFile: symlinkAsFile } = options;\n        // Check if something exists at path, optionally removing.\n        const stat = await (0, $aYbnF.fsLstatExists)(path);\n        if (stat) {\n            // If replacing, then remove, else throw.\n            if (replace) await (0, $h63wN.rm)(path, {\n                recursive: true,\n                force: true\n            });\n            else throw this._errorExtractPathExists(path);\n        } else // Ensure base directory exists.\n        await (0, $h63wN.mkdir)((0, $4U4iP$dirname)(path), {\n            recursive: true\n        });\n        // Read target.\n        const target = await readSymlink();\n        // Create link, optionally as a file.\n        if (symlinkAsFile) await (0, $h63wN.writeFile)(path, target);\n        else await (0, $aYbnF.fsSymlink)(path, target);\n        // Set attributes.\n        await this.setAttributes(path, null, options);\n    }\n    /**\n   * Read as stream.\n   *\n   * @returns Readable stream.\n   */ async _stream() {\n        const { type: type } = this;\n        switch(type){\n            case (0, $2qKQL.PathType).FILE:\n                return this._streamFile();\n            case (0, $2qKQL.PathType).RESOURCE_FORK:\n                return this._streamResourceFork();\n            case (0, $2qKQL.PathType).DIRECTORY:\n                return this._streamDirectory();\n            case (0, $2qKQL.PathType).SYMLINK:\n                return this._streamSymlink();\n            default:\n                throw new Error(`Unsupported path type: ${type}`);\n        }\n    }\n    /**\n   * Read file as stream.\n   *\n   * @returns Readable stream.\n   */ async _streamFile() {\n        const readData = this._readData;\n        if (!readData) throw new Error(\"Internal error\");\n        return readData();\n    }\n    /**\n   * Read resource fork as stream.\n   *\n   * @returns Readable stream.\n   */ async _streamResourceFork() {\n        const readRsrc = this._readRsrc;\n        if (!readRsrc) throw new Error(\"Internal error\");\n        return readRsrc();\n    }\n    /**\n   * Read directory null stream.\n   *\n   * @returns Null stream.\n   */ // eslint-disable-next-line @typescript-eslint/require-await\n    async _streamDirectory() {\n        return null;\n    }\n    /**\n   * Read symlink as stream.\n   *\n   * @returns Readable stream.\n   */ // eslint-disable-next-line @typescript-eslint/require-await\n    async _streamSymlink() {\n        const readSymlink = this._readSymlink;\n        if (!readSymlink) throw new Error(\"Internal error\");\n        const r = new (0, $4U4iP$Readable)({\n            // eslint-disable-next-line jsdoc/require-jsdoc\n            read: ()=>{\n                readSymlink().then((d)=>{\n                    r.push(d);\n                    r.push(null);\n                }, (err)=>{\n                    r.emit(\"error\", err);\n                });\n            }\n        });\n        return r;\n    }\n}\nclass $b7de880ec19b15be$export$767c3cfd836ab901 {\n    /**\n   * List of file extensions, or null.\n   */ static FILE_EXTENSIONS = null;\n    /**\n   * Archive has named volumes that each entry will be under.\n   */ static HAS_NAMED_VOLUMES = false;\n    /**\n   * Entry constructor.\n   */ Entry = $b7de880ec19b15be$export$3bb977b3ba9d3b59;\n    /**\n   * File path.\n   */ /**\n   * Flag for currently reading.\n   */ _reading = false;\n    /**\n   * Map of entries to set attributes on after reading.\n   */ _afterReadSetAttributes = null;\n    /**\n   * Archive constructor.\n   *\n   * @param path File path.\n   */ constructor(path){\n        this.path = path;\n    }\n    /**\n   * List of file extensions used by this format.\n   *\n   * @returns List of file extensions.\n   */ get fileExtensions() {\n        return this.constructor.FILE_EXTENSIONS || null;\n    }\n    /**\n   * Archive has named volumes that each entry will be under.\n   *\n   * @returns Archive has named volumns.\n   */ get hasNamedVolumes() {\n        return this.constructor.HAS_NAMED_VOLUMES;\n    }\n    /**\n   * Add an instance to set attributes after the read finishes.\n   *\n   * @param path Path string.\n   * @param entry Entry instance.\n   * @param options Extract options.\n   */ afterReadSetAttributes(path, entry, options = {}) {\n        const afters = this._afterReadSetAttributes;\n        if (!afters) throw new Error(\"Archive after read callbacks can only be added while reading\");\n        afters.set((0, $4U4iP$resolve)(path), {\n            path: path,\n            entry: entry,\n            options: options\n        });\n    }\n    /**\n   * Remove an instance to set attributes after the read finishes.\n   *\n   * @param path Path string.\n   */ afterReadSetAttributesRemove(path) {\n        const afters = this._afterReadSetAttributes;\n        if (!afters) throw new Error(\"Archive after read callbacks can only be removed while reading\");\n        afters.delete((0, $4U4iP$resolve)(path));\n    }\n    /**\n   * Read archive.\n   * If the itter callback returns false, reading ends.\n   * If the itter callback returns null, skip descent where available.\n   *\n   * @param itter Async callback for each archive entry.\n   */ async read(itter) {\n        if (this._reading) throw new Error(\"Archive already being read\");\n        this._reading = true;\n        // Reset the after entries.\n        this._afterReadSetAttributes = new Map();\n        // Read and handle all the afters, reset after.\n        try {\n            await this._read(itter);\n            await this._afterReadSetAttributesTrigger();\n        } finally{\n            this._afterReadSetAttributes = null;\n            this._reading = false;\n        }\n    }\n    /**\n   * Run all after read set attributes.\n   */ async _afterReadSetAttributesTrigger() {\n        const afters = this._afterReadSetAttributes;\n        if (!afters) return;\n        // Prioritize by path length.\n        const resolves = [];\n        for (const [resolved] of afters)resolves.push(resolved);\n        resolves.sort((a, b)=>b.length - a.length);\n        for (const resolved of resolves){\n            const ent = afters.get(resolved);\n            if (!ent) throw new Error(\"Internal error\");\n            const { entry: entry, path: path, options: options } = ent;\n            // eslint-disable-next-line no-await-in-loop\n            await entry.setAttributes(path, resolved, options);\n        }\n    }\n}\n\n});\nparcelRegister(\"2qKQL\", function(module, exports) {\n\n$parcel$export(module.exports, \"PathType\", () => $c8e805784ff5e7d6$export$1ede5f4f7cadbc19);\nlet $c8e805784ff5e7d6$export$1ede5f4f7cadbc19 = /*#__PURE__*/ function(PathType) {\n    PathType[\"DIRECTORY\"] = \"directory\";\n    PathType[\"FILE\"] = \"file\";\n    PathType[\"SYMLINK\"] = \"symlink\";\n    PathType[\"RESOURCE_FORK\"] = \"resource-fork\";\n    return PathType;\n}({});\n\n});\n\nparcelRegister(\"aYbnF\", function(module, exports) {\n\n$parcel$export(module.exports, \"pathNormalize\", () => $9b262c047d735c2c$export$68cdc037c5be95b7);\n$parcel$export(module.exports, \"pathResourceFork\", () => $9b262c047d735c2c$export$213610777f3cbb95);\n$parcel$export(module.exports, \"statToPathType\", () => $9b262c047d735c2c$export$2e57a8497aead096);\n$parcel$export(module.exports, \"modePermissionBits\", () => $9b262c047d735c2c$export$ca46d8333b51aa81);\n$parcel$export(module.exports, \"streamToBuffer\", () => $9b262c047d735c2c$export$f207b56f03ffaaa2);\n$parcel$export(module.exports, \"fsLchmod\", () => $9b262c047d735c2c$export$723e24d2d3d59491);\n$parcel$export(module.exports, \"fsUtimes\", () => $9b262c047d735c2c$export$e60cbb801cdc66af);\n$parcel$export(module.exports, \"fsLutimes\", () => $9b262c047d735c2c$export$64e420d57313a055);\n$parcel$export(module.exports, \"fsReadlinkRaw\", () => $9b262c047d735c2c$export$b8fdb3c5f4cc1051);\n$parcel$export(module.exports, \"fsSymlink\", () => $9b262c047d735c2c$export$59d9fa9158086022);\n$parcel$export(module.exports, \"fsChmod\", () => $9b262c047d735c2c$export$af454a5fce713aea);\n$parcel$export(module.exports, \"fsLstatExists\", () => $9b262c047d735c2c$export$aed0caf4b29264f6);\n$parcel$export(module.exports, \"fsWalk\", () => $9b262c047d735c2c$export$ae01bfa74017ee13);\n\n\nvar $h63wN = parcelRequire(\"h63wN\");\n\n\n\nvar $gAjmt = parcelRequire(\"gAjmt\");\n\nvar $2qKQL = parcelRequire(\"2qKQL\");\nconst { O_WRONLY: $9b262c047d735c2c$var$O_WRONLY, O_SYMLINK: $9b262c047d735c2c$var$O_SYMLINK } = (0, $4U4iP$constants);\nconst $9b262c047d735c2c$export$5249736f3cc47f82 = !!$9b262c047d735c2c$var$O_SYMLINK;\nconst $9b262c047d735c2c$export$356fc6a6fe321aa3 = !!$9b262c047d735c2c$var$O_SYMLINK;\nfunction $9b262c047d735c2c$export$68cdc037c5be95b7(path) {\n    return path.replace(/\\\\/g, \"/\").replace(/([^/])\\/+$/, \"$1\");\n}\nfunction $9b262c047d735c2c$export$213610777f3cbb95(path) {\n    return (0, $4U4iP$join)(path, \"..namedfork\", \"rsrc\");\n}\nfunction $9b262c047d735c2c$export$2e57a8497aead096(stat) {\n    if (stat.isSymbolicLink()) return (0, $2qKQL.PathType).SYMLINK;\n    if (stat.isDirectory()) return (0, $2qKQL.PathType).DIRECTORY;\n    if (stat.isFile()) return (0, $2qKQL.PathType).FILE;\n    return null;\n}\nfunction $9b262c047d735c2c$export$984bbd77f303e817(mode) {\n    if ($9b262c047d735c2c$export$5ce23a1192b35f8f(mode, 40960)) return (0, $2qKQL.PathType).SYMLINK;\n    if ($9b262c047d735c2c$export$5ce23a1192b35f8f(mode, 16384)) return (0, $2qKQL.PathType).DIRECTORY;\n    if ($9b262c047d735c2c$export$5ce23a1192b35f8f(mode, 32768)) return (0, $2qKQL.PathType).FILE;\n    return null;\n}\nfunction $9b262c047d735c2c$export$ca46d8333b51aa81(mode) {\n    // eslint-disable-next-line no-bitwise\n    return mode & 511;\n}\nfunction $9b262c047d735c2c$export$5ce23a1192b35f8f(value, mask) {\n    // eslint-disable-next-line no-bitwise\n    return (value & mask) === mask;\n}\nasync function $9b262c047d735c2c$export$f207b56f03ffaaa2(stream) {\n    const datas = [];\n    let size = 0;\n    await (0, $gAjmt.pipeline)(stream, new (0, $4U4iP$Writable)({\n        // eslint-disable-next-line jsdoc/require-jsdoc\n        write: (data, _encoding, cb)=>{\n            datas.push(data);\n            size += data.length;\n            cb();\n        }\n    }));\n    return Buffer.concat(datas, size);\n}\nasync function $9b262c047d735c2c$export$723e24d2d3d59491(path, mode) {\n    // Skip if not supported.\n    if (!$9b262c047d735c2c$export$5249736f3cc47f82) return;\n    // eslint-disable-next-line no-bitwise\n    const fd = await (0, $h63wN.open)(path, $9b262c047d735c2c$var$O_WRONLY | $9b262c047d735c2c$var$O_SYMLINK);\n    try {\n        await fd.chmod(mode);\n    } finally{\n        await fd.close();\n    }\n}\nasync function $9b262c047d735c2c$export$e60cbb801cdc66af(path, atime, mtime) {\n    await (0, $h63wN.utimes)(path, atime, mtime);\n}\nasync function $9b262c047d735c2c$export$64e420d57313a055(path, atime, mtime) {\n    // Skip if not supported.\n    if (!$9b262c047d735c2c$export$356fc6a6fe321aa3) return;\n    // eslint-disable-next-line no-bitwise\n    const fd = await (0, $h63wN.open)(path, $9b262c047d735c2c$var$O_WRONLY | $9b262c047d735c2c$var$O_SYMLINK);\n    try {\n        await fd.utimes(atime, mtime);\n    } finally{\n        await fd.close();\n    }\n}\nasync function $9b262c047d735c2c$export$b8fdb3c5f4cc1051(path) {\n    return (0, $h63wN.readlink)(path, \"buffer\");\n}\nasync function $9b262c047d735c2c$export$59d9fa9158086022(path, target) {\n    await (0, $h63wN.symlink)(target, path);\n}\nasync function $9b262c047d735c2c$export$af454a5fce713aea(path, mode) {\n    await (0, $h63wN.chmod)(path, mode);\n}\nasync function $9b262c047d735c2c$export$d0e0ec41151e4b6a(path) {\n    return (await (0, $h63wN.readdir)(path)).sort();\n}\nasync function $9b262c047d735c2c$export$8b5a7be0b507a2b7(path) {\n    return (0, $h63wN.lstat)(path);\n}\nasync function $9b262c047d735c2c$export$aed0caf4b29264f6(path) {\n    try {\n        return await $9b262c047d735c2c$export$8b5a7be0b507a2b7(path);\n    } catch (err) {\n        const { code: code } = err;\n        if (code === \"ENOENT\" || code === \"ENOTDIR\") return null;\n        throw err;\n    }\n}\nasync function $9b262c047d735c2c$export$ae01bfa74017ee13(base, itter, options = {}) {\n    const { ignoreUnreadableDirectories: ignoreUnreadableDirectories } = options;\n    const stack = (await $9b262c047d735c2c$export$d0e0ec41151e4b6a(base)).reverse();\n    while(stack.length){\n        const entry = stack.pop();\n        const fullPath = (0, $4U4iP$join)(base, entry);\n        // eslint-disable-next-line no-await-in-loop\n        const stat = await $9b262c047d735c2c$export$8b5a7be0b507a2b7(fullPath);\n        // Callback, possibly stop recursion on directory.\n        // eslint-disable-next-line no-await-in-loop\n        const recurse = await itter(entry, stat);\n        if (recurse === null) break;\n        if (recurse === false || !stat.isDirectory()) continue;\n        // Recurse down.\n        let subs = [];\n        try {\n            // eslint-disable-next-line no-await-in-loop\n            subs = await $9b262c047d735c2c$export$d0e0ec41151e4b6a(fullPath);\n        } catch (err) {\n            if (!(err && ignoreUnreadableDirectories && err.code === \"EACCES\")) throw err;\n        }\n        for(let i = subs.length; i--;)stack.push((0, $4U4iP$join)(entry, subs[i]));\n    }\n}\n\n});\nparcelRegister(\"gAjmt\", function(module, exports) {\n\n$parcel$export(module.exports, \"pipeline\", () => $dad6cbf3dff47f68$export$43f28b24e1eb8181);\n/* eslint-disable @typescript-eslint/ban-types */ /* eslint-disable @typescript-eslint/no-explicit-any */ \n\nconst $dad6cbf3dff47f68$export$43f28b24e1eb8181 = \"promises\" in $4U4iP$stream && \"pipeline\" in $4U4iP$stream.promises ? $4U4iP$stream.promises.pipeline : (0, $4U4iP$promisify1)($4U4iP$stream.pipeline);\nconst $dad6cbf3dff47f68$export$90407f30cb0073b9 = \"promises\" in $4U4iP$stream && \"finished\" in $4U4iP$stream.promises ? $4U4iP$stream.promises.finished : (0, $4U4iP$promisify1)($4U4iP$stream.finished);\n\n});\n\n\n\n\n\n//# sourceMappingURL=hdi.6b26b058.js.map\n",null,"/* eslint-disable max-classes-per-file */\n\nimport {Stats, createReadStream} from 'node:fs';\nimport {basename, join as pathJoin} from 'node:path';\n\nimport {Mounter} from '@shockpkg/hdi-mac';\n\nimport {Archive, Entry, IEntryInfo} from '../archive';\nimport {PathType} from '../types';\nimport {\n\tfsLstatExists,\n\tfsReadlinkRaw,\n\tfsWalk,\n\tpathNormalize,\n\tpathResourceFork,\n\tstatToPathType\n} from '../util';\n\nconst walkOpts = {\n\tignoreUnreadableDirectories: true\n};\n\nconst ejectOptions = {\n\tforce: true\n};\n\nexport interface IEntryInfoHdi extends IEntryInfo {\n\t/**\n\t * @inheritdoc\n\t */\n\tarchive: ArchiveHdi;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tsize: number;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tsizeComp?: null;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tmode: number;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tuid: number;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tgid: number;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tuname?: null;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tgname?: null;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tatime: Date;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tmtime: Date;\n}\n\n/**\n * EntryHdi object.\n */\nexport class EntryHdi extends Entry {\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic readonly archive: ArchiveHdi;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic readonly size: number;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic readonly sizeComp: null = null;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic readonly mode: number;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic readonly uid: number;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic readonly gid: number;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic readonly uname: null = null;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic readonly gname: null = null;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic readonly atime: Date;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic readonly mtime: Date;\n\n\t/**\n\t * EntryHdi constructor.\n\t *\n\t * @param info Info object.\n\t */\n\tconstructor(info: Readonly<IEntryInfoHdi>) {\n\t\tsuper(info);\n\n\t\tthis.archive = info.archive;\n\t\tthis.size = info.size;\n\t\tthis.mode = info.mode;\n\t\tthis.uid = info.uid;\n\t\tthis.gid = info.gid;\n\t\tthis.atime = info.atime;\n\t\tthis.mtime = info.mtime;\n\t}\n\n\t/**\n\t * Get the path of resource psuedo-file, raw.\n\t *\n\t * @returns Path string.\n\t */\n\tpublic get rsrcPathRaw() {\n\t\treturn pathResourceFork(this.pathRaw);\n\t}\n\n\t/**\n\t * Get the path of resource psuedo-file, normalized.\n\t *\n\t * @returns Path string.\n\t */\n\tpublic get rsrcPath() {\n\t\treturn pathNormalize(pathResourceFork(this.path));\n\t}\n}\n\n/**\n * ArchiveHdi object.\n */\nexport class ArchiveHdi extends Archive {\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic static readonly FILE_EXTENSIONS: Readonly<string[]> | null = [\n\t\t'.dmg',\n\t\t'.iso',\n\t\t'.cdr'\n\t];\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic static readonly HAS_NAMED_VOLUMES: boolean = true;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic readonly Entry = EntryHdi;\n\n\t/**\n\t * Mounter, Mac.\n\t */\n\tpublic mounterMac = new Mounter();\n\n\t/**\n\t * Hide mounted disk image from the file explorers.\n\t */\n\tpublic nobrowse = false;\n\n\t/**\n\t * ArchiveHdi constructor.\n\t *\n\t * @param path File path.\n\t */\n\tconstructor(path: string) {\n\t\tsuper(path);\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic async read(itter: (entry: EntryHdi) => Promise<unknown>) {\n\t\tawait super.read(itter as (entry: Entry) => Promise<unknown>);\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tprotected async _read(itter: (entry: EntryHdi) => Promise<unknown>) {\n\t\tconst {mounterMac, nobrowse} = this;\n\n\t\t/**\n\t\t * Each itterator.\n\t\t *\n\t\t * @param pathFull Full path.\n\t\t * @param pathRaw Raw path.\n\t\t * @param stat Stat object.\n\t\t * @returns Recursion hint.\n\t\t */\n\t\tconst each = async (pathFull: string, pathRaw: string, stat: Stats) => {\n\t\t\tconst type = statToPathType(stat);\n\t\t\tif (type === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst {size, mode, uid, gid, atime, mtime} = stat;\n\n\t\t\tconst readData =\n\t\t\t\ttype === PathType.FILE\n\t\t\t\t\t? // eslint-disable-next-line max-len\n\t\t\t\t\t  // eslint-disable-next-line @typescript-eslint/require-await\n\t\t\t\t\t  async () => createReadStream(pathFull)\n\t\t\t\t\t: null;\n\n\t\t\tconst readSymlink =\n\t\t\t\ttype === PathType.SYMLINK\n\t\t\t\t\t? async () => fsReadlinkRaw(pathFull)\n\t\t\t\t\t: null;\n\n\t\t\tconst entry = new this.Entry({\n\t\t\t\tarchive: this,\n\t\t\t\ttype,\n\t\t\t\tpathRaw,\n\t\t\t\tsize,\n\t\t\t\tmode,\n\t\t\t\tuid,\n\t\t\t\tgid,\n\t\t\t\tatime,\n\t\t\t\tmtime,\n\t\t\t\treadData,\n\t\t\t\treadSymlink\n\t\t\t});\n\n\t\t\tconst ret = await entry.trigger(itter);\n\t\t\tif (ret === false) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (ret === null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (type === PathType.FILE) {\n\t\t\t\tconst rsrcPathFull = pathResourceFork(pathFull);\n\t\t\t\tconst rsrcStat = await fsLstatExists(rsrcPathFull);\n\n\t\t\t\tif (rsrcStat) {\n\t\t\t\t\tconst sizeRsrc = rsrcStat.size;\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Read RSRC.\n\t\t\t\t\t *\n\t\t\t\t\t * @returns Read stream.\n\t\t\t\t\t */\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/require-await\n\t\t\t\t\tconst readRsrc = async () => createReadStream(rsrcPathFull);\n\n\t\t\t\t\tconst entryRsrc = new this.Entry({\n\t\t\t\t\t\tarchive: this,\n\t\t\t\t\t\ttype: PathType.RESOURCE_FORK,\n\t\t\t\t\t\tpathRaw,\n\t\t\t\t\t\tsize: sizeRsrc,\n\t\t\t\t\t\tmode,\n\t\t\t\t\t\tuid,\n\t\t\t\t\t\tgid,\n\t\t\t\t\t\tatime,\n\t\t\t\t\t\tmtime,\n\t\t\t\t\t\treadRsrc\n\t\t\t\t\t});\n\n\t\t\t\t\tconst ret = await entryRsrc.trigger(itter);\n\t\t\t\t\tif (ret === false) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\tif (ret === null) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\t// Using auto-eject on normal exit option.\n\t\tconst info = await mounterMac.attach(\n\t\t\tthis.path,\n\t\t\t{\n\t\t\t\tnobrowse,\n\t\t\t\treadonly: true\n\t\t\t},\n\t\t\tejectOptions\n\t\t);\n\n\t\t// Eject device when done.\n\t\ttry {\n\t\t\tfor (const device of info.devices) {\n\t\t\t\tconst {mountPoint} = device;\n\t\t\t\tif (!mountPoint) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst volumeName = basename(mountPoint);\n\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\tawait fsWalk(\n\t\t\t\t\tmountPoint,\n\t\t\t\t\tasync (pathRel, stat) => {\n\t\t\t\t\t\tconst pathFull = pathJoin(mountPoint, pathRel);\n\t\t\t\t\t\tconst pathRaw = pathJoin(volumeName, pathRel);\n\t\t\t\t\t\treturn each(pathFull, pathRaw, stat);\n\t\t\t\t\t},\n\t\t\t\t\twalkOpts\n\t\t\t\t);\n\t\t\t}\n\t\t} finally {\n\t\t\tawait info.eject(ejectOptions);\n\t\t}\n\t}\n}\n",null,"import {spawn, spawnSync} from 'node:child_process';\n\nimport {\n\tPlist,\n\tValueDict,\n\tValueArray,\n\tValueString,\n\tValueBoolean\n} from '@shockpkg/plist-dom';\n\nexport interface IMounterOptions {\n\t/**\n\t * The path for hdiutil.\n\t *\n\t * @default 'hdiutil'\n\t */\n\thdiutil?: string | null;\n}\n\nexport interface IMounterAttachOptions {\n\t/**\n\t * Force the devices to be read-only.\n\t */\n\treadonly?: boolean;\n\n\t/**\n\t * Hide any mounted volumes from applications like Finder.\n\t */\n\tnobrowse?: boolean;\n}\n\nexport interface IMounterEjectOptions {\n\t/**\n\t * Forcibly detach.\n\t */\n\tforce?: boolean;\n}\n\nexport interface IMounterDevice {\n\t/**\n\t * The dev-entry hdiutil info.\n\t */\n\tdevEntry: string;\n\n\t/**\n\t * The potentially-mountable hdiutil info.\n\t */\n\tpotentiallyMountable: boolean;\n\n\t/**\n\t * The content-hint hdiutil info.\n\t */\n\tcontentHint?: string;\n\n\t/**\n\t * The unmapped-content-hint hdiutil info.\n\t */\n\tunmappedContentHint?: string;\n\n\t/**\n\t * The volume-kind hdiutil info, if present.\n\t */\n\tvolumeKind?: string;\n\n\t/**\n\t * The mount-point hdiutil info, if present.\n\t */\n\tmountPoint?: string;\n}\n\nexport interface IMounterAttachInfo {\n\t/**\n\t * Device list.\n\t */\n\tdevices: IMounterDevice[];\n\n\t/**\n\t * Eject disk.\n\t */\n\teject(options?: Readonly<IMounterEjectOptions> | null): Promise<void>;\n\n\t/**\n\t * Eject disk.\n\t */\n\tejectSync(options?: Readonly<IMounterEjectOptions> | null): void;\n}\n\n/**\n * Mounter object.\n */\nexport class Mounter {\n\t/**\n\t * The path to hdiutil.\n\t */\n\tpublic hdiutil: string;\n\n\t/**\n\t * Mounter constructor.\n\t *\n\t * @param options Options object.\n\t */\n\tconstructor(options: Readonly<IMounterOptions> | null = null) {\n\t\tthis.hdiutil = (options ? options.hdiutil : null) || 'hdiutil';\n\t}\n\n\t/**\n\t * Attach a disk image.\n\t *\n\t * @param file Path to disk image.\n\t * @param options Options object.\n\t * @param ejectOnExit Eject on exit options, or null.\n\t * @returns Info object.\n\t */\n\tpublic async attach(\n\t\tfile: string,\n\t\toptions: Readonly<IMounterAttachOptions> | null = null,\n\t\tejectOnExit: Readonly<IMounterEjectOptions> | null = null\n\t): Promise<IMounterAttachInfo> {\n\t\tconst devices = await this._runAttach(this._argsAttach(file, options));\n\t\tconst {eject, ejectSync} = this._createEjects(devices);\n\t\treturn {\n\t\t\tdevices,\n\t\t\teject,\n\t\t\tejectSync\n\t\t};\n\t}\n\n\t/**\n\t * Attach a disk image.\n\t *\n\t * @param file Path to disk image.\n\t * @param options Options object.\n\t * @param ejectOnExit Eject on exit options, or null.\n\t * @returns Info object.\n\t */\n\tpublic attachSync(\n\t\tfile: string,\n\t\toptions: Readonly<IMounterAttachOptions> | null = null,\n\t\tejectOnExit: Readonly<IMounterEjectOptions> | null = null\n\t): IMounterAttachInfo {\n\t\t// eslint-disable-next-line no-sync\n\t\tconst devices = this._runAttachSync(this._argsAttach(file, options));\n\t\tconst {eject, ejectSync} = this._createEjects(devices);\n\t\treturn {\n\t\t\tdevices,\n\t\t\teject,\n\t\t\tejectSync\n\t\t};\n\t}\n\n\t/**\n\t * Eject a disk image.\n\t *\n\t * @param file Path to device file or volume mount point.\n\t * @param options Options object.\n\t */\n\tpublic async eject(\n\t\tfile: string,\n\t\toptions: Readonly<IMounterEjectOptions> | null = null\n\t) {\n\t\tawait this._runEject(this._argsEject(file, options));\n\t}\n\n\t/**\n\t * Eject a disk image.\n\t *\n\t * @param file Path to device file or volume mount point.\n\t * @param options Options object.\n\t */\n\tpublic ejectSync(\n\t\tfile: string,\n\t\toptions: Readonly<IMounterEjectOptions> | null = null\n\t) {\n\t\t// eslint-disable-next-line no-sync\n\t\tthis._runEjectSync(this._argsEject(file, options));\n\t}\n\n\t/**\n\t * Create args for attach.\n\t *\n\t * @param file Path to disk image.\n\t * @param options Options object.\n\t * @returns Argument list.\n\t */\n\tprotected _argsAttach(\n\t\tfile: string,\n\t\toptions: Readonly<IMounterAttachOptions> | null = null\n\t) {\n\t\tconst args = ['attach', '-plist'];\n\t\tif (options) {\n\t\t\tif (options.readonly) {\n\t\t\t\targs.push('-readonly');\n\t\t\t}\n\t\t\tif (options.nobrowse) {\n\t\t\t\targs.push('-nobrowse');\n\t\t\t}\n\t\t}\n\t\targs.push(this._fileArg(file));\n\t\treturn args;\n\t}\n\n\t/**\n\t * Create args for eject.\n\t *\n\t * @param file Path to device file or volume mount point.\n\t * @param options Options object.\n\t * @returns Argument list.\n\t */\n\tprotected _argsEject(\n\t\tfile: string,\n\t\toptions: Readonly<IMounterEjectOptions> | null = null\n\t) {\n\t\tconst args = ['eject'];\n\t\tif (options && options.force) {\n\t\t\targs.push('-force');\n\t\t}\n\t\targs.push(this._fileArg(file));\n\t\treturn args;\n\t}\n\n\t/**\n\t * Run hdiutil attach command, returning the devices list on success.\n\t *\n\t * @param args CLI args.\n\t * @returns Devices list.\n\t */\n\tprotected async _runAttach(args: readonly string[]) {\n\t\tconst stdouts: Buffer[] = [];\n\t\tconst proc = spawn(this.hdiutil, args);\n\t\tproc.stdout.on('data', (data: Buffer) => {\n\t\t\tstdouts.push(data);\n\t\t});\n\t\tconst code = await new Promise<number | null>((resolve, reject) => {\n\t\t\tproc.once('exit', resolve);\n\t\t\tproc.once('error', reject);\n\t\t});\n\t\tif (code) {\n\t\t\tthrow new Error(`Attach failed: hdiutil exit code: ${code}`);\n\t\t}\n\t\treturn this._parseDevices(Buffer.concat(stdouts).toString());\n\t}\n\n\t/**\n\t * Run hdiutil attach command, returning the devices list on success.\n\t *\n\t * @param args CLI args.\n\t * @returns Devices list.\n\t */\n\tprotected _runAttachSync(args: readonly string[]) {\n\t\tconst {status, error, stdout} = spawnSync(this.hdiutil, args);\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\t\tif (status) {\n\t\t\tthrow new Error(`Attach failed: hdiutil exit code: ${status}`);\n\t\t}\n\t\treturn this._parseDevices(stdout.toString());\n\t}\n\n\t/**\n\t * Run hdiutil eject command.\n\t *\n\t * @param args CLI args.\n\t */\n\tprotected async _runEject(args: readonly string[]) {\n\t\tconst proc = spawn(this.hdiutil, args);\n\t\tconst status = await new Promise<number | null>((resolve, reject) => {\n\t\t\tproc.once('exit', resolve);\n\t\t\tproc.once('error', reject);\n\t\t});\n\t\tif (status) {\n\t\t\tthrow new Error(`Eject failed: hdiutil exit code: ${status}`);\n\t\t}\n\t}\n\n\t/**\n\t * Run hdiutil eject command.\n\t *\n\t * @param args CLI args.\n\t */\n\tprotected _runEjectSync(args: readonly string[]) {\n\t\tconst {status, error} = spawnSync(this.hdiutil, args);\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\t\tif (status) {\n\t\t\tthrow new Error(`Eject failed: hdiutil exit code: ${status}`);\n\t\t}\n\t}\n\n\t/**\n\t * Create file argument from file path.\n\t *\n\t * @param file File path.\n\t * @returns A path for use as argument.\n\t */\n\tprotected _fileArg(file: string) {\n\t\t// Make sure it will not be recognized as option argument.\n\t\treturn file.startsWith('-') ? `./${file}` : file;\n\t}\n\n\t/**\n\t * Parse devices plist into devices list.\n\t *\n\t * @param xml XML plist.\n\t * @returns Devices list.\n\t */\n\tprotected _parseDevices(xml: string) {\n\t\tconst plist = new Plist();\n\t\tplist.fromXml(xml);\n\t\tconst systemEntities = plist\n\t\t\t.valueCastAs(ValueDict)\n\t\t\t.getValue('system-entities')\n\t\t\t.castAs(ValueArray);\n\n\t\tconst r: IMounterDevice[] = [];\n\t\tfor (const value of systemEntities.value) {\n\t\t\tconst dict = value.castAs(ValueDict);\n\t\t\tconst devEntry = dict\n\t\t\t\t.getValue('dev-entry')\n\t\t\t\t.castAs(ValueString).value;\n\t\t\tconst potentiallyMountable = dict\n\t\t\t\t.getValue('potentially-mountable')\n\t\t\t\t.castAs(ValueBoolean).value;\n\t\t\tconst contentHint = dict.get('content-hint');\n\t\t\tconst unmappedContentHint = dict.get('unmapped-content-hint');\n\t\t\tconst volumeKind = dict.get('volume-kind');\n\t\t\tconst mountPoint = dict.get('mount-point');\n\n\t\t\tconst device: IMounterDevice = {\n\t\t\t\tdevEntry,\n\t\t\t\tpotentiallyMountable\n\t\t\t};\n\t\t\tif (contentHint) {\n\t\t\t\tdevice.contentHint = contentHint.castAs(ValueString).value;\n\t\t\t}\n\t\t\tif (unmappedContentHint) {\n\t\t\t\tdevice.unmappedContentHint =\n\t\t\t\t\tunmappedContentHint.castAs(ValueString).value;\n\t\t\t}\n\t\t\tif (volumeKind) {\n\t\t\t\tdevice.volumeKind = volumeKind.castAs(ValueString).value;\n\t\t\t}\n\t\t\tif (mountPoint) {\n\t\t\t\tdevice.mountPoint = mountPoint.castAs(ValueString).value;\n\t\t\t}\n\t\t\tr.push(device);\n\t\t}\n\t\treturn r;\n\t}\n\n\t/**\n\t * Find the root device, null on empty list.\n\t *\n\t * @param devices Device list.\n\t * @returns Root device or null if an empty list.\n\t */\n\tprotected _findRootDevice(devices: readonly Readonly<IMounterDevice>[]) {\n\t\tlet r: IMounterDevice | null = null;\n\t\tfor (const device of devices) {\n\t\t\tif (r === null || r.devEntry.length > device.devEntry.length) {\n\t\t\t\tr = device;\n\t\t\t}\n\t\t}\n\t\treturn r;\n\t}\n\n\t/**\n\t * Create ejects callback from a list of devices.\n\t *\n\t * @param devices Device list.\n\t * @param ejectOnExit Eject on exit options, or null.\n\t * @returns Callback function.\n\t */\n\tprotected _createEjects(\n\t\tdevices: readonly Readonly<IMounterDevice>[],\n\t\tejectOnExit = null\n\t) {\n\t\t// Find the root device, to use to eject (none possible in theory).\n\t\tlet devEntry = this._findRootDevice(devices)?.devEntry;\n\n\t\tlet shutdown: (() => void) | null = null;\n\t\tconst info = {\n\t\t\t/**\n\t\t\t * The eject callback function.\n\t\t\t *\n\t\t\t * @param options Eject options.\n\t\t\t */\n\t\t\teject: async (options: IMounterEjectOptions | null = null) => {\n\t\t\t\tif (devEntry) {\n\t\t\t\t\tawait this.eject(devEntry, options);\n\t\t\t\t\tdevEntry = '';\n\t\t\t\t\tif (shutdown) {\n\t\t\t\t\t\tprocess.off('exit', shutdown);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The eject callback function.\n\t\t\t *\n\t\t\t * @param options Eject options.\n\t\t\t */\n\t\t\tejectSync: (options: IMounterEjectOptions | null = null) => {\n\t\t\t\tif (devEntry) {\n\t\t\t\t\t// eslint-disable-next-line no-sync\n\t\t\t\t\tthis.ejectSync(devEntry, options);\n\t\t\t\t\tdevEntry = '';\n\t\t\t\t\tif (shutdown) {\n\t\t\t\t\t\tprocess.off('exit', shutdown);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tif (ejectOnExit) {\n\t\t\t/**\n\t\t\t * Attempt to auto-eject on normal shutdown.\n\t\t\t * Does not catch signals (no clean way in a library).\n\t\t\t * Users can explicitly call process.exit() on signals to use this.\n\t\t\t */\n\t\t\tshutdown = () => {\n\t\t\t\t// eslint-disable-next-line no-sync\n\t\t\t\tinfo.ejectSync(ejectOnExit);\n\t\t\t};\n\t\t\tprocess.once('exit', shutdown);\n\t\t}\n\n\t\treturn info;\n\t}\n}\n",null,"import {INDENT_ROOT, IToXmlOptions, NEWLINE_STRING} from './options.ts';\nimport {IElement, xmlDecode, xmlElementChildElements} from './util.ts';\nimport {Value} from './value.ts';\nimport {ValueDict} from './value/dict.ts';\n\nconst xmlDeclaration = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\nconst xmlDoctype =\n\t'<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">';\n\n/**\n * Plist object.\n */\nexport class Plist {\n\t/**\n\t * Default XML declaration.\n\t */\n\tpublic static readonly XML_DECLARATION = xmlDeclaration;\n\n\t/**\n\t * Default XML doctype.\n\t */\n\tpublic static readonly XML_DOCTYPE = xmlDoctype;\n\n\t/**\n\t * XML declaration.\n\t */\n\tpublic xmlDeclaration = xmlDeclaration;\n\n\t/**\n\t * XML doctype.\n\t */\n\tpublic xmlDoctype = xmlDoctype;\n\n\t/**\n\t * Value element.\n\t */\n\tpublic value: Value | null = null;\n\n\t/**\n\t * Plist constructor.\n\t *\n\t * @param value The value.\n\t */\n\tconstructor(value: Value | null = null) {\n\t\tthis.value = value;\n\t}\n\n\t/**\n\t * Get value or throw if null.\n\t *\n\t * @returns The value.\n\t */\n\tpublic getValue() {\n\t\tconst {value} = this;\n\t\tif (!value) {\n\t\t\tthrow new Error('Value is null');\n\t\t}\n\t\treturn value;\n\t}\n\n\t/**\n\t * Cast to specific type or null.\n\t *\n\t * @param Type Type constructor.\n\t * @returns The object or null.\n\t */\n\tpublic valueCastTo<T extends typeof Value>(Type: T): T['prototype'] | null {\n\t\tconst {value} = this;\n\t\treturn value ? value.castTo(Type) : null;\n\t}\n\n\t/**\n\t * Cast to specific type or throw.\n\t *\n\t * @param Type Type constructor.\n\t * @returns The object.\n\t */\n\tpublic valueCastAs<T extends typeof Value>(Type: T): T['prototype'] {\n\t\tconst casted = this.valueCastTo(Type);\n\t\tif (!casted) {\n\t\t\tthrow new Error(`Cannot cast value to type '${Type.TYPE}'`);\n\t\t}\n\t\treturn casted;\n\t}\n\n\t/**\n\t * Decode document from string.\n\t *\n\t * @param xml XML string.\n\t */\n\tpublic fromXml(xml: string) {\n\t\tconst {declaration, doctype, documentElement} = xmlDecode(xml);\n\t\tthis.fromXmlElement(documentElement, declaration, doctype);\n\t}\n\n\t/**\n\t * Decode document from element.\n\t *\n\t * @param element XML element.\n\t * @param declaration XML declaration.\n\t * @param doctype XML doctype.\n\t */\n\tpublic fromXmlElement(\n\t\telement: Readonly<IElement>,\n\t\tdeclaration: string | null = null,\n\t\tdoctype: string | null = null\n\t) {\n\t\tconst {tagName} = element;\n\t\tif (tagName !== 'plist') {\n\t\t\tthrow new Error(`Unexpected root plist tag name: ${tagName}`);\n\t\t}\n\n\t\tconst childElements = xmlElementChildElements(element);\n\t\tconst childElementsL = childElements.length;\n\t\tif (childElementsL > 1) {\n\t\t\tthrow new Error(`Multiple root plist child tag: ${childElementsL}`);\n\t\t}\n\n\t\tthis.value = childElementsL\n\t\t\t? this.childFromXmlElement(childElements[0])\n\t\t\t: null;\n\t\tthis.xmlDeclaration = declaration || '';\n\t\tthis.xmlDoctype = doctype || '';\n\t}\n\n\t/**\n\t * Decode child element from XML element.\n\t *\n\t * @param element XML element.\n\t * @returns Value element.\n\t */\n\tpublic childFromXmlElement(element: IElement) {\n\t\tconst a = new ValueDict();\n\t\treturn a.childFromXmlElement(element);\n\t}\n\n\t/**\n\t * Encode documents to string.\n\t *\n\t * @param options Options object.\n\t * @returns XML string.\n\t */\n\tpublic toXml(options: Readonly<IToXmlOptions> | null = null) {\n\t\tconst ir = options?.indentRoot ?? INDENT_ROOT;\n\t\tconst n = options?.newlineString ?? NEWLINE_STRING;\n\n\t\tconst v = this.value;\n\t\treturn [\n\t\t\t...[this.xmlDeclaration, this.xmlDoctype].filter(Boolean),\n\t\t\t'<plist version=\"1.0\">',\n\t\t\t...(v ? [v.toXml(options, ir ? 1 : 0)] : []),\n\t\t\t'</plist>',\n\t\t\t''\n\t\t].join(n);\n\t}\n}\n",null,"export const INDENT_STRING = '\\t';\nexport const NEWLINE_STRING = '\\n';\nexport const DATA_COLUMNS = 68;\nexport const INDENT_ROOT = false;\n\nexport interface IToXmlOptions {\n\t/**\n\t * Indent string.\n\t *\n\t * @default '\\t'\n\t */\n\tindentString?: string | null;\n\n\t/**\n\t * Newline string.\n\t *\n\t * @default '\\n'\n\t */\n\tnewlineString?: string | null;\n\n\t/**\n\t * Data columns, zero of negative for one row.\n\t *\n\t * @default 68\n\t */\n\tdataColumns?: number | null;\n\n\t/**\n\t * Indent root element content.\n\t *\n\t * @default false\n\t */\n\tindentRoot?: boolean | null;\n}\n",null,"import {DOMParser} from '@xmldom/xmldom';\n\nconst B6 = 0x3f;\nconst B8 = 0xff;\nconst C64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst C64M = [\n\t-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n\t-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n\t-1, -1, -1, -1, -1, 62, -1, -1, -1, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n\t61, -1, -1, -1, 64, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\n\t13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1, -1,\n\t26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44,\n\t45, 46, 47, 48, 49, 50, 51\n];\n\nexport interface IText {\n\tnodeValue: string | null;\n}\n\nexport interface IElement {\n\treadonly tagName: string;\n\tchildNodes: {\n\t\tlength: number;\n\t\t[index: number]: IElement | IText;\n\t};\n\ttoString: () => string;\n}\n\n/**\n * Decode an XML string.\n *\n * @param xml XML string.\n * @returns Decoded declaration, doctype, and document element.\n */\nexport function xmlDecode(xml: string) {\n\tlet declaration: string | null = null;\n\tlet doctype: string | null = null;\n\n\tconst errors: string[] = [];\n\tconst parser = new DOMParser({\n\t\tlocator: {},\n\t\terrorHandler: {\n\t\t\t/**\n\t\t\t * Warning callback.\n\t\t\t *\n\t\t\t * @param e Error string.\n\t\t\t */\n\t\t\twarning: (e: string) => {\n\t\t\t\t// Ignore warnings.\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Error callback.\n\t\t\t *\n\t\t\t * @param e Error string.\n\t\t\t */\n\t\t\terror: (e: string) => {\n\t\t\t\terrors.push(e);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Fatal error callback.\n\t\t\t *\n\t\t\t * @param e Error string.\n\t\t\t */\n\t\t\tfatalError: (e: string) => {\n\t\t\t\terrors.push(e);\n\t\t\t}\n\t\t}\n\t});\n\tconst doc = parser.parseFromString(xml, 'text/xml') as unknown as {\n\t\tdocumentElement: Readonly<IElement>;\n\t\tchildNodes: {toString: () => string}[];\n\t};\n\tif (errors.length) {\n\t\tthrow new Error(`XML decode error: ${errors[0]}`);\n\t}\n\n\tconst {childNodes} = doc;\n\tconst documentElement = doc.documentElement || null;\n\n\tfor (let i = 0, l = childNodes.length; i < l; i++) {\n\t\tconst childNode = childNodes[i];\n\t\tif (childNode === documentElement) {\n\t\t\tbreak;\n\t\t}\n\t\tconst str = childNode.toString();\n\t\tif (/^<\\?xml[^>]*\\?>$/.test(str)) {\n\t\t\tdeclaration = str;\n\t\t}\n\t\tif (/^<!DOCTYPE[^>]*>$/.test(str)) {\n\t\t\tdoctype = str;\n\t\t}\n\t}\n\n\tif (!documentElement) {\n\t\tthrow new Error('XML decode error: No document element');\n\t}\n\n\treturn {\n\t\tdeclaration,\n\t\tdoctype,\n\t\tdocumentElement\n\t};\n}\n\n/**\n * List XML element child elements.\n * Throws if non-whitespace nodes are found.\n *\n * @param element XML element.\n * @returns XML element list.\n */\nexport function xmlElementChildElements<T extends Readonly<IElement>>(\n\telement: T\n): T[] {\n\tconst {childNodes} = element;\n\tconst r = [];\n\tfor (let i = 0, l = childNodes.length; i < l; i++) {\n\t\tconst childNode = childNodes[i];\n\t\tif ('tagName' in childNode) {\n\t\t\tr.push(childNode as T);\n\t\t\tcontinue;\n\t\t}\n\t\tconst {nodeValue} = childNode;\n\t\tif (nodeValue && !/^\\s*$/.test(nodeValue)) {\n\t\t\tthrow new Error(`Found text children of: ${element.tagName}`);\n\t\t}\n\t}\n\treturn r;\n}\n\n/**\n * Get the XML element text node.\n * Returns null if none, throws if multiple elements.\n *\n * @param element XML element.\n * @returns XML text node list.\n */\nexport function xmlElementText(element: Readonly<IElement>) {\n\tconst {childNodes} = element;\n\tlet r: IText | null = null;\n\tfor (let i = 0, l = childNodes.length; i < l; i++) {\n\t\tif (i) {\n\t\t\tthrow new Error(`Multiple child elements in: ${element.tagName}`);\n\t\t}\n\n\t\tconst childNode = childNodes[i];\n\t\tif (\n\t\t\t!('tagName' in childNode) &&\n\t\t\t'data' in childNode &&\n\t\t\t'nodeValue' in childNode\n\t\t) {\n\t\t\tr = childNode as IText;\n\t\t} else {\n\t\t\tthrow new Error(`Unexpected child element in: ${element.tagName}`);\n\t\t}\n\t}\n\treturn r;\n}\n\n/**\n * Assert XML element has no children.\n *\n * @param element XML element.\n * @param tagName XML element tag name.\n */\nexport function assertXmlTagName(element: Readonly<IElement>, tagName: string) {\n\tconst tn = element.tagName;\n\tif (tn !== tagName) {\n\t\tthrow new Error(`Unexpected tagName: ${tagName}`);\n\t}\n}\n\n/**\n * Assert XML element has no children.\n *\n * @param element XML element.\n */\nexport function assertNoXmlElementChildNodes(element: Readonly<IElement>) {\n\tconst {childNodes} = element;\n\tif (childNodes.length) {\n\t\tthrow new Error(`Unexpected child nodes: ${element.tagName}`);\n\t}\n}\n\n/**\n * Base64 encode function mirroring decode function.\n *\n * @param data Byte array.\n * @returns Base64 string.\n */\nexport function base64Encode(data: Uint8Array) {\n\tconst l = data.length;\n\tlet r = '';\n\tfor (let i = 0; i < l; ) {\n\t\tconst a = data[i++];\n\t\tconst b = i < l ? data[i++] : null;\n\t\tconst c = i < l ? data[i++] : null;\n\t\t// eslint-disable-next-line no-bitwise\n\t\tconst o = (a << 16) | ((b || 0) << 8) | (c || 0);\n\t\tr +=\n\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\tC64[o >> 18] +\n\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\tC64[(o >> 12) & B6] +\n\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\tC64[b === null ? 64 : (o >> 6) & B6] +\n\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\tC64[c === null ? 64 : o & B6];\n\t}\n\treturn r;\n}\n\n/**\n * Base64 decode function that matches plist parsing behavior.\n *\n * @param base64 Base64 string.\n * @returns Byte array.\n */\nexport function base64Decode(base64: string) {\n\tconst l = base64.length;\n\tconst r = [];\n\tOUTER: for (let a, b, c, d, m, z, i = 0; i < l; ) {\n\t\tfor (;;) {\n\t\t\t// eslint-disable-next-line unicorn/prefer-code-point\n\t\t\tif ((m = C64M[base64.charCodeAt(i++)]) >= 0) {\n\t\t\t\ta = m;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (i >= l) {\n\t\t\t\tbreak OUTER;\n\t\t\t}\n\t\t}\n\t\tfor (;;) {\n\t\t\t// eslint-disable-next-line unicorn/prefer-code-point\n\t\t\tif ((m = C64M[base64.charCodeAt(i++)]) >= 0) {\n\t\t\t\tb = m;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (i >= l) {\n\t\t\t\tbreak OUTER;\n\t\t\t}\n\t\t}\n\t\tfor (;;) {\n\t\t\t// eslint-disable-next-line unicorn/prefer-code-point\n\t\t\tif ((m = C64M[base64.charCodeAt(i++)]) >= 0) {\n\t\t\t\tc = m;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (i >= l) {\n\t\t\t\tbreak OUTER;\n\t\t\t}\n\t\t}\n\t\tfor (;;) {\n\t\t\t// eslint-disable-next-line unicorn/prefer-code-point\n\t\t\tif ((m = C64M[base64.charCodeAt(i++)]) >= 0) {\n\t\t\t\td = m;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (i >= l) {\n\t\t\t\tbreak OUTER;\n\t\t\t}\n\t\t}\n\t\t// eslint-disable-next-line no-bitwise\n\t\tz = ((a & B6) << 18) | ((b & B6) << 12) | ((c & B6) << 6) | (d & B6);\n\t\t// eslint-disable-next-line default-case, no-nested-ternary\n\t\tswitch (c > B6 ? (d > B6 ? 2 : 0) : d > B6 ? 1 : 0) {\n\t\t\tcase 0: {\n\t\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t\tr.push((z >> 16) & B8, (z >> 8) & B8, z & B8);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 1: {\n\t\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t\tr.push((z >> 16) & B8, (z >> 8) & B8);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 2: {\n\t\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t\tr.push((z >> 16) & B8);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn new Uint8Array(r);\n}\n","var dom = require('./dom')\nexports.DOMImplementation = dom.DOMImplementation\nexports.XMLSerializer = dom.XMLSerializer\nexports.DOMParser = require('./dom-parser').DOMParser\n","var conventions = require(\"./conventions\");\n\nvar find = conventions.find;\nvar NAMESPACE = conventions.NAMESPACE;\n\n/**\n * A prerequisite for `[].filter`, to drop elements that are empty\n * @param {string} input\n * @returns {boolean}\n */\nfunction notEmptyString (input) {\n\treturn input !== ''\n}\n/**\n * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace\n * @see https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * @param {string} input\n * @returns {string[]} (can be empty)\n */\nfunction splitOnASCIIWhitespace(input) {\n\t// U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\n\treturn input ? input.split(/[\\t\\n\\f\\r ]+/).filter(notEmptyString) : []\n}\n\n/**\n * Adds element as a key to current if it is not already present.\n *\n * @param {Record<string, boolean | undefined>} current\n * @param {string} element\n * @returns {Record<string, boolean | undefined>}\n */\nfunction orderedSetReducer (current, element) {\n\tif (!current.hasOwnProperty(element)) {\n\t\tcurrent[element] = true;\n\t}\n\treturn current;\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#ordered-set\n * @param {string} input\n * @returns {string[]}\n */\nfunction toOrderedSet(input) {\n\tif (!input) return [];\n\tvar list = splitOnASCIIWhitespace(input);\n\treturn Object.keys(list.reduce(orderedSetReducer, {}))\n}\n\n/**\n * Uses `list.indexOf` to implement something like `Array.prototype.includes`,\n * which we can not rely on being available.\n *\n * @param {any[]} list\n * @returns {function(any): boolean}\n */\nfunction arrayIncludes (list) {\n\treturn function(element) {\n\t\treturn list && list.indexOf(element) !== -1;\n\t}\n}\n\nfunction copy(src,dest){\n\tfor(var p in src){\n\t\tif (Object.prototype.hasOwnProperty.call(src, p)) {\n\t\t\tdest[p] = src[p];\n\t\t}\n\t}\n}\n\n/**\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n */\nfunction _extends(Class,Super){\n\tvar pt = Class.prototype;\n\tif(!(pt instanceof Super)){\n\t\tfunction t(){};\n\t\tt.prototype = Super.prototype;\n\t\tt = new t();\n\t\tcopy(pt,t);\n\t\tClass.prototype = pt = t;\n\t}\n\tif(pt.constructor != Class){\n\t\tif(typeof Class != 'function'){\n\t\t\tconsole.error(\"unknown Class:\"+Class)\n\t\t}\n\t\tpt.constructor = Class\n\t}\n}\n\n// Node Types\nvar NodeType = {}\nvar ELEMENT_NODE                = NodeType.ELEMENT_NODE                = 1;\nvar ATTRIBUTE_NODE              = NodeType.ATTRIBUTE_NODE              = 2;\nvar TEXT_NODE                   = NodeType.TEXT_NODE                   = 3;\nvar CDATA_SECTION_NODE          = NodeType.CDATA_SECTION_NODE          = 4;\nvar ENTITY_REFERENCE_NODE       = NodeType.ENTITY_REFERENCE_NODE       = 5;\nvar ENTITY_NODE                 = NodeType.ENTITY_NODE                 = 6;\nvar PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\nvar COMMENT_NODE                = NodeType.COMMENT_NODE                = 8;\nvar DOCUMENT_NODE               = NodeType.DOCUMENT_NODE               = 9;\nvar DOCUMENT_TYPE_NODE          = NodeType.DOCUMENT_TYPE_NODE          = 10;\nvar DOCUMENT_FRAGMENT_NODE      = NodeType.DOCUMENT_FRAGMENT_NODE      = 11;\nvar NOTATION_NODE               = NodeType.NOTATION_NODE               = 12;\n\n// ExceptionCode\nvar ExceptionCode = {}\nvar ExceptionMessage = {};\nvar INDEX_SIZE_ERR              = ExceptionCode.INDEX_SIZE_ERR              = ((ExceptionMessage[1]=\"Index size error\"),1);\nvar DOMSTRING_SIZE_ERR          = ExceptionCode.DOMSTRING_SIZE_ERR          = ((ExceptionMessage[2]=\"DOMString size error\"),2);\nvar HIERARCHY_REQUEST_ERR       = ExceptionCode.HIERARCHY_REQUEST_ERR       = ((ExceptionMessage[3]=\"Hierarchy request error\"),3);\nvar WRONG_DOCUMENT_ERR          = ExceptionCode.WRONG_DOCUMENT_ERR          = ((ExceptionMessage[4]=\"Wrong document\"),4);\nvar INVALID_CHARACTER_ERR       = ExceptionCode.INVALID_CHARACTER_ERR       = ((ExceptionMessage[5]=\"Invalid character\"),5);\nvar NO_DATA_ALLOWED_ERR         = ExceptionCode.NO_DATA_ALLOWED_ERR         = ((ExceptionMessage[6]=\"No data allowed\"),6);\nvar NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ((ExceptionMessage[7]=\"No modification allowed\"),7);\nvar NOT_FOUND_ERR               = ExceptionCode.NOT_FOUND_ERR               = ((ExceptionMessage[8]=\"Not found\"),8);\nvar NOT_SUPPORTED_ERR           = ExceptionCode.NOT_SUPPORTED_ERR           = ((ExceptionMessage[9]=\"Not supported\"),9);\nvar INUSE_ATTRIBUTE_ERR         = ExceptionCode.INUSE_ATTRIBUTE_ERR         = ((ExceptionMessage[10]=\"Attribute in use\"),10);\n//level2\nvar INVALID_STATE_ERR        \t= ExceptionCode.INVALID_STATE_ERR        \t= ((ExceptionMessage[11]=\"Invalid state\"),11);\nvar SYNTAX_ERR               \t= ExceptionCode.SYNTAX_ERR               \t= ((ExceptionMessage[12]=\"Syntax error\"),12);\nvar INVALID_MODIFICATION_ERR \t= ExceptionCode.INVALID_MODIFICATION_ERR \t= ((ExceptionMessage[13]=\"Invalid modification\"),13);\nvar NAMESPACE_ERR            \t= ExceptionCode.NAMESPACE_ERR           \t= ((ExceptionMessage[14]=\"Invalid namespace\"),14);\nvar INVALID_ACCESS_ERR       \t= ExceptionCode.INVALID_ACCESS_ERR      \t= ((ExceptionMessage[15]=\"Invalid access\"),15);\n\n/**\n * DOM Level 2\n * Object DOMException\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n */\nfunction DOMException(code, message) {\n\tif(message instanceof Error){\n\t\tvar error = message;\n\t}else{\n\t\terror = this;\n\t\tError.call(this, ExceptionMessage[code]);\n\t\tthis.message = ExceptionMessage[code];\n\t\tif(Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n\t}\n\terror.code = code;\n\tif(message) this.message = this.message + \": \" + message;\n\treturn error;\n};\nDOMException.prototype = Error.prototype;\ncopy(ExceptionCode,DOMException)\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n * The items in the NodeList are accessible via an integral index, starting from 0.\n */\nfunction NodeList() {\n};\nNodeList.prototype = {\n\t/**\n\t * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n\t * @standard level1\n\t */\n\tlength:0,\n\t/**\n\t * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n\t * @standard level1\n\t * @param index  unsigned long\n\t *   Index into the collection.\n\t * @return Node\n\t * \tThe node at the indexth position in the NodeList, or null if that is not a valid index.\n\t */\n\titem: function(index) {\n\t\treturn index >= 0 && index < this.length ? this[index] : null;\n\t},\n\ttoString:function(isHTML,nodeFilter){\n\t\tfor(var buf = [], i = 0;i<this.length;i++){\n\t\t\tserializeToString(this[i],buf,isHTML,nodeFilter);\n\t\t}\n\t\treturn buf.join('');\n\t},\n\t/**\n\t * @private\n\t * @param {function (Node):boolean} predicate\n\t * @returns {Node[]}\n\t */\n\tfilter: function (predicate) {\n\t\treturn Array.prototype.filter.call(this, predicate);\n\t},\n\t/**\n\t * @private\n\t * @param {Node} item\n\t * @returns {number}\n\t */\n\tindexOf: function (item) {\n\t\treturn Array.prototype.indexOf.call(this, item);\n\t},\n};\n\nfunction LiveNodeList(node,refresh){\n\tthis._node = node;\n\tthis._refresh = refresh\n\t_updateLiveList(this);\n}\nfunction _updateLiveList(list){\n\tvar inc = list._node._inc || list._node.ownerDocument._inc;\n\tif (list._inc !== inc) {\n\t\tvar ls = list._refresh(list._node);\n\t\t__set__(list,'length',ls.length);\n\t\tif (!list.$$length || ls.length < list.$$length) {\n\t\t\tfor (var i = ls.length; i in list; i++) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\n\t\t\t\t\tdelete list[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcopy(ls,list);\n\t\tlist._inc = inc;\n\t}\n}\nLiveNodeList.prototype.item = function(i){\n\t_updateLiveList(this);\n\treturn this[i] || null;\n}\n\n_extends(LiveNodeList,NodeList);\n\n/**\n * Objects implementing the NamedNodeMap interface are used\n * to represent collections of nodes that can be accessed by name.\n * Note that NamedNodeMap does not inherit from NodeList;\n * NamedNodeMaps are not maintained in any particular order.\n * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,\n * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\n * and does not imply that the DOM specifies an order to these Nodes.\n * NamedNodeMap objects in the DOM are live.\n * used for attributes or DocumentType entities\n */\nfunction NamedNodeMap() {\n};\n\nfunction _findNodeIndex(list,node){\n\tvar i = list.length;\n\twhile(i--){\n\t\tif(list[i] === node){return i}\n\t}\n}\n\nfunction _addNamedNode(el,list,newAttr,oldAttr){\n\tif(oldAttr){\n\t\tlist[_findNodeIndex(list,oldAttr)] = newAttr;\n\t}else{\n\t\tlist[list.length++] = newAttr;\n\t}\n\tif(el){\n\t\tnewAttr.ownerElement = el;\n\t\tvar doc = el.ownerDocument;\n\t\tif(doc){\n\t\t\toldAttr && _onRemoveAttribute(doc,el,oldAttr);\n\t\t\t_onAddAttribute(doc,el,newAttr);\n\t\t}\n\t}\n}\nfunction _removeNamedNode(el,list,attr){\n\t//console.log('remove attr:'+attr)\n\tvar i = _findNodeIndex(list,attr);\n\tif(i>=0){\n\t\tvar lastIndex = list.length-1\n\t\twhile(i<lastIndex){\n\t\t\tlist[i] = list[++i]\n\t\t}\n\t\tlist.length = lastIndex;\n\t\tif(el){\n\t\t\tvar doc = el.ownerDocument;\n\t\t\tif(doc){\n\t\t\t\t_onRemoveAttribute(doc,el,attr);\n\t\t\t\tattr.ownerElement = null;\n\t\t\t}\n\t\t}\n\t}else{\n\t\tthrow new DOMException(NOT_FOUND_ERR,new Error(el.tagName+'@'+attr))\n\t}\n}\nNamedNodeMap.prototype = {\n\tlength:0,\n\titem:NodeList.prototype.item,\n\tgetNamedItem: function(key) {\n//\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n//\t\t\treturn null;\n//\t\t}\n\t\t//console.log()\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar attr = this[i];\n\t\t\t//console.log(attr.nodeName,key)\n\t\t\tif(attr.nodeName == key){\n\t\t\t\treturn attr;\n\t\t\t}\n\t\t}\n\t},\n\tsetNamedItem: function(attr) {\n\t\tvar el = attr.ownerElement;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\tvar oldAttr = this.getNamedItem(attr.nodeName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\t/* returns Node */\n\tsetNamedItemNS: function(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n\t\tvar el = attr.ownerElement, oldAttr;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\toldAttr = this.getNamedItemNS(attr.namespaceURI,attr.localName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\n\t/* returns Node */\n\tremoveNamedItem: function(key) {\n\t\tvar attr = this.getNamedItem(key);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\n\n\t},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n\n\t//for level2\n\tremoveNamedItemNS:function(namespaceURI,localName){\n\t\tvar attr = this.getNamedItemNS(namespaceURI,localName);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\t},\n\tgetNamedItemNS: function(namespaceURI, localName) {\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar node = this[i];\n\t\t\tif(node.localName == localName && node.namespaceURI == namespaceURI){\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n};\n\n/**\n * The DOMImplementation interface represents an object providing methods\n * which are not dependent on any particular document.\n * Such an object is returned by the `Document.implementation` property.\n *\n * __The individual methods describe the differences compared to the specs.__\n *\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\n * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)\n * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\n * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\n * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\n */\nfunction DOMImplementation() {\n}\n\nDOMImplementation.prototype = {\n\t/**\n\t * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.\n\t * The different implementations fairly diverged in what kind of features were reported.\n\t * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.\n\t *\n\t * @deprecated It is deprecated and modern browsers return true in all cases.\n\t *\n\t * @param {string} feature\n\t * @param {string} [version]\n\t * @returns {boolean} always true\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\n\t * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\n\t */\n\thasFeature: function(feature, version) {\n\t\t\treturn true;\n\t},\n\t/**\n\t * Creates an XML Document object of the specified type with its document element.\n\t *\n\t * __It behaves slightly different from the description in the living standard__:\n\t * - There is no interface/class `XMLDocument`, it returns a `Document` instance.\n\t * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string|null} namespaceURI\n\t * @param {string} qualifiedName\n\t * @param {DocumentType=null} doctype\n\t * @returns {Document}\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocument: function(namespaceURI,  qualifiedName, doctype){\n\t\tvar doc = new Document();\n\t\tdoc.implementation = this;\n\t\tdoc.childNodes = new NodeList();\n\t\tdoc.doctype = doctype || null;\n\t\tif (doctype){\n\t\t\tdoc.appendChild(doctype);\n\t\t}\n\t\tif (qualifiedName){\n\t\t\tvar root = doc.createElementNS(namespaceURI, qualifiedName);\n\t\t\tdoc.appendChild(root);\n\t\t}\n\t\treturn doc;\n\t},\n\t/**\n\t * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.\n\t *\n\t * __This behavior is slightly different from the in the specs__:\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string} qualifiedName\n\t * @param {string} [publicId]\n\t * @param {string} [systemId]\n\t * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation\n\t * \t\t\t\t  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocumentType: function(qualifiedName, publicId, systemId){\n\t\tvar node = new DocumentType();\n\t\tnode.name = qualifiedName;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.publicId = publicId || '';\n\t\tnode.systemId = systemId || '';\n\n\t\treturn node;\n\t}\n};\n\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n */\n\nfunction Node() {\n};\n\nNode.prototype = {\n\tfirstChild : null,\n\tlastChild : null,\n\tpreviousSibling : null,\n\tnextSibling : null,\n\tattributes : null,\n\tparentNode : null,\n\tchildNodes : null,\n\townerDocument : null,\n\tnodeValue : null,\n\tnamespaceURI : null,\n\tprefix : null,\n\tlocalName : null,\n\t// Modified in DOM Level 2:\n\tinsertBefore:function(newChild, refChild){//raises\n\t\treturn _insertBefore(this,newChild,refChild);\n\t},\n\treplaceChild:function(newChild, oldChild){//raises\n\t\t_insertBefore(this, newChild,oldChild, assertPreReplacementValidityInDocument);\n\t\tif(oldChild){\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t},\n\tremoveChild:function(oldChild){\n\t\treturn _removeChild(this,oldChild);\n\t},\n\tappendChild:function(newChild){\n\t\treturn this.insertBefore(newChild,null);\n\t},\n\thasChildNodes:function(){\n\t\treturn this.firstChild != null;\n\t},\n\tcloneNode:function(deep){\n\t\treturn cloneNode(this.ownerDocument||this,this,deep);\n\t},\n\t// Modified in DOM Level 2:\n\tnormalize:function(){\n\t\tvar child = this.firstChild;\n\t\twhile(child){\n\t\t\tvar next = child.nextSibling;\n\t\t\tif(next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE){\n\t\t\t\tthis.removeChild(next);\n\t\t\t\tchild.appendData(next.data);\n\t\t\t}else{\n\t\t\t\tchild.normalize();\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t}\n\t},\n  \t// Introduced in DOM Level 2:\n\tisSupported:function(feature, version){\n\t\treturn this.ownerDocument.implementation.hasFeature(feature,version);\n\t},\n    // Introduced in DOM Level 2:\n    hasAttributes:function(){\n    \treturn this.attributes.length>0;\n    },\n\t/**\n\t * Look up the prefix associated to the given namespace URI, starting from this node.\n\t * **The default namespace declarations are ignored by this method.**\n\t * See Namespace Prefix Lookup for details on the algorithm used by this method.\n\t *\n\t * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._\n\t *\n\t * @param {string | null} namespaceURI\n\t * @returns {string | null}\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\n\t * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\n\t * @see https://github.com/xmldom/xmldom/issues/322\n\t */\n    lookupPrefix:function(namespaceURI){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tfor(var n in map){\n\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(map, n) && map[n] === namespaceURI) {\n\t\t\t\t\t\t\treturn n;\n\t\t\t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    lookupNamespaceURI:function(prefix){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tif(Object.prototype.hasOwnProperty.call(map, prefix)){\n    \t\t\t\treturn map[prefix] ;\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    isDefaultNamespace:function(namespaceURI){\n    \tvar prefix = this.lookupPrefix(namespaceURI);\n    \treturn prefix == null;\n    }\n};\n\n\nfunction _xmlEncoder(c){\n\treturn c == '<' && '&lt;' ||\n         c == '>' && '&gt;' ||\n         c == '&' && '&amp;' ||\n         c == '\"' && '&quot;' ||\n         '&#'+c.charCodeAt()+';'\n}\n\n\ncopy(NodeType,Node);\ncopy(NodeType,Node.prototype);\n\n/**\n * @param callback return true for continue,false for break\n * @return boolean true: break visit;\n */\nfunction _visitNode(node,callback){\n\tif(callback(node)){\n\t\treturn true;\n\t}\n\tif(node = node.firstChild){\n\t\tdo{\n\t\t\tif(_visitNode(node,callback)){return true}\n        }while(node=node.nextSibling)\n    }\n}\n\n\n\nfunction Document(){\n\tthis.ownerDocument = this;\n}\n\nfunction _onAddAttribute(doc,el,newAttr){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tel._nsMap[newAttr.prefix?newAttr.localName:''] = newAttr.value\n\t}\n}\n\nfunction _onRemoveAttribute(doc,el,newAttr,remove){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tdelete el._nsMap[newAttr.prefix?newAttr.localName:'']\n\t}\n}\n\n/**\n * Updates `el.childNodes`, updating the indexed items and it's `length`.\n * Passing `newChild` means it will be appended.\n * Otherwise it's assumed that an item has been removed,\n * and `el.firstNode` and it's `.nextSibling` are used\n * to walk the current list of child nodes.\n *\n * @param {Document} doc\n * @param {Node} el\n * @param {Node} [newChild]\n * @private\n */\nfunction _onUpdateChild (doc, el, newChild) {\n\tif(doc && doc._inc){\n\t\tdoc._inc++;\n\t\t//update childNodes\n\t\tvar cs = el.childNodes;\n\t\tif (newChild) {\n\t\t\tcs[cs.length++] = newChild;\n\t\t} else {\n\t\t\tvar child = el.firstChild;\n\t\t\tvar i = 0;\n\t\t\twhile (child) {\n\t\t\t\tcs[i++] = child;\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t\tcs.length = i;\n\t\t\tdelete cs[cs.length];\n\t\t}\n\t}\n}\n\n/**\n * Removes the connections between `parentNode` and `child`\n * and any existing `child.previousSibling` or `child.nextSibling`.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n *\n * @param {Node} parentNode\n * @param {Node} child\n * @returns {Node} the child that was removed.\n * @private\n */\nfunction _removeChild (parentNode, child) {\n\tvar previous = child.previousSibling;\n\tvar next = child.nextSibling;\n\tif (previous) {\n\t\tprevious.nextSibling = next;\n\t} else {\n\t\tparentNode.firstChild = next;\n\t}\n\tif (next) {\n\t\tnext.previousSibling = previous;\n\t} else {\n\t\tparentNode.lastChild = previous;\n\t}\n\tchild.parentNode = null;\n\tchild.previousSibling = null;\n\tchild.nextSibling = null;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode);\n\treturn child;\n}\n\n/**\n * Returns `true` if `node` can be a parent for insertion.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasValidParentNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(node.nodeType === Node.DOCUMENT_NODE || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node.ELEMENT_NODE)\n\t);\n}\n\n/**\n * Returns `true` if `node` can be inserted according to it's `nodeType`.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasInsertableNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(isElementNode(node) ||\n\t\t\tisTextNode(node) ||\n\t\t\tisDocTypeNode(node) ||\n\t\t\tnode.nodeType === Node.DOCUMENT_FRAGMENT_NODE ||\n\t\t\tnode.nodeType === Node.COMMENT_NODE ||\n\t\t\tnode.nodeType === Node.PROCESSING_INSTRUCTION_NODE)\n\t);\n}\n\n/**\n * Returns true if `node` is a DOCTYPE node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isDocTypeNode(node) {\n\treturn node && node.nodeType === Node.DOCUMENT_TYPE_NODE;\n}\n\n/**\n * Returns true if the node is an element\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isElementNode(node) {\n\treturn node && node.nodeType === Node.ELEMENT_NODE;\n}\n/**\n * Returns true if `node` is a text node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isTextNode(node) {\n\treturn node && node.nodeType === Node.TEXT_NODE;\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Document} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementInsertionPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\tif (find(parentChildNodes, isElementNode) || isDocTypeNode(child)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Node} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementReplacementPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\n\tfunction hasElementChildThatIsNotChild(node) {\n\t\treturn isElementNode(node) && node !== child;\n\t}\n\n\tif (find(parentChildNodes, hasElementChildThatIsNotChild)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * @private\n * Steps 1-5 of the checks before inserting and before replacing a child are the same.\n *\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidity1to5(parent, node, child) {\n\t// 1. If `parent` is not a Document, DocumentFragment, or Element node, then throw a \"HierarchyRequestError\" DOMException.\n\tif (!hasValidParentNodeType(parent)) {\n\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Unexpected parent node type ' + parent.nodeType);\n\t}\n\t// 2. If `node` is a host-including inclusive ancestor of `parent`, then throw a \"HierarchyRequestError\" DOMException.\n\t// not implemented!\n\t// 3. If `child` is non-null and its parent is not `parent`, then throw a \"NotFoundError\" DOMException.\n\tif (child && child.parentNode !== parent) {\n\t\tthrow new DOMException(NOT_FOUND_ERR, 'child not in parent');\n\t}\n\tif (\n\t\t// 4. If `node` is not a DocumentFragment, DocumentType, Element, or CharacterData node, then throw a \"HierarchyRequestError\" DOMException.\n\t\t!hasInsertableNodeType(node) ||\n\t\t// 5. If either `node` is a Text node and `parent` is a document,\n\t\t// the sax parser currently adds top level text nodes, this will be fixed in 0.9.0\n\t\t// || (node.nodeType === Node.TEXT_NODE && parent.nodeType === Node.DOCUMENT_NODE)\n\t\t// or `node` is a doctype and `parent` is not a document, then throw a \"HierarchyRequestError\" DOMException.\n\t\t(isDocTypeNode(node) && parent.nodeType !== Node.DOCUMENT_NODE)\n\t) {\n\t\tthrow new DOMException(\n\t\t\tHIERARCHY_REQUEST_ERR,\n\t\t\t'Unexpected node type ' + node.nodeType + ' for parent node type ' + parent.nodeType\n\t\t);\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If node has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child,\n\t\t// `child` is a doctype, or `child` is non-null and a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child, `child` is a doctype,\n\t\t// or `child` is non-null and a doctype is following `child`.\n\t\tif (!isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\t// `parent` has a doctype child,\n\t\tif (find(parentChildNodes, isDocTypeNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// `child` is non-null and an element is preceding `child`,\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t\t// or `child` is null and `parent` has an element child.\n\t\tif (!child && parentElementChild) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can not be appended since element is present');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreReplacementValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If `node` has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (!isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\tfunction hasDoctypeChildThatIsNotChild(node) {\n\t\t\treturn isDocTypeNode(node) && node !== child;\n\t\t}\n\n\t\t// `parent` has a doctype child that is not `child`,\n\t\tif (find(parentChildNodes, hasDoctypeChildThatIsNotChild)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// or an element is preceding `child`.\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction _insertBefore(parent, node, child, _inDocumentAssertion) {\n\t// To ensure pre-insertion validity of a node into a parent before a child, run these steps:\n\tassertPreInsertionValidity1to5(parent, node, child);\n\n\t// If parent is a document, and any of the statements below, switched on the interface node implements,\n\t// are true, then throw a \"HierarchyRequestError\" DOMException.\n\tif (parent.nodeType === Node.DOCUMENT_NODE) {\n\t\t(_inDocumentAssertion || assertPreInsertionValidityInDocument)(parent, node, child);\n\t}\n\n\tvar cp = node.parentNode;\n\tif(cp){\n\t\tcp.removeChild(node);//remove and update\n\t}\n\tif(node.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\tvar newFirst = node.firstChild;\n\t\tif (newFirst == null) {\n\t\t\treturn node;\n\t\t}\n\t\tvar newLast = node.lastChild;\n\t}else{\n\t\tnewFirst = newLast = node;\n\t}\n\tvar pre = child ? child.previousSibling : parent.lastChild;\n\n\tnewFirst.previousSibling = pre;\n\tnewLast.nextSibling = child;\n\n\n\tif(pre){\n\t\tpre.nextSibling = newFirst;\n\t}else{\n\t\tparent.firstChild = newFirst;\n\t}\n\tif(child == null){\n\t\tparent.lastChild = newLast;\n\t}else{\n\t\tchild.previousSibling = newLast;\n\t}\n\tdo{\n\t\tnewFirst.parentNode = parent;\n\t}while(newFirst !== newLast && (newFirst= newFirst.nextSibling))\n\t_onUpdateChild(parent.ownerDocument||parent, parent);\n\t//console.log(parent.lastChild.nextSibling == null)\n\tif (node.nodeType == DOCUMENT_FRAGMENT_NODE) {\n\t\tnode.firstChild = node.lastChild = null;\n\t}\n\treturn node;\n}\n\n/**\n * Appends `newChild` to `parentNode`.\n * If `newChild` is already connected to a `parentNode` it is first removed from it.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n * @param {Node} parentNode\n * @param {Node} newChild\n * @returns {Node}\n * @private\n */\nfunction _appendSingleChild (parentNode, newChild) {\n\tif (newChild.parentNode) {\n\t\tnewChild.parentNode.removeChild(newChild);\n\t}\n\tnewChild.parentNode = parentNode;\n\tnewChild.previousSibling = parentNode.lastChild;\n\tnewChild.nextSibling = null;\n\tif (newChild.previousSibling) {\n\t\tnewChild.previousSibling.nextSibling = newChild;\n\t} else {\n\t\tparentNode.firstChild = newChild;\n\t}\n\tparentNode.lastChild = newChild;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode, newChild);\n\treturn newChild;\n}\n\nDocument.prototype = {\n\t//implementation : null,\n\tnodeName :  '#document',\n\tnodeType :  DOCUMENT_NODE,\n\t/**\n\t * The DocumentType node of the document.\n\t *\n\t * @readonly\n\t * @type DocumentType\n\t */\n\tdoctype :  null,\n\tdocumentElement :  null,\n\t_inc : 1,\n\n\tinsertBefore :  function(newChild, refChild){//raises\n\t\tif(newChild.nodeType == DOCUMENT_FRAGMENT_NODE){\n\t\t\tvar child = newChild.firstChild;\n\t\t\twhile(child){\n\t\t\t\tvar next = child.nextSibling;\n\t\t\t\tthis.insertBefore(child,refChild);\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t\treturn newChild;\n\t\t}\n\t\t_insertBefore(this, newChild, refChild);\n\t\tnewChild.ownerDocument = this;\n\t\tif (this.documentElement === null && newChild.nodeType === ELEMENT_NODE) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\n\t\treturn newChild;\n\t},\n\tremoveChild :  function(oldChild){\n\t\tif(this.documentElement == oldChild){\n\t\t\tthis.documentElement = null;\n\t\t}\n\t\treturn _removeChild(this,oldChild);\n\t},\n\treplaceChild: function (newChild, oldChild) {\n\t\t//raises\n\t\t_insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);\n\t\tnewChild.ownerDocument = this;\n\t\tif (oldChild) {\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t\tif (isElementNode(newChild)) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\t},\n\t// Introduced in DOM Level 2:\n\timportNode : function(importedNode,deep){\n\t\treturn importNode(this,importedNode,deep);\n\t},\n\t// Introduced in DOM Level 2:\n\tgetElementById :\tfunction(id){\n\t\tvar rtv = null;\n\t\t_visitNode(this.documentElement,function(node){\n\t\t\tif(node.nodeType == ELEMENT_NODE){\n\t\t\t\tif(node.getAttribute('id') == id){\n\t\t\t\t\trtv = node;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn rtv;\n\t},\n\n\t/**\n\t * The `getElementsByClassName` method of `Document` interface returns an array-like object\n\t * of all child elements which have **all** of the given class name(s).\n\t *\n\t * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.\n\t *\n\t *\n\t * Warning: This is a live LiveNodeList.\n\t * Changes in the DOM will reflect in the array as the changes occur.\n\t * If an element selected by this array no longer qualifies for the selector,\n\t * it will automatically be removed. Be aware of this for iteration purposes.\n\t *\n\t * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\n\t * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\n\t */\n\tgetElementsByClassName: function(classNames) {\n\t\tvar classNamesSet = toOrderedSet(classNames)\n\t\treturn new LiveNodeList(this, function(base) {\n\t\t\tvar ls = [];\n\t\t\tif (classNamesSet.length > 0) {\n\t\t\t\t_visitNode(base.documentElement, function(node) {\n\t\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE) {\n\t\t\t\t\t\tvar nodeClassNames = node.getAttribute('class')\n\t\t\t\t\t\t// can be null if the attribute does not exist\n\t\t\t\t\t\tif (nodeClassNames) {\n\t\t\t\t\t\t\t// before splitting and iterating just compare them for the most common case\n\t\t\t\t\t\t\tvar matches = classNames === nodeClassNames;\n\t\t\t\t\t\t\tif (!matches) {\n\t\t\t\t\t\t\t\tvar nodeClassNamesSet = toOrderedSet(nodeClassNames)\n\t\t\t\t\t\t\t\tmatches = classNamesSet.every(arrayIncludes(nodeClassNamesSet))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(matches) {\n\t\t\t\t\t\t\t\tls.push(node);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn ls;\n\t\t});\n\t},\n\n\t//document factory method:\n\tcreateElement :\tfunction(tagName){\n\t\tvar node = new Element();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = tagName;\n\t\tnode.tagName = tagName;\n\t\tnode.localName = tagName;\n\t\tnode.childNodes = new NodeList();\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\tcreateDocumentFragment :\tfunction(){\n\t\tvar node = new DocumentFragment();\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\treturn node;\n\t},\n\tcreateTextNode :\tfunction(data){\n\t\tvar node = new Text();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateComment :\tfunction(data){\n\t\tvar node = new Comment();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateCDATASection :\tfunction(data){\n\t\tvar node = new CDATASection();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateProcessingInstruction :\tfunction(target,data){\n\t\tvar node = new ProcessingInstruction();\n\t\tnode.ownerDocument = this;\n\t\tnode.tagName = node.nodeName = node.target = target;\n\t\tnode.nodeValue = node.data = data;\n\t\treturn node;\n\t},\n\tcreateAttribute :\tfunction(name){\n\t\tvar node = new Attr();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.name = name;\n\t\tnode.nodeName\t= name;\n\t\tnode.localName = name;\n\t\tnode.specified = true;\n\t\treturn node;\n\t},\n\tcreateEntityReference :\tfunction(name){\n\t\tvar node = new EntityReference();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.nodeName\t= name;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateElementNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Element();\n\t\tvar pl = qualifiedName.split(':');\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tnode.childNodes = new NodeList();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.tagName = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateAttributeNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Attr();\n\t\tvar pl = qualifiedName.split(':');\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.name = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tnode.specified = true;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\treturn node;\n\t}\n};\n_extends(Document,Node);\n\n\nfunction Element() {\n\tthis._nsMap = {};\n};\nElement.prototype = {\n\tnodeType : ELEMENT_NODE,\n\thasAttribute : function(name){\n\t\treturn this.getAttributeNode(name)!=null;\n\t},\n\tgetAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name);\n\t\treturn attr && attr.value || '';\n\t},\n\tgetAttributeNode : function(name){\n\t\treturn this.attributes.getNamedItem(name);\n\t},\n\tsetAttribute : function(name, value){\n\t\tvar attr = this.ownerDocument.createAttribute(name);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tremoveAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name)\n\t\tattr && this.removeAttributeNode(attr);\n\t},\n\n\t//four real opeartion method\n\tappendChild:function(newChild){\n\t\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\t\treturn this.insertBefore(newChild,null);\n\t\t}else{\n\t\t\treturn _appendSingleChild(this,newChild);\n\t\t}\n\t},\n\tsetAttributeNode : function(newAttr){\n\t\treturn this.attributes.setNamedItem(newAttr);\n\t},\n\tsetAttributeNodeNS : function(newAttr){\n\t\treturn this.attributes.setNamedItemNS(newAttr);\n\t},\n\tremoveAttributeNode : function(oldAttr){\n\t\t//console.log(this == oldAttr.ownerElement)\n\t\treturn this.attributes.removeNamedItem(oldAttr.nodeName);\n\t},\n\t//get real attribute name,and remove it by removeAttributeNode\n\tremoveAttributeNS : function(namespaceURI, localName){\n\t\tvar old = this.getAttributeNodeNS(namespaceURI, localName);\n\t\told && this.removeAttributeNode(old);\n\t},\n\n\thasAttributeNS : function(namespaceURI, localName){\n\t\treturn this.getAttributeNodeNS(namespaceURI, localName)!=null;\n\t},\n\tgetAttributeNS : function(namespaceURI, localName){\n\t\tvar attr = this.getAttributeNodeNS(namespaceURI, localName);\n\t\treturn attr && attr.value || '';\n\t},\n\tsetAttributeNS : function(namespaceURI, qualifiedName, value){\n\t\tvar attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tgetAttributeNodeNS : function(namespaceURI, localName){\n\t\treturn this.attributes.getNamedItemNS(namespaceURI, localName);\n\t},\n\n\tgetElementsByTagName : function(tagName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t});\n\t},\n\tgetElementsByTagNameNS : function(namespaceURI, localName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\n\t\t});\n\t}\n};\nDocument.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\nDocument.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n\n\n_extends(Element,Node);\nfunction Attr() {\n};\nAttr.prototype.nodeType = ATTRIBUTE_NODE;\n_extends(Attr,Node);\n\n\nfunction CharacterData() {\n};\nCharacterData.prototype = {\n\tdata : '',\n\tsubstringData : function(offset, count) {\n\t\treturn this.data.substring(offset, offset+count);\n\t},\n\tappendData: function(text) {\n\t\ttext = this.data+text;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t},\n\tinsertData: function(offset,text) {\n\t\tthis.replaceData(offset,0,text);\n\n\t},\n\tappendChild:function(newChild){\n\t\tthrow new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])\n\t},\n\tdeleteData: function(offset, count) {\n\t\tthis.replaceData(offset,count,\"\");\n\t},\n\treplaceData: function(offset, count, text) {\n\t\tvar start = this.data.substring(0,offset);\n\t\tvar end = this.data.substring(offset+count);\n\t\ttext = start + text + end;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t}\n}\n_extends(CharacterData,Node);\nfunction Text() {\n};\nText.prototype = {\n\tnodeName : \"#text\",\n\tnodeType : TEXT_NODE,\n\tsplitText : function(offset) {\n\t\tvar text = this.data;\n\t\tvar newText = text.substring(offset);\n\t\ttext = text.substring(0, offset);\n\t\tthis.data = this.nodeValue = text;\n\t\tthis.length = text.length;\n\t\tvar newNode = this.ownerDocument.createTextNode(newText);\n\t\tif(this.parentNode){\n\t\t\tthis.parentNode.insertBefore(newNode, this.nextSibling);\n\t\t}\n\t\treturn newNode;\n\t}\n}\n_extends(Text,CharacterData);\nfunction Comment() {\n};\nComment.prototype = {\n\tnodeName : \"#comment\",\n\tnodeType : COMMENT_NODE\n}\n_extends(Comment,CharacterData);\n\nfunction CDATASection() {\n};\nCDATASection.prototype = {\n\tnodeName : \"#cdata-section\",\n\tnodeType : CDATA_SECTION_NODE\n}\n_extends(CDATASection,CharacterData);\n\n\nfunction DocumentType() {\n};\nDocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n_extends(DocumentType,Node);\n\nfunction Notation() {\n};\nNotation.prototype.nodeType = NOTATION_NODE;\n_extends(Notation,Node);\n\nfunction Entity() {\n};\nEntity.prototype.nodeType = ENTITY_NODE;\n_extends(Entity,Node);\n\nfunction EntityReference() {\n};\nEntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n_extends(EntityReference,Node);\n\nfunction DocumentFragment() {\n};\nDocumentFragment.prototype.nodeName =\t\"#document-fragment\";\nDocumentFragment.prototype.nodeType =\tDOCUMENT_FRAGMENT_NODE;\n_extends(DocumentFragment,Node);\n\n\nfunction ProcessingInstruction() {\n}\nProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n_extends(ProcessingInstruction,Node);\nfunction XMLSerializer(){}\nXMLSerializer.prototype.serializeToString = function(node,isHtml,nodeFilter){\n\treturn nodeSerializeToString.call(node,isHtml,nodeFilter);\n}\nNode.prototype.toString = nodeSerializeToString;\nfunction nodeSerializeToString(isHtml,nodeFilter){\n\tvar buf = [];\n\tvar refNode = this.nodeType == 9 && this.documentElement || this;\n\tvar prefix = refNode.prefix;\n\tvar uri = refNode.namespaceURI;\n\n\tif(uri && prefix == null){\n\t\t//console.log(prefix)\n\t\tvar prefix = refNode.lookupPrefix(uri);\n\t\tif(prefix == null){\n\t\t\t//isHTML = true;\n\t\t\tvar visibleNamespaces=[\n\t\t\t{namespace:uri,prefix:null}\n\t\t\t//{namespace:uri,prefix:''}\n\t\t\t]\n\t\t}\n\t}\n\tserializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);\n\t//console.log('###',this.nodeType,uri,prefix,buf.join(''))\n\treturn buf.join('');\n}\n\nfunction needNamespaceDefine(node, isHTML, visibleNamespaces) {\n\tvar prefix = node.prefix || '';\n\tvar uri = node.namespaceURI;\n\t// According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\n\t// and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\n\t// > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\n\t// in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\n\t// and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\n\t// > [...] Furthermore, the attribute value [...] must not be an empty string.\n\t// so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\n\tif (!uri) {\n\t\treturn false;\n\t}\n\tif (prefix === \"xml\" && uri === NAMESPACE.XML || uri === NAMESPACE.XMLNS) {\n\t\treturn false;\n\t}\n\n\tvar i = visibleNamespaces.length\n\twhile (i--) {\n\t\tvar ns = visibleNamespaces[i];\n\t\t// get namespace prefix\n\t\tif (ns.prefix === prefix) {\n\t\t\treturn ns.namespace !== uri;\n\t\t}\n\t}\n\treturn true;\n}\n/**\n * Well-formed constraint: No < in Attribute Values\n * > The replacement text of any entity referred to directly or indirectly\n * > in an attribute value must not contain a <.\n * @see https://www.w3.org/TR/xml11/#CleanAttrVals\n * @see https://www.w3.org/TR/xml11/#NT-AttValue\n *\n * Literal whitespace other than space that appear in attribute values\n * are serialized as their entity references, so they will be preserved.\n * (In contrast to whitespace literals in the input which are normalized to spaces)\n * @see https://www.w3.org/TR/xml11/#AVNormalize\n * @see https://w3c.github.io/DOM-Parsing/#serializing-an-element-s-attributes\n */\nfunction addSerializedAttribute(buf, qualifiedName, value) {\n\tbuf.push(' ', qualifiedName, '=\"', value.replace(/[<>&\"\\t\\n\\r]/g, _xmlEncoder), '\"')\n}\n\nfunction serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){\n\tif (!visibleNamespaces) {\n\t\tvisibleNamespaces = [];\n\t}\n\n\tif(nodeFilter){\n\t\tnode = nodeFilter(node);\n\t\tif(node){\n\t\t\tif(typeof node == 'string'){\n\t\t\t\tbuf.push(node);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}else{\n\t\t\treturn;\n\t\t}\n\t\t//buf.sort.apply(attrs, attributeSorter);\n\t}\n\n\tswitch(node.nodeType){\n\tcase ELEMENT_NODE:\n\t\tvar attrs = node.attributes;\n\t\tvar len = attrs.length;\n\t\tvar child = node.firstChild;\n\t\tvar nodeName = node.tagName;\n\n\t\tisHTML = NAMESPACE.isHTML(node.namespaceURI) || isHTML\n\n\t\tvar prefixedNodeName = nodeName\n\t\tif (!isHTML && !node.prefix && node.namespaceURI) {\n\t\t\tvar defaultNS\n\t\t\t// lookup current default ns from `xmlns` attribute\n\t\t\tfor (var ai = 0; ai < attrs.length; ai++) {\n\t\t\t\tif (attrs.item(ai).name === 'xmlns') {\n\t\t\t\t\tdefaultNS = attrs.item(ai).value\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!defaultNS) {\n\t\t\t\t// lookup current default ns in visibleNamespaces\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tdefaultNS = namespace.namespace\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (defaultNS !== node.namespaceURI) {\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tif (namespace.prefix) {\n\t\t\t\t\t\t\tprefixedNodeName = namespace.prefix + ':' + nodeName\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbuf.push('<', prefixedNodeName);\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\t// add namespaces for attributes\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (attr.prefix == 'xmlns') {\n\t\t\t\tvisibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });\n\t\t\t}else if(attr.nodeName == 'xmlns'){\n\t\t\t\tvisibleNamespaces.push({ prefix: '', namespace: attr.value });\n\t\t\t}\n\t\t}\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (needNamespaceDefine(attr,isHTML, visibleNamespaces)) {\n\t\t\t\tvar prefix = attr.prefix||'';\n\t\t\t\tvar uri = attr.namespaceURI;\n\t\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t\t}\n\t\t\tserializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t}\n\n\t\t// add namespace for current node\n\t\tif (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {\n\t\t\tvar prefix = node.prefix||'';\n\t\t\tvar uri = node.namespaceURI;\n\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t}\n\n\t\tif(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){\n\t\t\tbuf.push('>');\n\t\t\t//if is cdata child node\n\t\t\tif(isHTML && /^script$/i.test(nodeName)){\n\t\t\t\twhile(child){\n\t\t\t\t\tif(child.data){\n\t\t\t\t\t\tbuf.push(child.data);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\t}\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}else\n\t\t\t{\n\t\t\t\twhile(child){\n\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbuf.push('</',prefixedNodeName,'>');\n\t\t}else{\n\t\t\tbuf.push('/>');\n\t\t}\n\t\t// remove added visible namespaces\n\t\t//visibleNamespaces.length = startVisibleNamespaces;\n\t\treturn;\n\tcase DOCUMENT_NODE:\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t\treturn;\n\tcase ATTRIBUTE_NODE:\n\t\treturn addSerializedAttribute(buf, node.name, node.value);\n\tcase TEXT_NODE:\n\t\t/**\n\t\t * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\n\t\t * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\n\t\t * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\n\t\t * `&amp;` and `&lt;` respectively.\n\t\t * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\n\t\t * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\n\t\t * when that string is not marking the end of a CDATA section.\n\t\t *\n\t\t * In the content of elements, character data is any string of characters\n\t\t * which does not contain the start-delimiter of any markup\n\t\t * and does not include the CDATA-section-close delimiter, `]]>`.\n\t\t *\n\t\t * @see https://www.w3.org/TR/xml/#NT-CharData\n\t\t * @see https://w3c.github.io/DOM-Parsing/#xml-serializing-a-text-node\n\t\t */\n\t\treturn buf.push(node.data\n\t\t\t.replace(/[<&>]/g,_xmlEncoder)\n\t\t);\n\tcase CDATA_SECTION_NODE:\n\t\treturn buf.push( '<![CDATA[',node.data,']]>');\n\tcase COMMENT_NODE:\n\t\treturn buf.push( \"<!--\",node.data,\"-->\");\n\tcase DOCUMENT_TYPE_NODE:\n\t\tvar pubid = node.publicId;\n\t\tvar sysid = node.systemId;\n\t\tbuf.push('<!DOCTYPE ',node.name);\n\t\tif(pubid){\n\t\t\tbuf.push(' PUBLIC ', pubid);\n\t\t\tif (sysid && sysid!='.') {\n\t\t\t\tbuf.push(' ', sysid);\n\t\t\t}\n\t\t\tbuf.push('>');\n\t\t}else if(sysid && sysid!='.'){\n\t\t\tbuf.push(' SYSTEM ', sysid, '>');\n\t\t}else{\n\t\t\tvar sub = node.internalSubset;\n\t\t\tif(sub){\n\t\t\t\tbuf.push(\" [\",sub,\"]\");\n\t\t\t}\n\t\t\tbuf.push(\">\");\n\t\t}\n\t\treturn;\n\tcase PROCESSING_INSTRUCTION_NODE:\n\t\treturn buf.push( \"<?\",node.target,\" \",node.data,\"?>\");\n\tcase ENTITY_REFERENCE_NODE:\n\t\treturn buf.push( '&',node.nodeName,';');\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE:\n\tdefault:\n\t\tbuf.push('??',node.nodeName);\n\t}\n}\nfunction importNode(doc,node,deep){\n\tvar node2;\n\tswitch (node.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tnode2 = node.cloneNode(false);\n\t\tnode2.ownerDocument = doc;\n\t\t//var attrs = node2.attributes;\n\t\t//var len = attrs.length;\n\t\t//for(var i=0;i<len;i++){\n\t\t\t//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n\t\t//}\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tbreak;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t\tbreak;\n\t//case ENTITY_REFERENCE_NODE:\n\t//case PROCESSING_INSTRUCTION_NODE:\n\t////case TEXT_NODE:\n\t//case CDATA_SECTION_NODE:\n\t//case COMMENT_NODE:\n\t//\tdeep = false;\n\t//\tbreak;\n\t//case DOCUMENT_NODE:\n\t//case DOCUMENT_TYPE_NODE:\n\t//cannot be imported.\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE：\n\t//can not hit in level3\n\t//default:throw e;\n\t}\n\tif(!node2){\n\t\tnode2 = node.cloneNode(false);//false\n\t}\n\tnode2.ownerDocument = doc;\n\tnode2.parentNode = null;\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(importNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n//\n//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n//\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\nfunction cloneNode(doc,node,deep){\n\tvar node2 = new node.constructor();\n\tfor (var n in node) {\n\t\tif (Object.prototype.hasOwnProperty.call(node, n)) {\n\t\t\tvar v = node[n];\n\t\t\tif (typeof v != \"object\") {\n\t\t\t\tif (v != node2[n]) {\n\t\t\t\t\tnode2[n] = v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(node.childNodes){\n\t\tnode2.childNodes = new NodeList();\n\t}\n\tnode2.ownerDocument = doc;\n\tswitch (node2.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tvar attrs\t= node.attributes;\n\t\tvar attrs2\t= node2.attributes = new NamedNodeMap();\n\t\tvar len = attrs.length\n\t\tattrs2._ownerElement = node2;\n\t\tfor(var i=0;i<len;i++){\n\t\t\tnode2.setAttributeNode(cloneNode(doc,attrs.item(i),true));\n\t\t}\n\t\tbreak;;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t}\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(cloneNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n\nfunction __set__(object,key,value){\n\tobject[key] = value\n}\n//do dynamic\ntry{\n\tif(Object.defineProperty){\n\t\tObject.defineProperty(LiveNodeList.prototype,'length',{\n\t\t\tget:function(){\n\t\t\t\t_updateLiveList(this);\n\t\t\t\treturn this.$$length;\n\t\t\t}\n\t\t});\n\n\t\tObject.defineProperty(Node.prototype,'textContent',{\n\t\t\tget:function(){\n\t\t\t\treturn getTextContent(this);\n\t\t\t},\n\n\t\t\tset:function(data){\n\t\t\t\tswitch(this.nodeType){\n\t\t\t\tcase ELEMENT_NODE:\n\t\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\t\twhile(this.firstChild){\n\t\t\t\t\t\tthis.removeChild(this.firstChild);\n\t\t\t\t\t}\n\t\t\t\t\tif(data || String(data)){\n\t\t\t\t\t\tthis.appendChild(this.ownerDocument.createTextNode(data));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis.data = data;\n\t\t\t\t\tthis.value = data;\n\t\t\t\t\tthis.nodeValue = data;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tfunction getTextContent(node){\n\t\t\tswitch(node.nodeType){\n\t\t\tcase ELEMENT_NODE:\n\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\tvar buf = [];\n\t\t\t\tnode = node.firstChild;\n\t\t\t\twhile(node){\n\t\t\t\t\tif(node.nodeType!==7 && node.nodeType !==8){\n\t\t\t\t\t\tbuf.push(getTextContent(node));\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t}\n\t\t\t\treturn buf.join('');\n\t\t\tdefault:\n\t\t\t\treturn node.nodeValue;\n\t\t\t}\n\t\t}\n\n\t\t__set__ = function(object,key,value){\n\t\t\t//console.log(value)\n\t\t\tobject['$$'+key] = value\n\t\t}\n\t}\n}catch(e){//ie8\n}\n\n//if(typeof require == 'function'){\n\texports.DocumentType = DocumentType;\n\texports.DOMException = DOMException;\n\texports.DOMImplementation = DOMImplementation;\n\texports.Element = Element;\n\texports.Node = Node;\n\texports.NodeList = NodeList;\n\texports.XMLSerializer = XMLSerializer;\n//}\n","'use strict'\n\n/**\n * Ponyfill for `Array.prototype.find` which is only available in ES6 runtimes.\n *\n * Works with anything that has a `length` property and index access properties, including NodeList.\n *\n * @template {unknown} T\n * @param {Array<T> | ({length:number, [number]: T})} list\n * @param {function (item: T, index: number, list:Array<T> | ({length:number, [number]: T})):boolean} predicate\n * @param {Partial<Pick<ArrayConstructor['prototype'], 'find'>>?} ac `Array.prototype` by default,\n * \t\t\t\tallows injecting a custom implementation in tests\n * @returns {T | undefined}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n * @see https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.find\n */\nfunction find(list, predicate, ac) {\n\tif (ac === undefined) {\n\t\tac = Array.prototype;\n\t}\n\tif (list && typeof ac.find === 'function') {\n\t\treturn ac.find.call(list, predicate);\n\t}\n\tfor (var i = 0; i < list.length; i++) {\n\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\n\t\t\tvar item = list[i];\n\t\t\tif (predicate.call(undefined, item, i, list)) {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * \"Shallow freezes\" an object to render it immutable.\n * Uses `Object.freeze` if available,\n * otherwise the immutability is only in the type.\n *\n * Is used to create \"enum like\" objects.\n *\n * @template T\n * @param {T} object the object to freeze\n * @param {Pick<ObjectConstructor, 'freeze'> = Object} oc `Object` by default,\n * \t\t\t\tallows to inject custom object constructor for tests\n * @returns {Readonly<T>}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n */\nfunction freeze(object, oc) {\n\tif (oc === undefined) {\n\t\toc = Object\n\t}\n\treturn oc && typeof oc.freeze === 'function' ? oc.freeze(object) : object\n}\n\n/**\n * Since we can not rely on `Object.assign` we provide a simplified version\n * that is sufficient for our needs.\n *\n * @param {Object} target\n * @param {Object | null | undefined} source\n *\n * @returns {Object} target\n * @throws TypeError if target is not an object\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n * @see https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-object.assign\n */\nfunction assign(target, source) {\n\tif (target === null || typeof target !== 'object') {\n\t\tthrow new TypeError('target is not an object')\n\t}\n\tfor (var key in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, key)) {\n\t\t\ttarget[key] = source[key]\n\t\t}\n\t}\n\treturn target\n}\n\n/**\n * All mime types that are allowed as input to `DOMParser.parseFromString`\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02 MDN\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype WHATWG HTML Spec\n * @see DOMParser.prototype.parseFromString\n */\nvar MIME_TYPE = freeze({\n\t/**\n\t * `text/html`, the only mime type that triggers treating an XML document as HTML.\n\t *\n\t * @see DOMParser.SupportedType.isHTML\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring WHATWG HTML Spec\n\t */\n\tHTML: 'text/html',\n\n\t/**\n\t * Helper method to check a mime type if it indicates an HTML document\n\t *\n\t * @param {string} [value]\n\t * @returns {boolean}\n\t *\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring \t */\n\tisHTML: function (value) {\n\t\treturn value === MIME_TYPE.HTML\n\t},\n\n\t/**\n\t * `application/xml`, the standard mime type for XML documents.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType registration\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_APPLICATION: 'application/xml',\n\n\t/**\n\t * `text/html`, an alias for `application/xml`.\n\t *\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303\n\t * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_TEXT: 'text/xml',\n\n\t/**\n\t * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,\n\t * but is parsed as an XML document.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType registration\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec\n\t * @see https://en.wikipedia.org/wiki/XHTML Wikipedia\n\t */\n\tXML_XHTML_APPLICATION: 'application/xhtml+xml',\n\n\t/**\n\t * `image/svg+xml`,\n\t *\n\t * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration\n\t * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1\n\t * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia\n\t */\n\tXML_SVG_IMAGE: 'image/svg+xml',\n})\n\n/**\n * Namespaces that are used in this code base.\n *\n * @see http://www.w3.org/TR/REC-xml-names\n */\nvar NAMESPACE = freeze({\n\t/**\n\t * The XHTML namespace.\n\t *\n\t * @see http://www.w3.org/1999/xhtml\n\t */\n\tHTML: 'http://www.w3.org/1999/xhtml',\n\n\t/**\n\t * Checks if `uri` equals `NAMESPACE.HTML`.\n\t *\n\t * @param {string} [uri]\n\t *\n\t * @see NAMESPACE.HTML\n\t */\n\tisHTML: function (uri) {\n\t\treturn uri === NAMESPACE.HTML\n\t},\n\n\t/**\n\t * The SVG namespace.\n\t *\n\t * @see http://www.w3.org/2000/svg\n\t */\n\tSVG: 'http://www.w3.org/2000/svg',\n\n\t/**\n\t * The `xml:` namespace.\n\t *\n\t * @see http://www.w3.org/XML/1998/namespace\n\t */\n\tXML: 'http://www.w3.org/XML/1998/namespace',\n\n\t/**\n\t * The `xmlns:` namespace\n\t *\n\t * @see https://www.w3.org/2000/xmlns/\n\t */\n\tXMLNS: 'http://www.w3.org/2000/xmlns/',\n})\n\nexports.assign = assign;\nexports.find = find;\nexports.freeze = freeze;\nexports.MIME_TYPE = MIME_TYPE;\nexports.NAMESPACE = NAMESPACE;\n","var conventions = require(\"./conventions\");\nvar dom = require('./dom')\nvar entities = require('./entities');\nvar sax = require('./sax');\n\nvar DOMImplementation = dom.DOMImplementation;\n\nvar NAMESPACE = conventions.NAMESPACE;\n\nvar ParseError = sax.ParseError;\nvar XMLReader = sax.XMLReader;\n\n/**\n * Normalizes line ending according to https://www.w3.org/TR/xml11/#sec-line-ends:\n *\n * > XML parsed entities are often stored in computer files which,\n * > for editing convenience, are organized into lines.\n * > These lines are typically separated by some combination\n * > of the characters CARRIAGE RETURN (#xD) and LINE FEED (#xA).\n * >\n * > To simplify the tasks of applications, the XML processor must behave\n * > as if it normalized all line breaks in external parsed entities (including the document entity)\n * > on input, before parsing, by translating all of the following to a single #xA character:\n * >\n * > 1. the two-character sequence #xD #xA\n * > 2. the two-character sequence #xD #x85\n * > 3. the single character #x85\n * > 4. the single character #x2028\n * > 5. any #xD character that is not immediately followed by #xA or #x85.\n *\n * @param {string} input\n * @returns {string}\n */\nfunction normalizeLineEndings(input) {\n\treturn input\n\t\t.replace(/\\r[\\n\\u0085]/g, '\\n')\n\t\t.replace(/[\\r\\u0085\\u2028]/g, '\\n')\n}\n\n/**\n * @typedef Locator\n * @property {number} [columnNumber]\n * @property {number} [lineNumber]\n */\n\n/**\n * @typedef DOMParserOptions\n * @property {DOMHandler} [domBuilder]\n * @property {Function} [errorHandler]\n * @property {(string) => string} [normalizeLineEndings] used to replace line endings before parsing\n * \t\t\t\t\t\tdefaults to `normalizeLineEndings`\n * @property {Locator} [locator]\n * @property {Record<string, string>} [xmlns]\n *\n * @see normalizeLineEndings\n */\n\n/**\n * The DOMParser interface provides the ability to parse XML or HTML source code\n * from a string into a DOM `Document`.\n *\n * _xmldom is different from the spec in that it allows an `options` parameter,\n * to override the default behavior._\n *\n * @param {DOMParserOptions} [options]\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-parsing-and-serialization\n */\nfunction DOMParser(options){\n\tthis.options = options ||{locator:{}};\n}\n\nDOMParser.prototype.parseFromString = function(source,mimeType){\n\tvar options = this.options;\n\tvar sax =  new XMLReader();\n\tvar domBuilder = options.domBuilder || new DOMHandler();//contentHandler and LexicalHandler\n\tvar errorHandler = options.errorHandler;\n\tvar locator = options.locator;\n\tvar defaultNSMap = options.xmlns||{};\n\tvar isHTML = /\\/x?html?$/.test(mimeType);//mimeType.toLowerCase().indexOf('html') > -1;\n  \tvar entityMap = isHTML ? entities.HTML_ENTITIES : entities.XML_ENTITIES;\n\tif(locator){\n\t\tdomBuilder.setDocumentLocator(locator)\n\t}\n\n\tsax.errorHandler = buildErrorHandler(errorHandler,domBuilder,locator);\n\tsax.domBuilder = options.domBuilder || domBuilder;\n\tif(isHTML){\n\t\tdefaultNSMap[''] = NAMESPACE.HTML;\n\t}\n\tdefaultNSMap.xml = defaultNSMap.xml || NAMESPACE.XML;\n\tvar normalize = options.normalizeLineEndings || normalizeLineEndings;\n\tif (source && typeof source === 'string') {\n\t\tsax.parse(\n\t\t\tnormalize(source),\n\t\t\tdefaultNSMap,\n\t\t\tentityMap\n\t\t)\n\t} else {\n\t\tsax.errorHandler.error('invalid doc source')\n\t}\n\treturn domBuilder.doc;\n}\nfunction buildErrorHandler(errorImpl,domBuilder,locator){\n\tif(!errorImpl){\n\t\tif(domBuilder instanceof DOMHandler){\n\t\t\treturn domBuilder;\n\t\t}\n\t\terrorImpl = domBuilder ;\n\t}\n\tvar errorHandler = {}\n\tvar isCallback = errorImpl instanceof Function;\n\tlocator = locator||{}\n\tfunction build(key){\n\t\tvar fn = errorImpl[key];\n\t\tif(!fn && isCallback){\n\t\t\tfn = errorImpl.length == 2?function(msg){errorImpl(key,msg)}:errorImpl;\n\t\t}\n\t\terrorHandler[key] = fn && function(msg){\n\t\t\tfn('[xmldom '+key+']\\t'+msg+_locator(locator));\n\t\t}||function(){};\n\t}\n\tbuild('warning');\n\tbuild('error');\n\tbuild('fatalError');\n\treturn errorHandler;\n}\n\n//console.log('#\\n\\n\\n\\n\\n\\n\\n####')\n/**\n * +ContentHandler+ErrorHandler\n * +LexicalHandler+EntityResolver2\n * -DeclHandler-DTDHandler\n *\n * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\n * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\n * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\n */\nfunction DOMHandler() {\n    this.cdata = false;\n}\nfunction position(locator,node){\n\tnode.lineNumber = locator.lineNumber;\n\tnode.columnNumber = locator.columnNumber;\n}\n/**\n * @see org.xml.sax.ContentHandler#startDocument\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\n */\nDOMHandler.prototype = {\n\tstartDocument : function() {\n    \tthis.doc = new DOMImplementation().createDocument(null, null, null);\n    \tif (this.locator) {\n        \tthis.doc.documentURI = this.locator.systemId;\n    \t}\n\t},\n\tstartElement:function(namespaceURI, localName, qName, attrs) {\n\t\tvar doc = this.doc;\n\t    var el = doc.createElementNS(namespaceURI, qName||localName);\n\t    var len = attrs.length;\n\t    appendElement(this, el);\n\t    this.currentElement = el;\n\n\t\tthis.locator && position(this.locator,el)\n\t    for (var i = 0 ; i < len; i++) {\n\t        var namespaceURI = attrs.getURI(i);\n\t        var value = attrs.getValue(i);\n\t        var qName = attrs.getQName(i);\n\t\t\tvar attr = doc.createAttributeNS(namespaceURI, qName);\n\t\t\tthis.locator &&position(attrs.getLocator(i),attr);\n\t\t\tattr.value = attr.nodeValue = value;\n\t\t\tel.setAttributeNode(attr)\n\t    }\n\t},\n\tendElement:function(namespaceURI, localName, qName) {\n\t\tvar current = this.currentElement\n\t\tvar tagName = current.tagName;\n\t\tthis.currentElement = current.parentNode;\n\t},\n\tstartPrefixMapping:function(prefix, uri) {\n\t},\n\tendPrefixMapping:function(prefix) {\n\t},\n\tprocessingInstruction:function(target, data) {\n\t    var ins = this.doc.createProcessingInstruction(target, data);\n\t    this.locator && position(this.locator,ins)\n\t    appendElement(this, ins);\n\t},\n\tignorableWhitespace:function(ch, start, length) {\n\t},\n\tcharacters:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t\t//console.log(chars)\n\t\tif(chars){\n\t\t\tif (this.cdata) {\n\t\t\t\tvar charNode = this.doc.createCDATASection(chars);\n\t\t\t} else {\n\t\t\t\tvar charNode = this.doc.createTextNode(chars);\n\t\t\t}\n\t\t\tif(this.currentElement){\n\t\t\t\tthis.currentElement.appendChild(charNode);\n\t\t\t}else if(/^\\s*$/.test(chars)){\n\t\t\t\tthis.doc.appendChild(charNode);\n\t\t\t\t//process xml\n\t\t\t}\n\t\t\tthis.locator && position(this.locator,charNode)\n\t\t}\n\t},\n\tskippedEntity:function(name) {\n\t},\n\tendDocument:function() {\n\t\tthis.doc.normalize();\n\t},\n\tsetDocumentLocator:function (locator) {\n\t    if(this.locator = locator){// && !('lineNumber' in locator)){\n\t    \tlocator.lineNumber = 0;\n\t    }\n\t},\n\t//LexicalHandler\n\tcomment:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t    var comm = this.doc.createComment(chars);\n\t    this.locator && position(this.locator,comm)\n\t    appendElement(this, comm);\n\t},\n\n\tstartCDATA:function() {\n\t    //used in characters() methods\n\t    this.cdata = true;\n\t},\n\tendCDATA:function() {\n\t    this.cdata = false;\n\t},\n\n\tstartDTD:function(name, publicId, systemId) {\n\t\tvar impl = this.doc.implementation;\n\t    if (impl && impl.createDocumentType) {\n\t        var dt = impl.createDocumentType(name, publicId, systemId);\n\t        this.locator && position(this.locator,dt)\n\t        appendElement(this, dt);\n\t\t\t\t\tthis.doc.doctype = dt;\n\t    }\n\t},\n\t/**\n\t * @see org.xml.sax.ErrorHandler\n\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n\t */\n\twarning:function(error) {\n\t\tconsole.warn('[xmldom warning]\\t'+error,_locator(this.locator));\n\t},\n\terror:function(error) {\n\t\tconsole.error('[xmldom error]\\t'+error,_locator(this.locator));\n\t},\n\tfatalError:function(error) {\n\t\tthrow new ParseError(error, this.locator);\n\t}\n}\nfunction _locator(l){\n\tif(l){\n\t\treturn '\\n@'+(l.systemId ||'')+'#[line:'+l.lineNumber+',col:'+l.columnNumber+']'\n\t}\n}\nfunction _toString(chars,start,length){\n\tif(typeof chars == 'string'){\n\t\treturn chars.substr(start,length)\n\t}else{//java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\n\t\tif(chars.length >= start+length || start){\n\t\t\treturn new java.lang.String(chars,start,length)+'';\n\t\t}\n\t\treturn chars;\n\t}\n}\n\n/*\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\n * used method of org.xml.sax.ext.LexicalHandler:\n *  #comment(chars, start, length)\n *  #startCDATA()\n *  #endCDATA()\n *  #startDTD(name, publicId, systemId)\n *\n *\n * IGNORED method of org.xml.sax.ext.LexicalHandler:\n *  #endDTD()\n *  #startEntity(name)\n *  #endEntity(name)\n *\n *\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\n * IGNORED method of org.xml.sax.ext.DeclHandler\n * \t#attributeDecl(eName, aName, type, mode, value)\n *  #elementDecl(name, model)\n *  #externalEntityDecl(name, publicId, systemId)\n *  #internalEntityDecl(name, value)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\n * IGNORED method of org.xml.sax.EntityResolver2\n *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\n *  #resolveEntity(publicId, systemId)\n *  #getExternalSubset(name, baseURI)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\n * IGNORED method of org.xml.sax.DTDHandler\n *  #notationDecl(name, publicId, systemId) {};\n *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\n */\n\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){\n\tDOMHandler.prototype[key] = function(){return null}\n})\n\n/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\nfunction appendElement (hander,node) {\n    if (!hander.currentElement) {\n        hander.doc.appendChild(node);\n    } else {\n        hander.currentElement.appendChild(node);\n    }\n}//appendChild and setAttributeNS are preformance key\n\nexports.__DOMHandler = DOMHandler;\nexports.normalizeLineEndings = normalizeLineEndings;\nexports.DOMParser = DOMParser;\n","'use strict';\n\nvar freeze = require('./conventions').freeze;\n\n/**\n * The entities that are predefined in every XML document.\n *\n * @see https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-predefined-ent W3C XML 1.1\n * @see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent W3C XML 1.0\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML Wikipedia\n */\nexports.XML_ENTITIES = freeze({\n\tamp: '&',\n\tapos: \"'\",\n\tgt: '>',\n\tlt: '<',\n\tquot: '\"',\n});\n\n/**\n * A map of all entities that are detected in an HTML document.\n * They contain all entries from `XML_ENTITIES`.\n *\n * @see XML_ENTITIES\n * @see DOMParser.parseFromString\n * @see DOMImplementation.prototype.createHTMLDocument\n * @see https://html.spec.whatwg.org/#named-character-references WHATWG HTML(5) Spec\n * @see https://html.spec.whatwg.org/entities.json JSON\n * @see https://www.w3.org/TR/xml-entity-names/ W3C XML Entity Names\n * @see https://www.w3.org/TR/html4/sgml/entities.html W3C HTML4/SGML\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Character_entity_references_in_HTML Wikipedia (HTML)\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML Wikpedia (XHTML)\n */\nexports.HTML_ENTITIES = freeze({\n\tAacute: '\\u00C1',\n\taacute: '\\u00E1',\n\tAbreve: '\\u0102',\n\tabreve: '\\u0103',\n\tac: '\\u223E',\n\tacd: '\\u223F',\n\tacE: '\\u223E\\u0333',\n\tAcirc: '\\u00C2',\n\tacirc: '\\u00E2',\n\tacute: '\\u00B4',\n\tAcy: '\\u0410',\n\tacy: '\\u0430',\n\tAElig: '\\u00C6',\n\taelig: '\\u00E6',\n\taf: '\\u2061',\n\tAfr: '\\uD835\\uDD04',\n\tafr: '\\uD835\\uDD1E',\n\tAgrave: '\\u00C0',\n\tagrave: '\\u00E0',\n\talefsym: '\\u2135',\n\taleph: '\\u2135',\n\tAlpha: '\\u0391',\n\talpha: '\\u03B1',\n\tAmacr: '\\u0100',\n\tamacr: '\\u0101',\n\tamalg: '\\u2A3F',\n\tAMP: '\\u0026',\n\tamp: '\\u0026',\n\tAnd: '\\u2A53',\n\tand: '\\u2227',\n\tandand: '\\u2A55',\n\tandd: '\\u2A5C',\n\tandslope: '\\u2A58',\n\tandv: '\\u2A5A',\n\tang: '\\u2220',\n\tange: '\\u29A4',\n\tangle: '\\u2220',\n\tangmsd: '\\u2221',\n\tangmsdaa: '\\u29A8',\n\tangmsdab: '\\u29A9',\n\tangmsdac: '\\u29AA',\n\tangmsdad: '\\u29AB',\n\tangmsdae: '\\u29AC',\n\tangmsdaf: '\\u29AD',\n\tangmsdag: '\\u29AE',\n\tangmsdah: '\\u29AF',\n\tangrt: '\\u221F',\n\tangrtvb: '\\u22BE',\n\tangrtvbd: '\\u299D',\n\tangsph: '\\u2222',\n\tangst: '\\u00C5',\n\tangzarr: '\\u237C',\n\tAogon: '\\u0104',\n\taogon: '\\u0105',\n\tAopf: '\\uD835\\uDD38',\n\taopf: '\\uD835\\uDD52',\n\tap: '\\u2248',\n\tapacir: '\\u2A6F',\n\tapE: '\\u2A70',\n\tape: '\\u224A',\n\tapid: '\\u224B',\n\tapos: '\\u0027',\n\tApplyFunction: '\\u2061',\n\tapprox: '\\u2248',\n\tapproxeq: '\\u224A',\n\tAring: '\\u00C5',\n\taring: '\\u00E5',\n\tAscr: '\\uD835\\uDC9C',\n\tascr: '\\uD835\\uDCB6',\n\tAssign: '\\u2254',\n\tast: '\\u002A',\n\tasymp: '\\u2248',\n\tasympeq: '\\u224D',\n\tAtilde: '\\u00C3',\n\tatilde: '\\u00E3',\n\tAuml: '\\u00C4',\n\tauml: '\\u00E4',\n\tawconint: '\\u2233',\n\tawint: '\\u2A11',\n\tbackcong: '\\u224C',\n\tbackepsilon: '\\u03F6',\n\tbackprime: '\\u2035',\n\tbacksim: '\\u223D',\n\tbacksimeq: '\\u22CD',\n\tBackslash: '\\u2216',\n\tBarv: '\\u2AE7',\n\tbarvee: '\\u22BD',\n\tBarwed: '\\u2306',\n\tbarwed: '\\u2305',\n\tbarwedge: '\\u2305',\n\tbbrk: '\\u23B5',\n\tbbrktbrk: '\\u23B6',\n\tbcong: '\\u224C',\n\tBcy: '\\u0411',\n\tbcy: '\\u0431',\n\tbdquo: '\\u201E',\n\tbecaus: '\\u2235',\n\tBecause: '\\u2235',\n\tbecause: '\\u2235',\n\tbemptyv: '\\u29B0',\n\tbepsi: '\\u03F6',\n\tbernou: '\\u212C',\n\tBernoullis: '\\u212C',\n\tBeta: '\\u0392',\n\tbeta: '\\u03B2',\n\tbeth: '\\u2136',\n\tbetween: '\\u226C',\n\tBfr: '\\uD835\\uDD05',\n\tbfr: '\\uD835\\uDD1F',\n\tbigcap: '\\u22C2',\n\tbigcirc: '\\u25EF',\n\tbigcup: '\\u22C3',\n\tbigodot: '\\u2A00',\n\tbigoplus: '\\u2A01',\n\tbigotimes: '\\u2A02',\n\tbigsqcup: '\\u2A06',\n\tbigstar: '\\u2605',\n\tbigtriangledown: '\\u25BD',\n\tbigtriangleup: '\\u25B3',\n\tbiguplus: '\\u2A04',\n\tbigvee: '\\u22C1',\n\tbigwedge: '\\u22C0',\n\tbkarow: '\\u290D',\n\tblacklozenge: '\\u29EB',\n\tblacksquare: '\\u25AA',\n\tblacktriangle: '\\u25B4',\n\tblacktriangledown: '\\u25BE',\n\tblacktriangleleft: '\\u25C2',\n\tblacktriangleright: '\\u25B8',\n\tblank: '\\u2423',\n\tblk12: '\\u2592',\n\tblk14: '\\u2591',\n\tblk34: '\\u2593',\n\tblock: '\\u2588',\n\tbne: '\\u003D\\u20E5',\n\tbnequiv: '\\u2261\\u20E5',\n\tbNot: '\\u2AED',\n\tbnot: '\\u2310',\n\tBopf: '\\uD835\\uDD39',\n\tbopf: '\\uD835\\uDD53',\n\tbot: '\\u22A5',\n\tbottom: '\\u22A5',\n\tbowtie: '\\u22C8',\n\tboxbox: '\\u29C9',\n\tboxDL: '\\u2557',\n\tboxDl: '\\u2556',\n\tboxdL: '\\u2555',\n\tboxdl: '\\u2510',\n\tboxDR: '\\u2554',\n\tboxDr: '\\u2553',\n\tboxdR: '\\u2552',\n\tboxdr: '\\u250C',\n\tboxH: '\\u2550',\n\tboxh: '\\u2500',\n\tboxHD: '\\u2566',\n\tboxHd: '\\u2564',\n\tboxhD: '\\u2565',\n\tboxhd: '\\u252C',\n\tboxHU: '\\u2569',\n\tboxHu: '\\u2567',\n\tboxhU: '\\u2568',\n\tboxhu: '\\u2534',\n\tboxminus: '\\u229F',\n\tboxplus: '\\u229E',\n\tboxtimes: '\\u22A0',\n\tboxUL: '\\u255D',\n\tboxUl: '\\u255C',\n\tboxuL: '\\u255B',\n\tboxul: '\\u2518',\n\tboxUR: '\\u255A',\n\tboxUr: '\\u2559',\n\tboxuR: '\\u2558',\n\tboxur: '\\u2514',\n\tboxV: '\\u2551',\n\tboxv: '\\u2502',\n\tboxVH: '\\u256C',\n\tboxVh: '\\u256B',\n\tboxvH: '\\u256A',\n\tboxvh: '\\u253C',\n\tboxVL: '\\u2563',\n\tboxVl: '\\u2562',\n\tboxvL: '\\u2561',\n\tboxvl: '\\u2524',\n\tboxVR: '\\u2560',\n\tboxVr: '\\u255F',\n\tboxvR: '\\u255E',\n\tboxvr: '\\u251C',\n\tbprime: '\\u2035',\n\tBreve: '\\u02D8',\n\tbreve: '\\u02D8',\n\tbrvbar: '\\u00A6',\n\tBscr: '\\u212C',\n\tbscr: '\\uD835\\uDCB7',\n\tbsemi: '\\u204F',\n\tbsim: '\\u223D',\n\tbsime: '\\u22CD',\n\tbsol: '\\u005C',\n\tbsolb: '\\u29C5',\n\tbsolhsub: '\\u27C8',\n\tbull: '\\u2022',\n\tbullet: '\\u2022',\n\tbump: '\\u224E',\n\tbumpE: '\\u2AAE',\n\tbumpe: '\\u224F',\n\tBumpeq: '\\u224E',\n\tbumpeq: '\\u224F',\n\tCacute: '\\u0106',\n\tcacute: '\\u0107',\n\tCap: '\\u22D2',\n\tcap: '\\u2229',\n\tcapand: '\\u2A44',\n\tcapbrcup: '\\u2A49',\n\tcapcap: '\\u2A4B',\n\tcapcup: '\\u2A47',\n\tcapdot: '\\u2A40',\n\tCapitalDifferentialD: '\\u2145',\n\tcaps: '\\u2229\\uFE00',\n\tcaret: '\\u2041',\n\tcaron: '\\u02C7',\n\tCayleys: '\\u212D',\n\tccaps: '\\u2A4D',\n\tCcaron: '\\u010C',\n\tccaron: '\\u010D',\n\tCcedil: '\\u00C7',\n\tccedil: '\\u00E7',\n\tCcirc: '\\u0108',\n\tccirc: '\\u0109',\n\tCconint: '\\u2230',\n\tccups: '\\u2A4C',\n\tccupssm: '\\u2A50',\n\tCdot: '\\u010A',\n\tcdot: '\\u010B',\n\tcedil: '\\u00B8',\n\tCedilla: '\\u00B8',\n\tcemptyv: '\\u29B2',\n\tcent: '\\u00A2',\n\tCenterDot: '\\u00B7',\n\tcenterdot: '\\u00B7',\n\tCfr: '\\u212D',\n\tcfr: '\\uD835\\uDD20',\n\tCHcy: '\\u0427',\n\tchcy: '\\u0447',\n\tcheck: '\\u2713',\n\tcheckmark: '\\u2713',\n\tChi: '\\u03A7',\n\tchi: '\\u03C7',\n\tcir: '\\u25CB',\n\tcirc: '\\u02C6',\n\tcirceq: '\\u2257',\n\tcirclearrowleft: '\\u21BA',\n\tcirclearrowright: '\\u21BB',\n\tcircledast: '\\u229B',\n\tcircledcirc: '\\u229A',\n\tcircleddash: '\\u229D',\n\tCircleDot: '\\u2299',\n\tcircledR: '\\u00AE',\n\tcircledS: '\\u24C8',\n\tCircleMinus: '\\u2296',\n\tCirclePlus: '\\u2295',\n\tCircleTimes: '\\u2297',\n\tcirE: '\\u29C3',\n\tcire: '\\u2257',\n\tcirfnint: '\\u2A10',\n\tcirmid: '\\u2AEF',\n\tcirscir: '\\u29C2',\n\tClockwiseContourIntegral: '\\u2232',\n\tCloseCurlyDoubleQuote: '\\u201D',\n\tCloseCurlyQuote: '\\u2019',\n\tclubs: '\\u2663',\n\tclubsuit: '\\u2663',\n\tColon: '\\u2237',\n\tcolon: '\\u003A',\n\tColone: '\\u2A74',\n\tcolone: '\\u2254',\n\tcoloneq: '\\u2254',\n\tcomma: '\\u002C',\n\tcommat: '\\u0040',\n\tcomp: '\\u2201',\n\tcompfn: '\\u2218',\n\tcomplement: '\\u2201',\n\tcomplexes: '\\u2102',\n\tcong: '\\u2245',\n\tcongdot: '\\u2A6D',\n\tCongruent: '\\u2261',\n\tConint: '\\u222F',\n\tconint: '\\u222E',\n\tContourIntegral: '\\u222E',\n\tCopf: '\\u2102',\n\tcopf: '\\uD835\\uDD54',\n\tcoprod: '\\u2210',\n\tCoproduct: '\\u2210',\n\tCOPY: '\\u00A9',\n\tcopy: '\\u00A9',\n\tcopysr: '\\u2117',\n\tCounterClockwiseContourIntegral: '\\u2233',\n\tcrarr: '\\u21B5',\n\tCross: '\\u2A2F',\n\tcross: '\\u2717',\n\tCscr: '\\uD835\\uDC9E',\n\tcscr: '\\uD835\\uDCB8',\n\tcsub: '\\u2ACF',\n\tcsube: '\\u2AD1',\n\tcsup: '\\u2AD0',\n\tcsupe: '\\u2AD2',\n\tctdot: '\\u22EF',\n\tcudarrl: '\\u2938',\n\tcudarrr: '\\u2935',\n\tcuepr: '\\u22DE',\n\tcuesc: '\\u22DF',\n\tcularr: '\\u21B6',\n\tcularrp: '\\u293D',\n\tCup: '\\u22D3',\n\tcup: '\\u222A',\n\tcupbrcap: '\\u2A48',\n\tCupCap: '\\u224D',\n\tcupcap: '\\u2A46',\n\tcupcup: '\\u2A4A',\n\tcupdot: '\\u228D',\n\tcupor: '\\u2A45',\n\tcups: '\\u222A\\uFE00',\n\tcurarr: '\\u21B7',\n\tcurarrm: '\\u293C',\n\tcurlyeqprec: '\\u22DE',\n\tcurlyeqsucc: '\\u22DF',\n\tcurlyvee: '\\u22CE',\n\tcurlywedge: '\\u22CF',\n\tcurren: '\\u00A4',\n\tcurvearrowleft: '\\u21B6',\n\tcurvearrowright: '\\u21B7',\n\tcuvee: '\\u22CE',\n\tcuwed: '\\u22CF',\n\tcwconint: '\\u2232',\n\tcwint: '\\u2231',\n\tcylcty: '\\u232D',\n\tDagger: '\\u2021',\n\tdagger: '\\u2020',\n\tdaleth: '\\u2138',\n\tDarr: '\\u21A1',\n\tdArr: '\\u21D3',\n\tdarr: '\\u2193',\n\tdash: '\\u2010',\n\tDashv: '\\u2AE4',\n\tdashv: '\\u22A3',\n\tdbkarow: '\\u290F',\n\tdblac: '\\u02DD',\n\tDcaron: '\\u010E',\n\tdcaron: '\\u010F',\n\tDcy: '\\u0414',\n\tdcy: '\\u0434',\n\tDD: '\\u2145',\n\tdd: '\\u2146',\n\tddagger: '\\u2021',\n\tddarr: '\\u21CA',\n\tDDotrahd: '\\u2911',\n\tddotseq: '\\u2A77',\n\tdeg: '\\u00B0',\n\tDel: '\\u2207',\n\tDelta: '\\u0394',\n\tdelta: '\\u03B4',\n\tdemptyv: '\\u29B1',\n\tdfisht: '\\u297F',\n\tDfr: '\\uD835\\uDD07',\n\tdfr: '\\uD835\\uDD21',\n\tdHar: '\\u2965',\n\tdharl: '\\u21C3',\n\tdharr: '\\u21C2',\n\tDiacriticalAcute: '\\u00B4',\n\tDiacriticalDot: '\\u02D9',\n\tDiacriticalDoubleAcute: '\\u02DD',\n\tDiacriticalGrave: '\\u0060',\n\tDiacriticalTilde: '\\u02DC',\n\tdiam: '\\u22C4',\n\tDiamond: '\\u22C4',\n\tdiamond: '\\u22C4',\n\tdiamondsuit: '\\u2666',\n\tdiams: '\\u2666',\n\tdie: '\\u00A8',\n\tDifferentialD: '\\u2146',\n\tdigamma: '\\u03DD',\n\tdisin: '\\u22F2',\n\tdiv: '\\u00F7',\n\tdivide: '\\u00F7',\n\tdivideontimes: '\\u22C7',\n\tdivonx: '\\u22C7',\n\tDJcy: '\\u0402',\n\tdjcy: '\\u0452',\n\tdlcorn: '\\u231E',\n\tdlcrop: '\\u230D',\n\tdollar: '\\u0024',\n\tDopf: '\\uD835\\uDD3B',\n\tdopf: '\\uD835\\uDD55',\n\tDot: '\\u00A8',\n\tdot: '\\u02D9',\n\tDotDot: '\\u20DC',\n\tdoteq: '\\u2250',\n\tdoteqdot: '\\u2251',\n\tDotEqual: '\\u2250',\n\tdotminus: '\\u2238',\n\tdotplus: '\\u2214',\n\tdotsquare: '\\u22A1',\n\tdoublebarwedge: '\\u2306',\n\tDoubleContourIntegral: '\\u222F',\n\tDoubleDot: '\\u00A8',\n\tDoubleDownArrow: '\\u21D3',\n\tDoubleLeftArrow: '\\u21D0',\n\tDoubleLeftRightArrow: '\\u21D4',\n\tDoubleLeftTee: '\\u2AE4',\n\tDoubleLongLeftArrow: '\\u27F8',\n\tDoubleLongLeftRightArrow: '\\u27FA',\n\tDoubleLongRightArrow: '\\u27F9',\n\tDoubleRightArrow: '\\u21D2',\n\tDoubleRightTee: '\\u22A8',\n\tDoubleUpArrow: '\\u21D1',\n\tDoubleUpDownArrow: '\\u21D5',\n\tDoubleVerticalBar: '\\u2225',\n\tDownArrow: '\\u2193',\n\tDownarrow: '\\u21D3',\n\tdownarrow: '\\u2193',\n\tDownArrowBar: '\\u2913',\n\tDownArrowUpArrow: '\\u21F5',\n\tDownBreve: '\\u0311',\n\tdowndownarrows: '\\u21CA',\n\tdownharpoonleft: '\\u21C3',\n\tdownharpoonright: '\\u21C2',\n\tDownLeftRightVector: '\\u2950',\n\tDownLeftTeeVector: '\\u295E',\n\tDownLeftVector: '\\u21BD',\n\tDownLeftVectorBar: '\\u2956',\n\tDownRightTeeVector: '\\u295F',\n\tDownRightVector: '\\u21C1',\n\tDownRightVectorBar: '\\u2957',\n\tDownTee: '\\u22A4',\n\tDownTeeArrow: '\\u21A7',\n\tdrbkarow: '\\u2910',\n\tdrcorn: '\\u231F',\n\tdrcrop: '\\u230C',\n\tDscr: '\\uD835\\uDC9F',\n\tdscr: '\\uD835\\uDCB9',\n\tDScy: '\\u0405',\n\tdscy: '\\u0455',\n\tdsol: '\\u29F6',\n\tDstrok: '\\u0110',\n\tdstrok: '\\u0111',\n\tdtdot: '\\u22F1',\n\tdtri: '\\u25BF',\n\tdtrif: '\\u25BE',\n\tduarr: '\\u21F5',\n\tduhar: '\\u296F',\n\tdwangle: '\\u29A6',\n\tDZcy: '\\u040F',\n\tdzcy: '\\u045F',\n\tdzigrarr: '\\u27FF',\n\tEacute: '\\u00C9',\n\teacute: '\\u00E9',\n\teaster: '\\u2A6E',\n\tEcaron: '\\u011A',\n\tecaron: '\\u011B',\n\tecir: '\\u2256',\n\tEcirc: '\\u00CA',\n\tecirc: '\\u00EA',\n\tecolon: '\\u2255',\n\tEcy: '\\u042D',\n\tecy: '\\u044D',\n\teDDot: '\\u2A77',\n\tEdot: '\\u0116',\n\teDot: '\\u2251',\n\tedot: '\\u0117',\n\tee: '\\u2147',\n\tefDot: '\\u2252',\n\tEfr: '\\uD835\\uDD08',\n\tefr: '\\uD835\\uDD22',\n\teg: '\\u2A9A',\n\tEgrave: '\\u00C8',\n\tegrave: '\\u00E8',\n\tegs: '\\u2A96',\n\tegsdot: '\\u2A98',\n\tel: '\\u2A99',\n\tElement: '\\u2208',\n\telinters: '\\u23E7',\n\tell: '\\u2113',\n\tels: '\\u2A95',\n\telsdot: '\\u2A97',\n\tEmacr: '\\u0112',\n\temacr: '\\u0113',\n\tempty: '\\u2205',\n\temptyset: '\\u2205',\n\tEmptySmallSquare: '\\u25FB',\n\temptyv: '\\u2205',\n\tEmptyVerySmallSquare: '\\u25AB',\n\temsp: '\\u2003',\n\temsp13: '\\u2004',\n\temsp14: '\\u2005',\n\tENG: '\\u014A',\n\teng: '\\u014B',\n\tensp: '\\u2002',\n\tEogon: '\\u0118',\n\teogon: '\\u0119',\n\tEopf: '\\uD835\\uDD3C',\n\teopf: '\\uD835\\uDD56',\n\tepar: '\\u22D5',\n\teparsl: '\\u29E3',\n\teplus: '\\u2A71',\n\tepsi: '\\u03B5',\n\tEpsilon: '\\u0395',\n\tepsilon: '\\u03B5',\n\tepsiv: '\\u03F5',\n\teqcirc: '\\u2256',\n\teqcolon: '\\u2255',\n\teqsim: '\\u2242',\n\teqslantgtr: '\\u2A96',\n\teqslantless: '\\u2A95',\n\tEqual: '\\u2A75',\n\tequals: '\\u003D',\n\tEqualTilde: '\\u2242',\n\tequest: '\\u225F',\n\tEquilibrium: '\\u21CC',\n\tequiv: '\\u2261',\n\tequivDD: '\\u2A78',\n\teqvparsl: '\\u29E5',\n\terarr: '\\u2971',\n\terDot: '\\u2253',\n\tEscr: '\\u2130',\n\tescr: '\\u212F',\n\tesdot: '\\u2250',\n\tEsim: '\\u2A73',\n\tesim: '\\u2242',\n\tEta: '\\u0397',\n\teta: '\\u03B7',\n\tETH: '\\u00D0',\n\teth: '\\u00F0',\n\tEuml: '\\u00CB',\n\teuml: '\\u00EB',\n\teuro: '\\u20AC',\n\texcl: '\\u0021',\n\texist: '\\u2203',\n\tExists: '\\u2203',\n\texpectation: '\\u2130',\n\tExponentialE: '\\u2147',\n\texponentiale: '\\u2147',\n\tfallingdotseq: '\\u2252',\n\tFcy: '\\u0424',\n\tfcy: '\\u0444',\n\tfemale: '\\u2640',\n\tffilig: '\\uFB03',\n\tfflig: '\\uFB00',\n\tffllig: '\\uFB04',\n\tFfr: '\\uD835\\uDD09',\n\tffr: '\\uD835\\uDD23',\n\tfilig: '\\uFB01',\n\tFilledSmallSquare: '\\u25FC',\n\tFilledVerySmallSquare: '\\u25AA',\n\tfjlig: '\\u0066\\u006A',\n\tflat: '\\u266D',\n\tfllig: '\\uFB02',\n\tfltns: '\\u25B1',\n\tfnof: '\\u0192',\n\tFopf: '\\uD835\\uDD3D',\n\tfopf: '\\uD835\\uDD57',\n\tForAll: '\\u2200',\n\tforall: '\\u2200',\n\tfork: '\\u22D4',\n\tforkv: '\\u2AD9',\n\tFouriertrf: '\\u2131',\n\tfpartint: '\\u2A0D',\n\tfrac12: '\\u00BD',\n\tfrac13: '\\u2153',\n\tfrac14: '\\u00BC',\n\tfrac15: '\\u2155',\n\tfrac16: '\\u2159',\n\tfrac18: '\\u215B',\n\tfrac23: '\\u2154',\n\tfrac25: '\\u2156',\n\tfrac34: '\\u00BE',\n\tfrac35: '\\u2157',\n\tfrac38: '\\u215C',\n\tfrac45: '\\u2158',\n\tfrac56: '\\u215A',\n\tfrac58: '\\u215D',\n\tfrac78: '\\u215E',\n\tfrasl: '\\u2044',\n\tfrown: '\\u2322',\n\tFscr: '\\u2131',\n\tfscr: '\\uD835\\uDCBB',\n\tgacute: '\\u01F5',\n\tGamma: '\\u0393',\n\tgamma: '\\u03B3',\n\tGammad: '\\u03DC',\n\tgammad: '\\u03DD',\n\tgap: '\\u2A86',\n\tGbreve: '\\u011E',\n\tgbreve: '\\u011F',\n\tGcedil: '\\u0122',\n\tGcirc: '\\u011C',\n\tgcirc: '\\u011D',\n\tGcy: '\\u0413',\n\tgcy: '\\u0433',\n\tGdot: '\\u0120',\n\tgdot: '\\u0121',\n\tgE: '\\u2267',\n\tge: '\\u2265',\n\tgEl: '\\u2A8C',\n\tgel: '\\u22DB',\n\tgeq: '\\u2265',\n\tgeqq: '\\u2267',\n\tgeqslant: '\\u2A7E',\n\tges: '\\u2A7E',\n\tgescc: '\\u2AA9',\n\tgesdot: '\\u2A80',\n\tgesdoto: '\\u2A82',\n\tgesdotol: '\\u2A84',\n\tgesl: '\\u22DB\\uFE00',\n\tgesles: '\\u2A94',\n\tGfr: '\\uD835\\uDD0A',\n\tgfr: '\\uD835\\uDD24',\n\tGg: '\\u22D9',\n\tgg: '\\u226B',\n\tggg: '\\u22D9',\n\tgimel: '\\u2137',\n\tGJcy: '\\u0403',\n\tgjcy: '\\u0453',\n\tgl: '\\u2277',\n\tgla: '\\u2AA5',\n\tglE: '\\u2A92',\n\tglj: '\\u2AA4',\n\tgnap: '\\u2A8A',\n\tgnapprox: '\\u2A8A',\n\tgnE: '\\u2269',\n\tgne: '\\u2A88',\n\tgneq: '\\u2A88',\n\tgneqq: '\\u2269',\n\tgnsim: '\\u22E7',\n\tGopf: '\\uD835\\uDD3E',\n\tgopf: '\\uD835\\uDD58',\n\tgrave: '\\u0060',\n\tGreaterEqual: '\\u2265',\n\tGreaterEqualLess: '\\u22DB',\n\tGreaterFullEqual: '\\u2267',\n\tGreaterGreater: '\\u2AA2',\n\tGreaterLess: '\\u2277',\n\tGreaterSlantEqual: '\\u2A7E',\n\tGreaterTilde: '\\u2273',\n\tGscr: '\\uD835\\uDCA2',\n\tgscr: '\\u210A',\n\tgsim: '\\u2273',\n\tgsime: '\\u2A8E',\n\tgsiml: '\\u2A90',\n\tGt: '\\u226B',\n\tGT: '\\u003E',\n\tgt: '\\u003E',\n\tgtcc: '\\u2AA7',\n\tgtcir: '\\u2A7A',\n\tgtdot: '\\u22D7',\n\tgtlPar: '\\u2995',\n\tgtquest: '\\u2A7C',\n\tgtrapprox: '\\u2A86',\n\tgtrarr: '\\u2978',\n\tgtrdot: '\\u22D7',\n\tgtreqless: '\\u22DB',\n\tgtreqqless: '\\u2A8C',\n\tgtrless: '\\u2277',\n\tgtrsim: '\\u2273',\n\tgvertneqq: '\\u2269\\uFE00',\n\tgvnE: '\\u2269\\uFE00',\n\tHacek: '\\u02C7',\n\thairsp: '\\u200A',\n\thalf: '\\u00BD',\n\thamilt: '\\u210B',\n\tHARDcy: '\\u042A',\n\thardcy: '\\u044A',\n\thArr: '\\u21D4',\n\tharr: '\\u2194',\n\tharrcir: '\\u2948',\n\tharrw: '\\u21AD',\n\tHat: '\\u005E',\n\thbar: '\\u210F',\n\tHcirc: '\\u0124',\n\thcirc: '\\u0125',\n\thearts: '\\u2665',\n\theartsuit: '\\u2665',\n\thellip: '\\u2026',\n\thercon: '\\u22B9',\n\tHfr: '\\u210C',\n\thfr: '\\uD835\\uDD25',\n\tHilbertSpace: '\\u210B',\n\thksearow: '\\u2925',\n\thkswarow: '\\u2926',\n\thoarr: '\\u21FF',\n\thomtht: '\\u223B',\n\thookleftarrow: '\\u21A9',\n\thookrightarrow: '\\u21AA',\n\tHopf: '\\u210D',\n\thopf: '\\uD835\\uDD59',\n\thorbar: '\\u2015',\n\tHorizontalLine: '\\u2500',\n\tHscr: '\\u210B',\n\thscr: '\\uD835\\uDCBD',\n\thslash: '\\u210F',\n\tHstrok: '\\u0126',\n\thstrok: '\\u0127',\n\tHumpDownHump: '\\u224E',\n\tHumpEqual: '\\u224F',\n\thybull: '\\u2043',\n\thyphen: '\\u2010',\n\tIacute: '\\u00CD',\n\tiacute: '\\u00ED',\n\tic: '\\u2063',\n\tIcirc: '\\u00CE',\n\ticirc: '\\u00EE',\n\tIcy: '\\u0418',\n\ticy: '\\u0438',\n\tIdot: '\\u0130',\n\tIEcy: '\\u0415',\n\tiecy: '\\u0435',\n\tiexcl: '\\u00A1',\n\tiff: '\\u21D4',\n\tIfr: '\\u2111',\n\tifr: '\\uD835\\uDD26',\n\tIgrave: '\\u00CC',\n\tigrave: '\\u00EC',\n\tii: '\\u2148',\n\tiiiint: '\\u2A0C',\n\tiiint: '\\u222D',\n\tiinfin: '\\u29DC',\n\tiiota: '\\u2129',\n\tIJlig: '\\u0132',\n\tijlig: '\\u0133',\n\tIm: '\\u2111',\n\tImacr: '\\u012A',\n\timacr: '\\u012B',\n\timage: '\\u2111',\n\tImaginaryI: '\\u2148',\n\timagline: '\\u2110',\n\timagpart: '\\u2111',\n\timath: '\\u0131',\n\timof: '\\u22B7',\n\timped: '\\u01B5',\n\tImplies: '\\u21D2',\n\tin: '\\u2208',\n\tincare: '\\u2105',\n\tinfin: '\\u221E',\n\tinfintie: '\\u29DD',\n\tinodot: '\\u0131',\n\tInt: '\\u222C',\n\tint: '\\u222B',\n\tintcal: '\\u22BA',\n\tintegers: '\\u2124',\n\tIntegral: '\\u222B',\n\tintercal: '\\u22BA',\n\tIntersection: '\\u22C2',\n\tintlarhk: '\\u2A17',\n\tintprod: '\\u2A3C',\n\tInvisibleComma: '\\u2063',\n\tInvisibleTimes: '\\u2062',\n\tIOcy: '\\u0401',\n\tiocy: '\\u0451',\n\tIogon: '\\u012E',\n\tiogon: '\\u012F',\n\tIopf: '\\uD835\\uDD40',\n\tiopf: '\\uD835\\uDD5A',\n\tIota: '\\u0399',\n\tiota: '\\u03B9',\n\tiprod: '\\u2A3C',\n\tiquest: '\\u00BF',\n\tIscr: '\\u2110',\n\tiscr: '\\uD835\\uDCBE',\n\tisin: '\\u2208',\n\tisindot: '\\u22F5',\n\tisinE: '\\u22F9',\n\tisins: '\\u22F4',\n\tisinsv: '\\u22F3',\n\tisinv: '\\u2208',\n\tit: '\\u2062',\n\tItilde: '\\u0128',\n\titilde: '\\u0129',\n\tIukcy: '\\u0406',\n\tiukcy: '\\u0456',\n\tIuml: '\\u00CF',\n\tiuml: '\\u00EF',\n\tJcirc: '\\u0134',\n\tjcirc: '\\u0135',\n\tJcy: '\\u0419',\n\tjcy: '\\u0439',\n\tJfr: '\\uD835\\uDD0D',\n\tjfr: '\\uD835\\uDD27',\n\tjmath: '\\u0237',\n\tJopf: '\\uD835\\uDD41',\n\tjopf: '\\uD835\\uDD5B',\n\tJscr: '\\uD835\\uDCA5',\n\tjscr: '\\uD835\\uDCBF',\n\tJsercy: '\\u0408',\n\tjsercy: '\\u0458',\n\tJukcy: '\\u0404',\n\tjukcy: '\\u0454',\n\tKappa: '\\u039A',\n\tkappa: '\\u03BA',\n\tkappav: '\\u03F0',\n\tKcedil: '\\u0136',\n\tkcedil: '\\u0137',\n\tKcy: '\\u041A',\n\tkcy: '\\u043A',\n\tKfr: '\\uD835\\uDD0E',\n\tkfr: '\\uD835\\uDD28',\n\tkgreen: '\\u0138',\n\tKHcy: '\\u0425',\n\tkhcy: '\\u0445',\n\tKJcy: '\\u040C',\n\tkjcy: '\\u045C',\n\tKopf: '\\uD835\\uDD42',\n\tkopf: '\\uD835\\uDD5C',\n\tKscr: '\\uD835\\uDCA6',\n\tkscr: '\\uD835\\uDCC0',\n\tlAarr: '\\u21DA',\n\tLacute: '\\u0139',\n\tlacute: '\\u013A',\n\tlaemptyv: '\\u29B4',\n\tlagran: '\\u2112',\n\tLambda: '\\u039B',\n\tlambda: '\\u03BB',\n\tLang: '\\u27EA',\n\tlang: '\\u27E8',\n\tlangd: '\\u2991',\n\tlangle: '\\u27E8',\n\tlap: '\\u2A85',\n\tLaplacetrf: '\\u2112',\n\tlaquo: '\\u00AB',\n\tLarr: '\\u219E',\n\tlArr: '\\u21D0',\n\tlarr: '\\u2190',\n\tlarrb: '\\u21E4',\n\tlarrbfs: '\\u291F',\n\tlarrfs: '\\u291D',\n\tlarrhk: '\\u21A9',\n\tlarrlp: '\\u21AB',\n\tlarrpl: '\\u2939',\n\tlarrsim: '\\u2973',\n\tlarrtl: '\\u21A2',\n\tlat: '\\u2AAB',\n\tlAtail: '\\u291B',\n\tlatail: '\\u2919',\n\tlate: '\\u2AAD',\n\tlates: '\\u2AAD\\uFE00',\n\tlBarr: '\\u290E',\n\tlbarr: '\\u290C',\n\tlbbrk: '\\u2772',\n\tlbrace: '\\u007B',\n\tlbrack: '\\u005B',\n\tlbrke: '\\u298B',\n\tlbrksld: '\\u298F',\n\tlbrkslu: '\\u298D',\n\tLcaron: '\\u013D',\n\tlcaron: '\\u013E',\n\tLcedil: '\\u013B',\n\tlcedil: '\\u013C',\n\tlceil: '\\u2308',\n\tlcub: '\\u007B',\n\tLcy: '\\u041B',\n\tlcy: '\\u043B',\n\tldca: '\\u2936',\n\tldquo: '\\u201C',\n\tldquor: '\\u201E',\n\tldrdhar: '\\u2967',\n\tldrushar: '\\u294B',\n\tldsh: '\\u21B2',\n\tlE: '\\u2266',\n\tle: '\\u2264',\n\tLeftAngleBracket: '\\u27E8',\n\tLeftArrow: '\\u2190',\n\tLeftarrow: '\\u21D0',\n\tleftarrow: '\\u2190',\n\tLeftArrowBar: '\\u21E4',\n\tLeftArrowRightArrow: '\\u21C6',\n\tleftarrowtail: '\\u21A2',\n\tLeftCeiling: '\\u2308',\n\tLeftDoubleBracket: '\\u27E6',\n\tLeftDownTeeVector: '\\u2961',\n\tLeftDownVector: '\\u21C3',\n\tLeftDownVectorBar: '\\u2959',\n\tLeftFloor: '\\u230A',\n\tleftharpoondown: '\\u21BD',\n\tleftharpoonup: '\\u21BC',\n\tleftleftarrows: '\\u21C7',\n\tLeftRightArrow: '\\u2194',\n\tLeftrightarrow: '\\u21D4',\n\tleftrightarrow: '\\u2194',\n\tleftrightarrows: '\\u21C6',\n\tleftrightharpoons: '\\u21CB',\n\tleftrightsquigarrow: '\\u21AD',\n\tLeftRightVector: '\\u294E',\n\tLeftTee: '\\u22A3',\n\tLeftTeeArrow: '\\u21A4',\n\tLeftTeeVector: '\\u295A',\n\tleftthreetimes: '\\u22CB',\n\tLeftTriangle: '\\u22B2',\n\tLeftTriangleBar: '\\u29CF',\n\tLeftTriangleEqual: '\\u22B4',\n\tLeftUpDownVector: '\\u2951',\n\tLeftUpTeeVector: '\\u2960',\n\tLeftUpVector: '\\u21BF',\n\tLeftUpVectorBar: '\\u2958',\n\tLeftVector: '\\u21BC',\n\tLeftVectorBar: '\\u2952',\n\tlEg: '\\u2A8B',\n\tleg: '\\u22DA',\n\tleq: '\\u2264',\n\tleqq: '\\u2266',\n\tleqslant: '\\u2A7D',\n\tles: '\\u2A7D',\n\tlescc: '\\u2AA8',\n\tlesdot: '\\u2A7F',\n\tlesdoto: '\\u2A81',\n\tlesdotor: '\\u2A83',\n\tlesg: '\\u22DA\\uFE00',\n\tlesges: '\\u2A93',\n\tlessapprox: '\\u2A85',\n\tlessdot: '\\u22D6',\n\tlesseqgtr: '\\u22DA',\n\tlesseqqgtr: '\\u2A8B',\n\tLessEqualGreater: '\\u22DA',\n\tLessFullEqual: '\\u2266',\n\tLessGreater: '\\u2276',\n\tlessgtr: '\\u2276',\n\tLessLess: '\\u2AA1',\n\tlesssim: '\\u2272',\n\tLessSlantEqual: '\\u2A7D',\n\tLessTilde: '\\u2272',\n\tlfisht: '\\u297C',\n\tlfloor: '\\u230A',\n\tLfr: '\\uD835\\uDD0F',\n\tlfr: '\\uD835\\uDD29',\n\tlg: '\\u2276',\n\tlgE: '\\u2A91',\n\tlHar: '\\u2962',\n\tlhard: '\\u21BD',\n\tlharu: '\\u21BC',\n\tlharul: '\\u296A',\n\tlhblk: '\\u2584',\n\tLJcy: '\\u0409',\n\tljcy: '\\u0459',\n\tLl: '\\u22D8',\n\tll: '\\u226A',\n\tllarr: '\\u21C7',\n\tllcorner: '\\u231E',\n\tLleftarrow: '\\u21DA',\n\tllhard: '\\u296B',\n\tlltri: '\\u25FA',\n\tLmidot: '\\u013F',\n\tlmidot: '\\u0140',\n\tlmoust: '\\u23B0',\n\tlmoustache: '\\u23B0',\n\tlnap: '\\u2A89',\n\tlnapprox: '\\u2A89',\n\tlnE: '\\u2268',\n\tlne: '\\u2A87',\n\tlneq: '\\u2A87',\n\tlneqq: '\\u2268',\n\tlnsim: '\\u22E6',\n\tloang: '\\u27EC',\n\tloarr: '\\u21FD',\n\tlobrk: '\\u27E6',\n\tLongLeftArrow: '\\u27F5',\n\tLongleftarrow: '\\u27F8',\n\tlongleftarrow: '\\u27F5',\n\tLongLeftRightArrow: '\\u27F7',\n\tLongleftrightarrow: '\\u27FA',\n\tlongleftrightarrow: '\\u27F7',\n\tlongmapsto: '\\u27FC',\n\tLongRightArrow: '\\u27F6',\n\tLongrightarrow: '\\u27F9',\n\tlongrightarrow: '\\u27F6',\n\tlooparrowleft: '\\u21AB',\n\tlooparrowright: '\\u21AC',\n\tlopar: '\\u2985',\n\tLopf: '\\uD835\\uDD43',\n\tlopf: '\\uD835\\uDD5D',\n\tloplus: '\\u2A2D',\n\tlotimes: '\\u2A34',\n\tlowast: '\\u2217',\n\tlowbar: '\\u005F',\n\tLowerLeftArrow: '\\u2199',\n\tLowerRightArrow: '\\u2198',\n\tloz: '\\u25CA',\n\tlozenge: '\\u25CA',\n\tlozf: '\\u29EB',\n\tlpar: '\\u0028',\n\tlparlt: '\\u2993',\n\tlrarr: '\\u21C6',\n\tlrcorner: '\\u231F',\n\tlrhar: '\\u21CB',\n\tlrhard: '\\u296D',\n\tlrm: '\\u200E',\n\tlrtri: '\\u22BF',\n\tlsaquo: '\\u2039',\n\tLscr: '\\u2112',\n\tlscr: '\\uD835\\uDCC1',\n\tLsh: '\\u21B0',\n\tlsh: '\\u21B0',\n\tlsim: '\\u2272',\n\tlsime: '\\u2A8D',\n\tlsimg: '\\u2A8F',\n\tlsqb: '\\u005B',\n\tlsquo: '\\u2018',\n\tlsquor: '\\u201A',\n\tLstrok: '\\u0141',\n\tlstrok: '\\u0142',\n\tLt: '\\u226A',\n\tLT: '\\u003C',\n\tlt: '\\u003C',\n\tltcc: '\\u2AA6',\n\tltcir: '\\u2A79',\n\tltdot: '\\u22D6',\n\tlthree: '\\u22CB',\n\tltimes: '\\u22C9',\n\tltlarr: '\\u2976',\n\tltquest: '\\u2A7B',\n\tltri: '\\u25C3',\n\tltrie: '\\u22B4',\n\tltrif: '\\u25C2',\n\tltrPar: '\\u2996',\n\tlurdshar: '\\u294A',\n\tluruhar: '\\u2966',\n\tlvertneqq: '\\u2268\\uFE00',\n\tlvnE: '\\u2268\\uFE00',\n\tmacr: '\\u00AF',\n\tmale: '\\u2642',\n\tmalt: '\\u2720',\n\tmaltese: '\\u2720',\n\tMap: '\\u2905',\n\tmap: '\\u21A6',\n\tmapsto: '\\u21A6',\n\tmapstodown: '\\u21A7',\n\tmapstoleft: '\\u21A4',\n\tmapstoup: '\\u21A5',\n\tmarker: '\\u25AE',\n\tmcomma: '\\u2A29',\n\tMcy: '\\u041C',\n\tmcy: '\\u043C',\n\tmdash: '\\u2014',\n\tmDDot: '\\u223A',\n\tmeasuredangle: '\\u2221',\n\tMediumSpace: '\\u205F',\n\tMellintrf: '\\u2133',\n\tMfr: '\\uD835\\uDD10',\n\tmfr: '\\uD835\\uDD2A',\n\tmho: '\\u2127',\n\tmicro: '\\u00B5',\n\tmid: '\\u2223',\n\tmidast: '\\u002A',\n\tmidcir: '\\u2AF0',\n\tmiddot: '\\u00B7',\n\tminus: '\\u2212',\n\tminusb: '\\u229F',\n\tminusd: '\\u2238',\n\tminusdu: '\\u2A2A',\n\tMinusPlus: '\\u2213',\n\tmlcp: '\\u2ADB',\n\tmldr: '\\u2026',\n\tmnplus: '\\u2213',\n\tmodels: '\\u22A7',\n\tMopf: '\\uD835\\uDD44',\n\tmopf: '\\uD835\\uDD5E',\n\tmp: '\\u2213',\n\tMscr: '\\u2133',\n\tmscr: '\\uD835\\uDCC2',\n\tmstpos: '\\u223E',\n\tMu: '\\u039C',\n\tmu: '\\u03BC',\n\tmultimap: '\\u22B8',\n\tmumap: '\\u22B8',\n\tnabla: '\\u2207',\n\tNacute: '\\u0143',\n\tnacute: '\\u0144',\n\tnang: '\\u2220\\u20D2',\n\tnap: '\\u2249',\n\tnapE: '\\u2A70\\u0338',\n\tnapid: '\\u224B\\u0338',\n\tnapos: '\\u0149',\n\tnapprox: '\\u2249',\n\tnatur: '\\u266E',\n\tnatural: '\\u266E',\n\tnaturals: '\\u2115',\n\tnbsp: '\\u00A0',\n\tnbump: '\\u224E\\u0338',\n\tnbumpe: '\\u224F\\u0338',\n\tncap: '\\u2A43',\n\tNcaron: '\\u0147',\n\tncaron: '\\u0148',\n\tNcedil: '\\u0145',\n\tncedil: '\\u0146',\n\tncong: '\\u2247',\n\tncongdot: '\\u2A6D\\u0338',\n\tncup: '\\u2A42',\n\tNcy: '\\u041D',\n\tncy: '\\u043D',\n\tndash: '\\u2013',\n\tne: '\\u2260',\n\tnearhk: '\\u2924',\n\tneArr: '\\u21D7',\n\tnearr: '\\u2197',\n\tnearrow: '\\u2197',\n\tnedot: '\\u2250\\u0338',\n\tNegativeMediumSpace: '\\u200B',\n\tNegativeThickSpace: '\\u200B',\n\tNegativeThinSpace: '\\u200B',\n\tNegativeVeryThinSpace: '\\u200B',\n\tnequiv: '\\u2262',\n\tnesear: '\\u2928',\n\tnesim: '\\u2242\\u0338',\n\tNestedGreaterGreater: '\\u226B',\n\tNestedLessLess: '\\u226A',\n\tNewLine: '\\u000A',\n\tnexist: '\\u2204',\n\tnexists: '\\u2204',\n\tNfr: '\\uD835\\uDD11',\n\tnfr: '\\uD835\\uDD2B',\n\tngE: '\\u2267\\u0338',\n\tnge: '\\u2271',\n\tngeq: '\\u2271',\n\tngeqq: '\\u2267\\u0338',\n\tngeqslant: '\\u2A7E\\u0338',\n\tnges: '\\u2A7E\\u0338',\n\tnGg: '\\u22D9\\u0338',\n\tngsim: '\\u2275',\n\tnGt: '\\u226B\\u20D2',\n\tngt: '\\u226F',\n\tngtr: '\\u226F',\n\tnGtv: '\\u226B\\u0338',\n\tnhArr: '\\u21CE',\n\tnharr: '\\u21AE',\n\tnhpar: '\\u2AF2',\n\tni: '\\u220B',\n\tnis: '\\u22FC',\n\tnisd: '\\u22FA',\n\tniv: '\\u220B',\n\tNJcy: '\\u040A',\n\tnjcy: '\\u045A',\n\tnlArr: '\\u21CD',\n\tnlarr: '\\u219A',\n\tnldr: '\\u2025',\n\tnlE: '\\u2266\\u0338',\n\tnle: '\\u2270',\n\tnLeftarrow: '\\u21CD',\n\tnleftarrow: '\\u219A',\n\tnLeftrightarrow: '\\u21CE',\n\tnleftrightarrow: '\\u21AE',\n\tnleq: '\\u2270',\n\tnleqq: '\\u2266\\u0338',\n\tnleqslant: '\\u2A7D\\u0338',\n\tnles: '\\u2A7D\\u0338',\n\tnless: '\\u226E',\n\tnLl: '\\u22D8\\u0338',\n\tnlsim: '\\u2274',\n\tnLt: '\\u226A\\u20D2',\n\tnlt: '\\u226E',\n\tnltri: '\\u22EA',\n\tnltrie: '\\u22EC',\n\tnLtv: '\\u226A\\u0338',\n\tnmid: '\\u2224',\n\tNoBreak: '\\u2060',\n\tNonBreakingSpace: '\\u00A0',\n\tNopf: '\\u2115',\n\tnopf: '\\uD835\\uDD5F',\n\tNot: '\\u2AEC',\n\tnot: '\\u00AC',\n\tNotCongruent: '\\u2262',\n\tNotCupCap: '\\u226D',\n\tNotDoubleVerticalBar: '\\u2226',\n\tNotElement: '\\u2209',\n\tNotEqual: '\\u2260',\n\tNotEqualTilde: '\\u2242\\u0338',\n\tNotExists: '\\u2204',\n\tNotGreater: '\\u226F',\n\tNotGreaterEqual: '\\u2271',\n\tNotGreaterFullEqual: '\\u2267\\u0338',\n\tNotGreaterGreater: '\\u226B\\u0338',\n\tNotGreaterLess: '\\u2279',\n\tNotGreaterSlantEqual: '\\u2A7E\\u0338',\n\tNotGreaterTilde: '\\u2275',\n\tNotHumpDownHump: '\\u224E\\u0338',\n\tNotHumpEqual: '\\u224F\\u0338',\n\tnotin: '\\u2209',\n\tnotindot: '\\u22F5\\u0338',\n\tnotinE: '\\u22F9\\u0338',\n\tnotinva: '\\u2209',\n\tnotinvb: '\\u22F7',\n\tnotinvc: '\\u22F6',\n\tNotLeftTriangle: '\\u22EA',\n\tNotLeftTriangleBar: '\\u29CF\\u0338',\n\tNotLeftTriangleEqual: '\\u22EC',\n\tNotLess: '\\u226E',\n\tNotLessEqual: '\\u2270',\n\tNotLessGreater: '\\u2278',\n\tNotLessLess: '\\u226A\\u0338',\n\tNotLessSlantEqual: '\\u2A7D\\u0338',\n\tNotLessTilde: '\\u2274',\n\tNotNestedGreaterGreater: '\\u2AA2\\u0338',\n\tNotNestedLessLess: '\\u2AA1\\u0338',\n\tnotni: '\\u220C',\n\tnotniva: '\\u220C',\n\tnotnivb: '\\u22FE',\n\tnotnivc: '\\u22FD',\n\tNotPrecedes: '\\u2280',\n\tNotPrecedesEqual: '\\u2AAF\\u0338',\n\tNotPrecedesSlantEqual: '\\u22E0',\n\tNotReverseElement: '\\u220C',\n\tNotRightTriangle: '\\u22EB',\n\tNotRightTriangleBar: '\\u29D0\\u0338',\n\tNotRightTriangleEqual: '\\u22ED',\n\tNotSquareSubset: '\\u228F\\u0338',\n\tNotSquareSubsetEqual: '\\u22E2',\n\tNotSquareSuperset: '\\u2290\\u0338',\n\tNotSquareSupersetEqual: '\\u22E3',\n\tNotSubset: '\\u2282\\u20D2',\n\tNotSubsetEqual: '\\u2288',\n\tNotSucceeds: '\\u2281',\n\tNotSucceedsEqual: '\\u2AB0\\u0338',\n\tNotSucceedsSlantEqual: '\\u22E1',\n\tNotSucceedsTilde: '\\u227F\\u0338',\n\tNotSuperset: '\\u2283\\u20D2',\n\tNotSupersetEqual: '\\u2289',\n\tNotTilde: '\\u2241',\n\tNotTildeEqual: '\\u2244',\n\tNotTildeFullEqual: '\\u2247',\n\tNotTildeTilde: '\\u2249',\n\tNotVerticalBar: '\\u2224',\n\tnpar: '\\u2226',\n\tnparallel: '\\u2226',\n\tnparsl: '\\u2AFD\\u20E5',\n\tnpart: '\\u2202\\u0338',\n\tnpolint: '\\u2A14',\n\tnpr: '\\u2280',\n\tnprcue: '\\u22E0',\n\tnpre: '\\u2AAF\\u0338',\n\tnprec: '\\u2280',\n\tnpreceq: '\\u2AAF\\u0338',\n\tnrArr: '\\u21CF',\n\tnrarr: '\\u219B',\n\tnrarrc: '\\u2933\\u0338',\n\tnrarrw: '\\u219D\\u0338',\n\tnRightarrow: '\\u21CF',\n\tnrightarrow: '\\u219B',\n\tnrtri: '\\u22EB',\n\tnrtrie: '\\u22ED',\n\tnsc: '\\u2281',\n\tnsccue: '\\u22E1',\n\tnsce: '\\u2AB0\\u0338',\n\tNscr: '\\uD835\\uDCA9',\n\tnscr: '\\uD835\\uDCC3',\n\tnshortmid: '\\u2224',\n\tnshortparallel: '\\u2226',\n\tnsim: '\\u2241',\n\tnsime: '\\u2244',\n\tnsimeq: '\\u2244',\n\tnsmid: '\\u2224',\n\tnspar: '\\u2226',\n\tnsqsube: '\\u22E2',\n\tnsqsupe: '\\u22E3',\n\tnsub: '\\u2284',\n\tnsubE: '\\u2AC5\\u0338',\n\tnsube: '\\u2288',\n\tnsubset: '\\u2282\\u20D2',\n\tnsubseteq: '\\u2288',\n\tnsubseteqq: '\\u2AC5\\u0338',\n\tnsucc: '\\u2281',\n\tnsucceq: '\\u2AB0\\u0338',\n\tnsup: '\\u2285',\n\tnsupE: '\\u2AC6\\u0338',\n\tnsupe: '\\u2289',\n\tnsupset: '\\u2283\\u20D2',\n\tnsupseteq: '\\u2289',\n\tnsupseteqq: '\\u2AC6\\u0338',\n\tntgl: '\\u2279',\n\tNtilde: '\\u00D1',\n\tntilde: '\\u00F1',\n\tntlg: '\\u2278',\n\tntriangleleft: '\\u22EA',\n\tntrianglelefteq: '\\u22EC',\n\tntriangleright: '\\u22EB',\n\tntrianglerighteq: '\\u22ED',\n\tNu: '\\u039D',\n\tnu: '\\u03BD',\n\tnum: '\\u0023',\n\tnumero: '\\u2116',\n\tnumsp: '\\u2007',\n\tnvap: '\\u224D\\u20D2',\n\tnVDash: '\\u22AF',\n\tnVdash: '\\u22AE',\n\tnvDash: '\\u22AD',\n\tnvdash: '\\u22AC',\n\tnvge: '\\u2265\\u20D2',\n\tnvgt: '\\u003E\\u20D2',\n\tnvHarr: '\\u2904',\n\tnvinfin: '\\u29DE',\n\tnvlArr: '\\u2902',\n\tnvle: '\\u2264\\u20D2',\n\tnvlt: '\\u003C\\u20D2',\n\tnvltrie: '\\u22B4\\u20D2',\n\tnvrArr: '\\u2903',\n\tnvrtrie: '\\u22B5\\u20D2',\n\tnvsim: '\\u223C\\u20D2',\n\tnwarhk: '\\u2923',\n\tnwArr: '\\u21D6',\n\tnwarr: '\\u2196',\n\tnwarrow: '\\u2196',\n\tnwnear: '\\u2927',\n\tOacute: '\\u00D3',\n\toacute: '\\u00F3',\n\toast: '\\u229B',\n\tocir: '\\u229A',\n\tOcirc: '\\u00D4',\n\tocirc: '\\u00F4',\n\tOcy: '\\u041E',\n\tocy: '\\u043E',\n\todash: '\\u229D',\n\tOdblac: '\\u0150',\n\todblac: '\\u0151',\n\todiv: '\\u2A38',\n\todot: '\\u2299',\n\todsold: '\\u29BC',\n\tOElig: '\\u0152',\n\toelig: '\\u0153',\n\tofcir: '\\u29BF',\n\tOfr: '\\uD835\\uDD12',\n\tofr: '\\uD835\\uDD2C',\n\togon: '\\u02DB',\n\tOgrave: '\\u00D2',\n\tograve: '\\u00F2',\n\togt: '\\u29C1',\n\tohbar: '\\u29B5',\n\tohm: '\\u03A9',\n\toint: '\\u222E',\n\tolarr: '\\u21BA',\n\tolcir: '\\u29BE',\n\tolcross: '\\u29BB',\n\toline: '\\u203E',\n\tolt: '\\u29C0',\n\tOmacr: '\\u014C',\n\tomacr: '\\u014D',\n\tOmega: '\\u03A9',\n\tomega: '\\u03C9',\n\tOmicron: '\\u039F',\n\tomicron: '\\u03BF',\n\tomid: '\\u29B6',\n\tominus: '\\u2296',\n\tOopf: '\\uD835\\uDD46',\n\toopf: '\\uD835\\uDD60',\n\topar: '\\u29B7',\n\tOpenCurlyDoubleQuote: '\\u201C',\n\tOpenCurlyQuote: '\\u2018',\n\toperp: '\\u29B9',\n\toplus: '\\u2295',\n\tOr: '\\u2A54',\n\tor: '\\u2228',\n\torarr: '\\u21BB',\n\tord: '\\u2A5D',\n\torder: '\\u2134',\n\torderof: '\\u2134',\n\tordf: '\\u00AA',\n\tordm: '\\u00BA',\n\torigof: '\\u22B6',\n\toror: '\\u2A56',\n\torslope: '\\u2A57',\n\torv: '\\u2A5B',\n\toS: '\\u24C8',\n\tOscr: '\\uD835\\uDCAA',\n\toscr: '\\u2134',\n\tOslash: '\\u00D8',\n\toslash: '\\u00F8',\n\tosol: '\\u2298',\n\tOtilde: '\\u00D5',\n\totilde: '\\u00F5',\n\tOtimes: '\\u2A37',\n\totimes: '\\u2297',\n\totimesas: '\\u2A36',\n\tOuml: '\\u00D6',\n\touml: '\\u00F6',\n\tovbar: '\\u233D',\n\tOverBar: '\\u203E',\n\tOverBrace: '\\u23DE',\n\tOverBracket: '\\u23B4',\n\tOverParenthesis: '\\u23DC',\n\tpar: '\\u2225',\n\tpara: '\\u00B6',\n\tparallel: '\\u2225',\n\tparsim: '\\u2AF3',\n\tparsl: '\\u2AFD',\n\tpart: '\\u2202',\n\tPartialD: '\\u2202',\n\tPcy: '\\u041F',\n\tpcy: '\\u043F',\n\tpercnt: '\\u0025',\n\tperiod: '\\u002E',\n\tpermil: '\\u2030',\n\tperp: '\\u22A5',\n\tpertenk: '\\u2031',\n\tPfr: '\\uD835\\uDD13',\n\tpfr: '\\uD835\\uDD2D',\n\tPhi: '\\u03A6',\n\tphi: '\\u03C6',\n\tphiv: '\\u03D5',\n\tphmmat: '\\u2133',\n\tphone: '\\u260E',\n\tPi: '\\u03A0',\n\tpi: '\\u03C0',\n\tpitchfork: '\\u22D4',\n\tpiv: '\\u03D6',\n\tplanck: '\\u210F',\n\tplanckh: '\\u210E',\n\tplankv: '\\u210F',\n\tplus: '\\u002B',\n\tplusacir: '\\u2A23',\n\tplusb: '\\u229E',\n\tpluscir: '\\u2A22',\n\tplusdo: '\\u2214',\n\tplusdu: '\\u2A25',\n\tpluse: '\\u2A72',\n\tPlusMinus: '\\u00B1',\n\tplusmn: '\\u00B1',\n\tplussim: '\\u2A26',\n\tplustwo: '\\u2A27',\n\tpm: '\\u00B1',\n\tPoincareplane: '\\u210C',\n\tpointint: '\\u2A15',\n\tPopf: '\\u2119',\n\tpopf: '\\uD835\\uDD61',\n\tpound: '\\u00A3',\n\tPr: '\\u2ABB',\n\tpr: '\\u227A',\n\tprap: '\\u2AB7',\n\tprcue: '\\u227C',\n\tprE: '\\u2AB3',\n\tpre: '\\u2AAF',\n\tprec: '\\u227A',\n\tprecapprox: '\\u2AB7',\n\tpreccurlyeq: '\\u227C',\n\tPrecedes: '\\u227A',\n\tPrecedesEqual: '\\u2AAF',\n\tPrecedesSlantEqual: '\\u227C',\n\tPrecedesTilde: '\\u227E',\n\tpreceq: '\\u2AAF',\n\tprecnapprox: '\\u2AB9',\n\tprecneqq: '\\u2AB5',\n\tprecnsim: '\\u22E8',\n\tprecsim: '\\u227E',\n\tPrime: '\\u2033',\n\tprime: '\\u2032',\n\tprimes: '\\u2119',\n\tprnap: '\\u2AB9',\n\tprnE: '\\u2AB5',\n\tprnsim: '\\u22E8',\n\tprod: '\\u220F',\n\tProduct: '\\u220F',\n\tprofalar: '\\u232E',\n\tprofline: '\\u2312',\n\tprofsurf: '\\u2313',\n\tprop: '\\u221D',\n\tProportion: '\\u2237',\n\tProportional: '\\u221D',\n\tpropto: '\\u221D',\n\tprsim: '\\u227E',\n\tprurel: '\\u22B0',\n\tPscr: '\\uD835\\uDCAB',\n\tpscr: '\\uD835\\uDCC5',\n\tPsi: '\\u03A8',\n\tpsi: '\\u03C8',\n\tpuncsp: '\\u2008',\n\tQfr: '\\uD835\\uDD14',\n\tqfr: '\\uD835\\uDD2E',\n\tqint: '\\u2A0C',\n\tQopf: '\\u211A',\n\tqopf: '\\uD835\\uDD62',\n\tqprime: '\\u2057',\n\tQscr: '\\uD835\\uDCAC',\n\tqscr: '\\uD835\\uDCC6',\n\tquaternions: '\\u210D',\n\tquatint: '\\u2A16',\n\tquest: '\\u003F',\n\tquesteq: '\\u225F',\n\tQUOT: '\\u0022',\n\tquot: '\\u0022',\n\trAarr: '\\u21DB',\n\trace: '\\u223D\\u0331',\n\tRacute: '\\u0154',\n\tracute: '\\u0155',\n\tradic: '\\u221A',\n\traemptyv: '\\u29B3',\n\tRang: '\\u27EB',\n\trang: '\\u27E9',\n\trangd: '\\u2992',\n\trange: '\\u29A5',\n\trangle: '\\u27E9',\n\traquo: '\\u00BB',\n\tRarr: '\\u21A0',\n\trArr: '\\u21D2',\n\trarr: '\\u2192',\n\trarrap: '\\u2975',\n\trarrb: '\\u21E5',\n\trarrbfs: '\\u2920',\n\trarrc: '\\u2933',\n\trarrfs: '\\u291E',\n\trarrhk: '\\u21AA',\n\trarrlp: '\\u21AC',\n\trarrpl: '\\u2945',\n\trarrsim: '\\u2974',\n\tRarrtl: '\\u2916',\n\trarrtl: '\\u21A3',\n\trarrw: '\\u219D',\n\trAtail: '\\u291C',\n\tratail: '\\u291A',\n\tratio: '\\u2236',\n\trationals: '\\u211A',\n\tRBarr: '\\u2910',\n\trBarr: '\\u290F',\n\trbarr: '\\u290D',\n\trbbrk: '\\u2773',\n\trbrace: '\\u007D',\n\trbrack: '\\u005D',\n\trbrke: '\\u298C',\n\trbrksld: '\\u298E',\n\trbrkslu: '\\u2990',\n\tRcaron: '\\u0158',\n\trcaron: '\\u0159',\n\tRcedil: '\\u0156',\n\trcedil: '\\u0157',\n\trceil: '\\u2309',\n\trcub: '\\u007D',\n\tRcy: '\\u0420',\n\trcy: '\\u0440',\n\trdca: '\\u2937',\n\trdldhar: '\\u2969',\n\trdquo: '\\u201D',\n\trdquor: '\\u201D',\n\trdsh: '\\u21B3',\n\tRe: '\\u211C',\n\treal: '\\u211C',\n\trealine: '\\u211B',\n\trealpart: '\\u211C',\n\treals: '\\u211D',\n\trect: '\\u25AD',\n\tREG: '\\u00AE',\n\treg: '\\u00AE',\n\tReverseElement: '\\u220B',\n\tReverseEquilibrium: '\\u21CB',\n\tReverseUpEquilibrium: '\\u296F',\n\trfisht: '\\u297D',\n\trfloor: '\\u230B',\n\tRfr: '\\u211C',\n\trfr: '\\uD835\\uDD2F',\n\trHar: '\\u2964',\n\trhard: '\\u21C1',\n\trharu: '\\u21C0',\n\trharul: '\\u296C',\n\tRho: '\\u03A1',\n\trho: '\\u03C1',\n\trhov: '\\u03F1',\n\tRightAngleBracket: '\\u27E9',\n\tRightArrow: '\\u2192',\n\tRightarrow: '\\u21D2',\n\trightarrow: '\\u2192',\n\tRightArrowBar: '\\u21E5',\n\tRightArrowLeftArrow: '\\u21C4',\n\trightarrowtail: '\\u21A3',\n\tRightCeiling: '\\u2309',\n\tRightDoubleBracket: '\\u27E7',\n\tRightDownTeeVector: '\\u295D',\n\tRightDownVector: '\\u21C2',\n\tRightDownVectorBar: '\\u2955',\n\tRightFloor: '\\u230B',\n\trightharpoondown: '\\u21C1',\n\trightharpoonup: '\\u21C0',\n\trightleftarrows: '\\u21C4',\n\trightleftharpoons: '\\u21CC',\n\trightrightarrows: '\\u21C9',\n\trightsquigarrow: '\\u219D',\n\tRightTee: '\\u22A2',\n\tRightTeeArrow: '\\u21A6',\n\tRightTeeVector: '\\u295B',\n\trightthreetimes: '\\u22CC',\n\tRightTriangle: '\\u22B3',\n\tRightTriangleBar: '\\u29D0',\n\tRightTriangleEqual: '\\u22B5',\n\tRightUpDownVector: '\\u294F',\n\tRightUpTeeVector: '\\u295C',\n\tRightUpVector: '\\u21BE',\n\tRightUpVectorBar: '\\u2954',\n\tRightVector: '\\u21C0',\n\tRightVectorBar: '\\u2953',\n\tring: '\\u02DA',\n\trisingdotseq: '\\u2253',\n\trlarr: '\\u21C4',\n\trlhar: '\\u21CC',\n\trlm: '\\u200F',\n\trmoust: '\\u23B1',\n\trmoustache: '\\u23B1',\n\trnmid: '\\u2AEE',\n\troang: '\\u27ED',\n\troarr: '\\u21FE',\n\trobrk: '\\u27E7',\n\tropar: '\\u2986',\n\tRopf: '\\u211D',\n\tropf: '\\uD835\\uDD63',\n\troplus: '\\u2A2E',\n\trotimes: '\\u2A35',\n\tRoundImplies: '\\u2970',\n\trpar: '\\u0029',\n\trpargt: '\\u2994',\n\trppolint: '\\u2A12',\n\trrarr: '\\u21C9',\n\tRrightarrow: '\\u21DB',\n\trsaquo: '\\u203A',\n\tRscr: '\\u211B',\n\trscr: '\\uD835\\uDCC7',\n\tRsh: '\\u21B1',\n\trsh: '\\u21B1',\n\trsqb: '\\u005D',\n\trsquo: '\\u2019',\n\trsquor: '\\u2019',\n\trthree: '\\u22CC',\n\trtimes: '\\u22CA',\n\trtri: '\\u25B9',\n\trtrie: '\\u22B5',\n\trtrif: '\\u25B8',\n\trtriltri: '\\u29CE',\n\tRuleDelayed: '\\u29F4',\n\truluhar: '\\u2968',\n\trx: '\\u211E',\n\tSacute: '\\u015A',\n\tsacute: '\\u015B',\n\tsbquo: '\\u201A',\n\tSc: '\\u2ABC',\n\tsc: '\\u227B',\n\tscap: '\\u2AB8',\n\tScaron: '\\u0160',\n\tscaron: '\\u0161',\n\tsccue: '\\u227D',\n\tscE: '\\u2AB4',\n\tsce: '\\u2AB0',\n\tScedil: '\\u015E',\n\tscedil: '\\u015F',\n\tScirc: '\\u015C',\n\tscirc: '\\u015D',\n\tscnap: '\\u2ABA',\n\tscnE: '\\u2AB6',\n\tscnsim: '\\u22E9',\n\tscpolint: '\\u2A13',\n\tscsim: '\\u227F',\n\tScy: '\\u0421',\n\tscy: '\\u0441',\n\tsdot: '\\u22C5',\n\tsdotb: '\\u22A1',\n\tsdote: '\\u2A66',\n\tsearhk: '\\u2925',\n\tseArr: '\\u21D8',\n\tsearr: '\\u2198',\n\tsearrow: '\\u2198',\n\tsect: '\\u00A7',\n\tsemi: '\\u003B',\n\tseswar: '\\u2929',\n\tsetminus: '\\u2216',\n\tsetmn: '\\u2216',\n\tsext: '\\u2736',\n\tSfr: '\\uD835\\uDD16',\n\tsfr: '\\uD835\\uDD30',\n\tsfrown: '\\u2322',\n\tsharp: '\\u266F',\n\tSHCHcy: '\\u0429',\n\tshchcy: '\\u0449',\n\tSHcy: '\\u0428',\n\tshcy: '\\u0448',\n\tShortDownArrow: '\\u2193',\n\tShortLeftArrow: '\\u2190',\n\tshortmid: '\\u2223',\n\tshortparallel: '\\u2225',\n\tShortRightArrow: '\\u2192',\n\tShortUpArrow: '\\u2191',\n\tshy: '\\u00AD',\n\tSigma: '\\u03A3',\n\tsigma: '\\u03C3',\n\tsigmaf: '\\u03C2',\n\tsigmav: '\\u03C2',\n\tsim: '\\u223C',\n\tsimdot: '\\u2A6A',\n\tsime: '\\u2243',\n\tsimeq: '\\u2243',\n\tsimg: '\\u2A9E',\n\tsimgE: '\\u2AA0',\n\tsiml: '\\u2A9D',\n\tsimlE: '\\u2A9F',\n\tsimne: '\\u2246',\n\tsimplus: '\\u2A24',\n\tsimrarr: '\\u2972',\n\tslarr: '\\u2190',\n\tSmallCircle: '\\u2218',\n\tsmallsetminus: '\\u2216',\n\tsmashp: '\\u2A33',\n\tsmeparsl: '\\u29E4',\n\tsmid: '\\u2223',\n\tsmile: '\\u2323',\n\tsmt: '\\u2AAA',\n\tsmte: '\\u2AAC',\n\tsmtes: '\\u2AAC\\uFE00',\n\tSOFTcy: '\\u042C',\n\tsoftcy: '\\u044C',\n\tsol: '\\u002F',\n\tsolb: '\\u29C4',\n\tsolbar: '\\u233F',\n\tSopf: '\\uD835\\uDD4A',\n\tsopf: '\\uD835\\uDD64',\n\tspades: '\\u2660',\n\tspadesuit: '\\u2660',\n\tspar: '\\u2225',\n\tsqcap: '\\u2293',\n\tsqcaps: '\\u2293\\uFE00',\n\tsqcup: '\\u2294',\n\tsqcups: '\\u2294\\uFE00',\n\tSqrt: '\\u221A',\n\tsqsub: '\\u228F',\n\tsqsube: '\\u2291',\n\tsqsubset: '\\u228F',\n\tsqsubseteq: '\\u2291',\n\tsqsup: '\\u2290',\n\tsqsupe: '\\u2292',\n\tsqsupset: '\\u2290',\n\tsqsupseteq: '\\u2292',\n\tsqu: '\\u25A1',\n\tSquare: '\\u25A1',\n\tsquare: '\\u25A1',\n\tSquareIntersection: '\\u2293',\n\tSquareSubset: '\\u228F',\n\tSquareSubsetEqual: '\\u2291',\n\tSquareSuperset: '\\u2290',\n\tSquareSupersetEqual: '\\u2292',\n\tSquareUnion: '\\u2294',\n\tsquarf: '\\u25AA',\n\tsquf: '\\u25AA',\n\tsrarr: '\\u2192',\n\tSscr: '\\uD835\\uDCAE',\n\tsscr: '\\uD835\\uDCC8',\n\tssetmn: '\\u2216',\n\tssmile: '\\u2323',\n\tsstarf: '\\u22C6',\n\tStar: '\\u22C6',\n\tstar: '\\u2606',\n\tstarf: '\\u2605',\n\tstraightepsilon: '\\u03F5',\n\tstraightphi: '\\u03D5',\n\tstrns: '\\u00AF',\n\tSub: '\\u22D0',\n\tsub: '\\u2282',\n\tsubdot: '\\u2ABD',\n\tsubE: '\\u2AC5',\n\tsube: '\\u2286',\n\tsubedot: '\\u2AC3',\n\tsubmult: '\\u2AC1',\n\tsubnE: '\\u2ACB',\n\tsubne: '\\u228A',\n\tsubplus: '\\u2ABF',\n\tsubrarr: '\\u2979',\n\tSubset: '\\u22D0',\n\tsubset: '\\u2282',\n\tsubseteq: '\\u2286',\n\tsubseteqq: '\\u2AC5',\n\tSubsetEqual: '\\u2286',\n\tsubsetneq: '\\u228A',\n\tsubsetneqq: '\\u2ACB',\n\tsubsim: '\\u2AC7',\n\tsubsub: '\\u2AD5',\n\tsubsup: '\\u2AD3',\n\tsucc: '\\u227B',\n\tsuccapprox: '\\u2AB8',\n\tsucccurlyeq: '\\u227D',\n\tSucceeds: '\\u227B',\n\tSucceedsEqual: '\\u2AB0',\n\tSucceedsSlantEqual: '\\u227D',\n\tSucceedsTilde: '\\u227F',\n\tsucceq: '\\u2AB0',\n\tsuccnapprox: '\\u2ABA',\n\tsuccneqq: '\\u2AB6',\n\tsuccnsim: '\\u22E9',\n\tsuccsim: '\\u227F',\n\tSuchThat: '\\u220B',\n\tSum: '\\u2211',\n\tsum: '\\u2211',\n\tsung: '\\u266A',\n\tSup: '\\u22D1',\n\tsup: '\\u2283',\n\tsup1: '\\u00B9',\n\tsup2: '\\u00B2',\n\tsup3: '\\u00B3',\n\tsupdot: '\\u2ABE',\n\tsupdsub: '\\u2AD8',\n\tsupE: '\\u2AC6',\n\tsupe: '\\u2287',\n\tsupedot: '\\u2AC4',\n\tSuperset: '\\u2283',\n\tSupersetEqual: '\\u2287',\n\tsuphsol: '\\u27C9',\n\tsuphsub: '\\u2AD7',\n\tsuplarr: '\\u297B',\n\tsupmult: '\\u2AC2',\n\tsupnE: '\\u2ACC',\n\tsupne: '\\u228B',\n\tsupplus: '\\u2AC0',\n\tSupset: '\\u22D1',\n\tsupset: '\\u2283',\n\tsupseteq: '\\u2287',\n\tsupseteqq: '\\u2AC6',\n\tsupsetneq: '\\u228B',\n\tsupsetneqq: '\\u2ACC',\n\tsupsim: '\\u2AC8',\n\tsupsub: '\\u2AD4',\n\tsupsup: '\\u2AD6',\n\tswarhk: '\\u2926',\n\tswArr: '\\u21D9',\n\tswarr: '\\u2199',\n\tswarrow: '\\u2199',\n\tswnwar: '\\u292A',\n\tszlig: '\\u00DF',\n\tTab: '\\u0009',\n\ttarget: '\\u2316',\n\tTau: '\\u03A4',\n\ttau: '\\u03C4',\n\ttbrk: '\\u23B4',\n\tTcaron: '\\u0164',\n\ttcaron: '\\u0165',\n\tTcedil: '\\u0162',\n\ttcedil: '\\u0163',\n\tTcy: '\\u0422',\n\ttcy: '\\u0442',\n\ttdot: '\\u20DB',\n\ttelrec: '\\u2315',\n\tTfr: '\\uD835\\uDD17',\n\ttfr: '\\uD835\\uDD31',\n\tthere4: '\\u2234',\n\tTherefore: '\\u2234',\n\ttherefore: '\\u2234',\n\tTheta: '\\u0398',\n\ttheta: '\\u03B8',\n\tthetasym: '\\u03D1',\n\tthetav: '\\u03D1',\n\tthickapprox: '\\u2248',\n\tthicksim: '\\u223C',\n\tThickSpace: '\\u205F\\u200A',\n\tthinsp: '\\u2009',\n\tThinSpace: '\\u2009',\n\tthkap: '\\u2248',\n\tthksim: '\\u223C',\n\tTHORN: '\\u00DE',\n\tthorn: '\\u00FE',\n\tTilde: '\\u223C',\n\ttilde: '\\u02DC',\n\tTildeEqual: '\\u2243',\n\tTildeFullEqual: '\\u2245',\n\tTildeTilde: '\\u2248',\n\ttimes: '\\u00D7',\n\ttimesb: '\\u22A0',\n\ttimesbar: '\\u2A31',\n\ttimesd: '\\u2A30',\n\ttint: '\\u222D',\n\ttoea: '\\u2928',\n\ttop: '\\u22A4',\n\ttopbot: '\\u2336',\n\ttopcir: '\\u2AF1',\n\tTopf: '\\uD835\\uDD4B',\n\ttopf: '\\uD835\\uDD65',\n\ttopfork: '\\u2ADA',\n\ttosa: '\\u2929',\n\ttprime: '\\u2034',\n\tTRADE: '\\u2122',\n\ttrade: '\\u2122',\n\ttriangle: '\\u25B5',\n\ttriangledown: '\\u25BF',\n\ttriangleleft: '\\u25C3',\n\ttrianglelefteq: '\\u22B4',\n\ttriangleq: '\\u225C',\n\ttriangleright: '\\u25B9',\n\ttrianglerighteq: '\\u22B5',\n\ttridot: '\\u25EC',\n\ttrie: '\\u225C',\n\ttriminus: '\\u2A3A',\n\tTripleDot: '\\u20DB',\n\ttriplus: '\\u2A39',\n\ttrisb: '\\u29CD',\n\ttritime: '\\u2A3B',\n\ttrpezium: '\\u23E2',\n\tTscr: '\\uD835\\uDCAF',\n\ttscr: '\\uD835\\uDCC9',\n\tTScy: '\\u0426',\n\ttscy: '\\u0446',\n\tTSHcy: '\\u040B',\n\ttshcy: '\\u045B',\n\tTstrok: '\\u0166',\n\ttstrok: '\\u0167',\n\ttwixt: '\\u226C',\n\ttwoheadleftarrow: '\\u219E',\n\ttwoheadrightarrow: '\\u21A0',\n\tUacute: '\\u00DA',\n\tuacute: '\\u00FA',\n\tUarr: '\\u219F',\n\tuArr: '\\u21D1',\n\tuarr: '\\u2191',\n\tUarrocir: '\\u2949',\n\tUbrcy: '\\u040E',\n\tubrcy: '\\u045E',\n\tUbreve: '\\u016C',\n\tubreve: '\\u016D',\n\tUcirc: '\\u00DB',\n\tucirc: '\\u00FB',\n\tUcy: '\\u0423',\n\tucy: '\\u0443',\n\tudarr: '\\u21C5',\n\tUdblac: '\\u0170',\n\tudblac: '\\u0171',\n\tudhar: '\\u296E',\n\tufisht: '\\u297E',\n\tUfr: '\\uD835\\uDD18',\n\tufr: '\\uD835\\uDD32',\n\tUgrave: '\\u00D9',\n\tugrave: '\\u00F9',\n\tuHar: '\\u2963',\n\tuharl: '\\u21BF',\n\tuharr: '\\u21BE',\n\tuhblk: '\\u2580',\n\tulcorn: '\\u231C',\n\tulcorner: '\\u231C',\n\tulcrop: '\\u230F',\n\tultri: '\\u25F8',\n\tUmacr: '\\u016A',\n\tumacr: '\\u016B',\n\tuml: '\\u00A8',\n\tUnderBar: '\\u005F',\n\tUnderBrace: '\\u23DF',\n\tUnderBracket: '\\u23B5',\n\tUnderParenthesis: '\\u23DD',\n\tUnion: '\\u22C3',\n\tUnionPlus: '\\u228E',\n\tUogon: '\\u0172',\n\tuogon: '\\u0173',\n\tUopf: '\\uD835\\uDD4C',\n\tuopf: '\\uD835\\uDD66',\n\tUpArrow: '\\u2191',\n\tUparrow: '\\u21D1',\n\tuparrow: '\\u2191',\n\tUpArrowBar: '\\u2912',\n\tUpArrowDownArrow: '\\u21C5',\n\tUpDownArrow: '\\u2195',\n\tUpdownarrow: '\\u21D5',\n\tupdownarrow: '\\u2195',\n\tUpEquilibrium: '\\u296E',\n\tupharpoonleft: '\\u21BF',\n\tupharpoonright: '\\u21BE',\n\tuplus: '\\u228E',\n\tUpperLeftArrow: '\\u2196',\n\tUpperRightArrow: '\\u2197',\n\tUpsi: '\\u03D2',\n\tupsi: '\\u03C5',\n\tupsih: '\\u03D2',\n\tUpsilon: '\\u03A5',\n\tupsilon: '\\u03C5',\n\tUpTee: '\\u22A5',\n\tUpTeeArrow: '\\u21A5',\n\tupuparrows: '\\u21C8',\n\turcorn: '\\u231D',\n\turcorner: '\\u231D',\n\turcrop: '\\u230E',\n\tUring: '\\u016E',\n\turing: '\\u016F',\n\turtri: '\\u25F9',\n\tUscr: '\\uD835\\uDCB0',\n\tuscr: '\\uD835\\uDCCA',\n\tutdot: '\\u22F0',\n\tUtilde: '\\u0168',\n\tutilde: '\\u0169',\n\tutri: '\\u25B5',\n\tutrif: '\\u25B4',\n\tuuarr: '\\u21C8',\n\tUuml: '\\u00DC',\n\tuuml: '\\u00FC',\n\tuwangle: '\\u29A7',\n\tvangrt: '\\u299C',\n\tvarepsilon: '\\u03F5',\n\tvarkappa: '\\u03F0',\n\tvarnothing: '\\u2205',\n\tvarphi: '\\u03D5',\n\tvarpi: '\\u03D6',\n\tvarpropto: '\\u221D',\n\tvArr: '\\u21D5',\n\tvarr: '\\u2195',\n\tvarrho: '\\u03F1',\n\tvarsigma: '\\u03C2',\n\tvarsubsetneq: '\\u228A\\uFE00',\n\tvarsubsetneqq: '\\u2ACB\\uFE00',\n\tvarsupsetneq: '\\u228B\\uFE00',\n\tvarsupsetneqq: '\\u2ACC\\uFE00',\n\tvartheta: '\\u03D1',\n\tvartriangleleft: '\\u22B2',\n\tvartriangleright: '\\u22B3',\n\tVbar: '\\u2AEB',\n\tvBar: '\\u2AE8',\n\tvBarv: '\\u2AE9',\n\tVcy: '\\u0412',\n\tvcy: '\\u0432',\n\tVDash: '\\u22AB',\n\tVdash: '\\u22A9',\n\tvDash: '\\u22A8',\n\tvdash: '\\u22A2',\n\tVdashl: '\\u2AE6',\n\tVee: '\\u22C1',\n\tvee: '\\u2228',\n\tveebar: '\\u22BB',\n\tveeeq: '\\u225A',\n\tvellip: '\\u22EE',\n\tVerbar: '\\u2016',\n\tverbar: '\\u007C',\n\tVert: '\\u2016',\n\tvert: '\\u007C',\n\tVerticalBar: '\\u2223',\n\tVerticalLine: '\\u007C',\n\tVerticalSeparator: '\\u2758',\n\tVerticalTilde: '\\u2240',\n\tVeryThinSpace: '\\u200A',\n\tVfr: '\\uD835\\uDD19',\n\tvfr: '\\uD835\\uDD33',\n\tvltri: '\\u22B2',\n\tvnsub: '\\u2282\\u20D2',\n\tvnsup: '\\u2283\\u20D2',\n\tVopf: '\\uD835\\uDD4D',\n\tvopf: '\\uD835\\uDD67',\n\tvprop: '\\u221D',\n\tvrtri: '\\u22B3',\n\tVscr: '\\uD835\\uDCB1',\n\tvscr: '\\uD835\\uDCCB',\n\tvsubnE: '\\u2ACB\\uFE00',\n\tvsubne: '\\u228A\\uFE00',\n\tvsupnE: '\\u2ACC\\uFE00',\n\tvsupne: '\\u228B\\uFE00',\n\tVvdash: '\\u22AA',\n\tvzigzag: '\\u299A',\n\tWcirc: '\\u0174',\n\twcirc: '\\u0175',\n\twedbar: '\\u2A5F',\n\tWedge: '\\u22C0',\n\twedge: '\\u2227',\n\twedgeq: '\\u2259',\n\tweierp: '\\u2118',\n\tWfr: '\\uD835\\uDD1A',\n\twfr: '\\uD835\\uDD34',\n\tWopf: '\\uD835\\uDD4E',\n\twopf: '\\uD835\\uDD68',\n\twp: '\\u2118',\n\twr: '\\u2240',\n\twreath: '\\u2240',\n\tWscr: '\\uD835\\uDCB2',\n\twscr: '\\uD835\\uDCCC',\n\txcap: '\\u22C2',\n\txcirc: '\\u25EF',\n\txcup: '\\u22C3',\n\txdtri: '\\u25BD',\n\tXfr: '\\uD835\\uDD1B',\n\txfr: '\\uD835\\uDD35',\n\txhArr: '\\u27FA',\n\txharr: '\\u27F7',\n\tXi: '\\u039E',\n\txi: '\\u03BE',\n\txlArr: '\\u27F8',\n\txlarr: '\\u27F5',\n\txmap: '\\u27FC',\n\txnis: '\\u22FB',\n\txodot: '\\u2A00',\n\tXopf: '\\uD835\\uDD4F',\n\txopf: '\\uD835\\uDD69',\n\txoplus: '\\u2A01',\n\txotime: '\\u2A02',\n\txrArr: '\\u27F9',\n\txrarr: '\\u27F6',\n\tXscr: '\\uD835\\uDCB3',\n\txscr: '\\uD835\\uDCCD',\n\txsqcup: '\\u2A06',\n\txuplus: '\\u2A04',\n\txutri: '\\u25B3',\n\txvee: '\\u22C1',\n\txwedge: '\\u22C0',\n\tYacute: '\\u00DD',\n\tyacute: '\\u00FD',\n\tYAcy: '\\u042F',\n\tyacy: '\\u044F',\n\tYcirc: '\\u0176',\n\tycirc: '\\u0177',\n\tYcy: '\\u042B',\n\tycy: '\\u044B',\n\tyen: '\\u00A5',\n\tYfr: '\\uD835\\uDD1C',\n\tyfr: '\\uD835\\uDD36',\n\tYIcy: '\\u0407',\n\tyicy: '\\u0457',\n\tYopf: '\\uD835\\uDD50',\n\tyopf: '\\uD835\\uDD6A',\n\tYscr: '\\uD835\\uDCB4',\n\tyscr: '\\uD835\\uDCCE',\n\tYUcy: '\\u042E',\n\tyucy: '\\u044E',\n\tYuml: '\\u0178',\n\tyuml: '\\u00FF',\n\tZacute: '\\u0179',\n\tzacute: '\\u017A',\n\tZcaron: '\\u017D',\n\tzcaron: '\\u017E',\n\tZcy: '\\u0417',\n\tzcy: '\\u0437',\n\tZdot: '\\u017B',\n\tzdot: '\\u017C',\n\tzeetrf: '\\u2128',\n\tZeroWidthSpace: '\\u200B',\n\tZeta: '\\u0396',\n\tzeta: '\\u03B6',\n\tZfr: '\\u2128',\n\tzfr: '\\uD835\\uDD37',\n\tZHcy: '\\u0416',\n\tzhcy: '\\u0436',\n\tzigrarr: '\\u21DD',\n\tZopf: '\\u2124',\n\tzopf: '\\uD835\\uDD6B',\n\tZscr: '\\uD835\\uDCB5',\n\tzscr: '\\uD835\\uDCCF',\n\tzwj: '\\u200D',\n\tzwnj: '\\u200C',\n});\n\n/**\n * @deprecated use `HTML_ENTITIES` instead\n * @see HTML_ENTITIES\n */\nexports.entityMap = exports.HTML_ENTITIES;\n","var NAMESPACE = require(\"./conventions\").NAMESPACE;\n\n//[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n//[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n//[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\nvar nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]///\\u10000-\\uEFFFF\nvar nameChar = new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\nvar tagNamePattern = new RegExp('^'+nameStartChar.source+nameChar.source+'*(?:\\:'+nameStartChar.source+nameChar.source+'*)?$');\n//var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\n//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\n\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\nvar S_TAG = 0;//tag name offerring\nvar S_ATTR = 1;//attr name offerring\nvar S_ATTR_SPACE=2;//attr name end and space offer\nvar S_EQ = 3;//=space?\nvar S_ATTR_NOQUOT_VALUE = 4;//attr value(no quot value only)\nvar S_ATTR_END = 5;//attr value end and no space(quot end)\nvar S_TAG_SPACE = 6;//(attr value end || tag end ) && (space offer)\nvar S_TAG_CLOSE = 7;//closed el<el />\n\n/**\n * Creates an error that will not be caught by XMLReader aka the SAX parser.\n *\n * @param {string} message\n * @param {any?} locator Optional, can provide details about the location in the source\n * @constructor\n */\nfunction ParseError(message, locator) {\n\tthis.message = message\n\tthis.locator = locator\n\tif(Error.captureStackTrace) Error.captureStackTrace(this, ParseError);\n}\nParseError.prototype = new Error();\nParseError.prototype.name = ParseError.name\n\nfunction XMLReader(){\n\n}\n\nXMLReader.prototype = {\n\tparse:function(source,defaultNSMap,entityMap){\n\t\tvar domBuilder = this.domBuilder;\n\t\tdomBuilder.startDocument();\n\t\t_copy(defaultNSMap ,defaultNSMap = {})\n\t\tparse(source,defaultNSMap,entityMap,\n\t\t\t\tdomBuilder,this.errorHandler);\n\t\tdomBuilder.endDocument();\n\t}\n}\nfunction parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){\n\tfunction fixedFromCharCode(code) {\n\t\t// String.prototype.fromCharCode does not supports\n\t\t// > 2 bytes unicode chars directly\n\t\tif (code > 0xffff) {\n\t\t\tcode -= 0x10000;\n\t\t\tvar surrogate1 = 0xd800 + (code >> 10)\n\t\t\t\t, surrogate2 = 0xdc00 + (code & 0x3ff);\n\n\t\t\treturn String.fromCharCode(surrogate1, surrogate2);\n\t\t} else {\n\t\t\treturn String.fromCharCode(code);\n\t\t}\n\t}\n\tfunction entityReplacer(a){\n\t\tvar k = a.slice(1,-1);\n\t\tif (Object.hasOwnProperty.call(entityMap, k)) {\n\t\t\treturn entityMap[k];\n\t\t}else if(k.charAt(0) === '#'){\n\t\t\treturn fixedFromCharCode(parseInt(k.substr(1).replace('x','0x')))\n\t\t}else{\n\t\t\terrorHandler.error('entity not found:'+a);\n\t\t\treturn a;\n\t\t}\n\t}\n\tfunction appendText(end){//has some bugs\n\t\tif(end>start){\n\t\t\tvar xt = source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\tlocator&&position(start);\n\t\t\tdomBuilder.characters(xt,0,end-start);\n\t\t\tstart = end\n\t\t}\n\t}\n\tfunction position(p,m){\n\t\twhile(p>=lineEnd && (m = linePattern.exec(source))){\n\t\t\tlineStart = m.index;\n\t\t\tlineEnd = lineStart + m[0].length;\n\t\t\tlocator.lineNumber++;\n\t\t\t//console.log('line++:',locator,startPos,endPos)\n\t\t}\n\t\tlocator.columnNumber = p-lineStart+1;\n\t}\n\tvar lineStart = 0;\n\tvar lineEnd = 0;\n\tvar linePattern = /.*(?:\\r\\n?|\\n)|.*$/g\n\tvar locator = domBuilder.locator;\n\n\tvar parseStack = [{currentNSMap:defaultNSMapCopy}]\n\tvar closeMap = {};\n\tvar start = 0;\n\twhile(true){\n\t\ttry{\n\t\t\tvar tagStart = source.indexOf('<',start);\n\t\t\tif(tagStart<0){\n\t\t\t\tif(!source.substr(start).match(/^\\s*$/)){\n\t\t\t\t\tvar doc = domBuilder.doc;\n\t    \t\t\tvar text = doc.createTextNode(source.substr(start));\n\t    \t\t\tdoc.appendChild(text);\n\t    \t\t\tdomBuilder.currentElement = text;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(tagStart>start){\n\t\t\t\tappendText(tagStart);\n\t\t\t}\n\t\t\tswitch(source.charAt(tagStart+1)){\n\t\t\tcase '/':\n\t\t\t\tvar end = source.indexOf('>',tagStart+3);\n\t\t\t\tvar tagName = source.substring(tagStart + 2, end).replace(/[ \\t\\n\\r]+$/g, '');\n\t\t\t\tvar config = parseStack.pop();\n\t\t\t\tif(end<0){\n\n\t        \t\ttagName = source.substring(tagStart+2).replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' is not complete:'+config.tagName);\n\t        \t\tend = tagStart+1+tagName.length;\n\t        \t}else if(tagName.match(/\\s</)){\n\t        \t\ttagName = tagName.replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' maybe not complete');\n\t        \t\tend = tagStart+1+tagName.length;\n\t\t\t\t}\n\t\t\t\tvar localNSMap = config.localNSMap;\n\t\t\t\tvar endMatch = config.tagName == tagName;\n\t\t\t\tvar endIgnoreCaseMach = endMatch || config.tagName&&config.tagName.toLowerCase() == tagName.toLowerCase()\n\t\t        if(endIgnoreCaseMach){\n\t\t        \tdomBuilder.endElement(config.uri,config.localName,tagName);\n\t\t\t\t\tif(localNSMap){\n\t\t\t\t\t\tfor (var prefix in localNSMap) {\n\t\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!endMatch){\n\t\t            \terrorHandler.fatalError(\"end tag name: \"+tagName+' is not match the current start tagName:'+config.tagName ); // No known test case\n\t\t\t\t\t}\n\t\t        }else{\n\t\t        \tparseStack.push(config)\n\t\t        }\n\n\t\t\t\tend++;\n\t\t\t\tbreak;\n\t\t\t\t// end elment\n\t\t\tcase '?':// <?...?>\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseInstruction(source,tagStart,domBuilder);\n\t\t\t\tbreak;\n\t\t\tcase '!':// <!doctype,<![CDATA,<!--\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseDCC(source,tagStart,domBuilder,errorHandler);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tvar el = new ElementAttributes();\n\t\t\t\tvar currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\t\t\t\t//elStartEnd\n\t\t\t\tvar end = parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);\n\t\t\t\tvar len = el.length;\n\n\n\t\t\t\tif(!el.closed && fixSelfClosed(source,end,el.tagName,closeMap)){\n\t\t\t\t\tel.closed = true;\n\t\t\t\t\tif(!entityMap.nbsp){\n\t\t\t\t\t\terrorHandler.warning('unclosed xml attribute');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(locator && len){\n\t\t\t\t\tvar locator2 = copyLocator(locator,{});\n\t\t\t\t\t//try{//attribute position fixed\n\t\t\t\t\tfor(var i = 0;i<len;i++){\n\t\t\t\t\t\tvar a = el[i];\n\t\t\t\t\t\tposition(a.offset);\n\t\t\t\t\t\ta.locator = copyLocator(locator,{});\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator2\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator;\n\t\t\t\t}else{\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (NAMESPACE.isHTML(el.uri) && !el.closed) {\n\t\t\t\t\tend = parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)\n\t\t\t\t} else {\n\t\t\t\t\tend++;\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(e){\n\t\t\tif (e instanceof ParseError) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\terrorHandler.error('element parse error: '+e)\n\t\t\tend = -1;\n\t\t}\n\t\tif(end>start){\n\t\t\tstart = end;\n\t\t}else{\n\t\t\t//TODO: 这里有可能sax回退，有位置错误风险\n\t\t\tappendText(Math.max(tagStart,start)+1);\n\t\t}\n\t}\n}\nfunction copyLocator(f,t){\n\tt.lineNumber = f.lineNumber;\n\tt.columnNumber = f.columnNumber;\n\treturn t;\n}\n\n/**\n * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\n * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\n */\nfunction parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){\n\n\t/**\n\t * @param {string} qname\n\t * @param {string} value\n\t * @param {number} startIndex\n\t */\n\tfunction addAttribute(qname, value, startIndex) {\n\t\tif (el.attributeNames.hasOwnProperty(qname)) {\n\t\t\terrorHandler.fatalError('Attribute ' + qname + ' redefined')\n\t\t}\n\t\tel.addValue(\n\t\t\tqname,\n\t\t\t// @see https://www.w3.org/TR/xml/#AVNormalize\n\t\t\t// since the xmldom sax parser does not \"interpret\" DTD the following is not implemented:\n\t\t\t// - recursive replacement of (DTD) entity references\n\t\t\t// - trimming and collapsing multiple spaces into a single one for attributes that are not of type CDATA\n\t\t\tvalue.replace(/[\\t\\n\\r]/g, ' ').replace(/&#?\\w+;/g, entityReplacer),\n\t\t\tstartIndex\n\t\t)\n\t}\n\tvar attrName;\n\tvar value;\n\tvar p = ++start;\n\tvar s = S_TAG;//status\n\twhile(true){\n\t\tvar c = source.charAt(p);\n\t\tswitch(c){\n\t\tcase '=':\n\t\t\tif(s === S_ATTR){//attrName\n\t\t\t\tattrName = source.slice(start,p);\n\t\t\t\ts = S_EQ;\n\t\t\t}else if(s === S_ATTR_SPACE){\n\t\t\t\ts = S_EQ;\n\t\t\t}else{\n\t\t\t\t//fatalError: equal must after attrName or space after attrName\n\t\t\t\tthrow new Error('attribute equal must after attrName'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '\\'':\n\t\tcase '\"':\n\t\t\tif(s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE\n\t\t\t\t){//equal\n\t\t\t\tif(s === S_ATTR){\n\t\t\t\t\terrorHandler.warning('attribute value must after \"=\"')\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t}\n\t\t\t\tstart = p+1;\n\t\t\t\tp = source.indexOf(c,start)\n\t\t\t\tif(p>0){\n\t\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\t\taddAttribute(attrName, value, start-1);\n\t\t\t\t\ts = S_ATTR_END;\n\t\t\t\t}else{\n\t\t\t\t\t//fatalError: no end quot match\n\t\t\t\t\tthrow new Error('attribute value no end \\''+c+'\\' match');\n\t\t\t\t}\n\t\t\t}else if(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\taddAttribute(attrName, value, start);\n\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+')!!');\n\t\t\t\tstart = p+1;\n\t\t\t\ts = S_ATTR_END\n\t\t\t}else{\n\t\t\t\t//fatalError: no equal before\n\t\t\t\tthrow new Error('attribute value must after \"=\"'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '/':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\ts =S_TAG_CLOSE;\n\t\t\t\tel.closed = true;\n\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\tcase S_ATTR:\n\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tel.closed = true;\n\t\t\t\tbreak;\n\t\t\t//case S_EQ:\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"attribute invalid close char('/')\") // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ''://end document\n\t\t\terrorHandler.error('unexpected end of input');\n\t\t\tif(s == S_TAG){\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\t}\n\t\t\treturn p;\n\t\tcase '>':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\tbreak;//normal\n\t\t\tcase S_ATTR_NOQUOT_VALUE://Compatible state\n\t\t\tcase S_ATTR:\n\t\t\t\tvalue = source.slice(start,p);\n\t\t\t\tif(value.slice(-1) === '/'){\n\t\t\t\t\tel.closed  = true;\n\t\t\t\t\tvalue = value.slice(0,-1)\n\t\t\t\t}\n\t\t\tcase S_ATTR_SPACE:\n\t\t\t\tif(s === S_ATTR_SPACE){\n\t\t\t\t\tvalue = attrName;\n\t\t\t\t}\n\t\t\t\tif(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\t}else{\n\t\t\t\t\tif(!NAMESPACE.isHTML(currentNSMap['']) || !value.match(/^(?:disabled|checked|selected)$/i)){\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(value, value, start)\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase S_EQ:\n\t\t\t\tthrow new Error('attribute value missed!!');\n\t\t\t}\n//\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\n\t\t\treturn p;\n\t\t/*xml space '\\x20' | #x9 | #xD | #xA; */\n\t\tcase '\\u0080':\n\t\t\tc = ' ';\n\t\tdefault:\n\t\t\tif(c<= ' '){//space\n\t\t\t\tswitch(s){\n\t\t\t\tcase S_TAG:\n\t\t\t\t\tel.setTagName(source.slice(start,p));//tagName\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR:\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t\ts = S_ATTR_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\t\t\tvar value = source.slice(start, p);\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\t//case S_TAG_SPACE:\n\t\t\t\t//case S_EQ:\n\t\t\t\t//case S_ATTR_SPACE:\n\t\t\t\t//\tvoid();break;\n\t\t\t\t//case S_TAG_CLOSE:\n\t\t\t\t\t//ignore warning\n\t\t\t\t}\n\t\t\t}else{//not space\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n\t\t\t\tswitch(s){\n\t\t\t\t//case S_TAG:void();break;\n\t\t\t\t//case S_ATTR:void();break;\n\t\t\t\t//case S_ATTR_NOQUOT_VALUE:void();break;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tvar tagName =  el.tagName;\n\t\t\t\t\tif (!NAMESPACE.isHTML(currentNSMap['']) || !attrName.match(/^(?:disabled|checked|selected)$/i)) {\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(attrName, attrName, start);\n\t\t\t\t\tstart = p;\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\terrorHandler.warning('attribute space is required\"'+attrName+'\"!!')\n\t\t\t\tcase S_TAG_SPACE:\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_EQ:\n\t\t\t\t\ts = S_ATTR_NOQUOT_VALUE;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_TAG_CLOSE:\n\t\t\t\t\tthrow new Error(\"elements closed character '/' and '>' must be connected to\");\n\t\t\t\t}\n\t\t\t}\n\t\t}//end outer switch\n\t\t//console.log('p++',p)\n\t\tp++;\n\t}\n}\n/**\n * @return true if has new namespace define\n */\nfunction appendElement(el,domBuilder,currentNSMap){\n\tvar tagName = el.tagName;\n\tvar localNSMap = null;\n\t//var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\tvar i = el.length;\n\twhile(i--){\n\t\tvar a = el[i];\n\t\tvar qName = a.qName;\n\t\tvar value = a.value;\n\t\tvar nsp = qName.indexOf(':');\n\t\tif(nsp>0){\n\t\t\tvar prefix = a.prefix = qName.slice(0,nsp);\n\t\t\tvar localName = qName.slice(nsp+1);\n\t\t\tvar nsPrefix = prefix === 'xmlns' && localName\n\t\t}else{\n\t\t\tlocalName = qName;\n\t\t\tprefix = null\n\t\t\tnsPrefix = qName === 'xmlns' && ''\n\t\t}\n\t\t//can not set prefix,because prefix !== ''\n\t\ta.localName = localName ;\n\t\t//prefix == null for no ns prefix attribute\n\t\tif(nsPrefix !== false){//hack!!\n\t\t\tif(localNSMap == null){\n\t\t\t\tlocalNSMap = {}\n\t\t\t\t//console.log(currentNSMap,0)\n\t\t\t\t_copy(currentNSMap,currentNSMap={})\n\t\t\t\t//console.log(currentNSMap,1)\n\t\t\t}\n\t\t\tcurrentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\n\t\t\ta.uri = NAMESPACE.XMLNS\n\t\t\tdomBuilder.startPrefixMapping(nsPrefix, value)\n\t\t}\n\t}\n\tvar i = el.length;\n\twhile(i--){\n\t\ta = el[i];\n\t\tvar prefix = a.prefix;\n\t\tif(prefix){//no prefix attribute has no namespace\n\t\t\tif(prefix === 'xml'){\n\t\t\t\ta.uri = NAMESPACE.XML;\n\t\t\t}if(prefix !== 'xmlns'){\n\t\t\t\ta.uri = currentNSMap[prefix || '']\n\n\t\t\t\t//{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\n\t\t\t}\n\t\t}\n\t}\n\tvar nsp = tagName.indexOf(':');\n\tif(nsp>0){\n\t\tprefix = el.prefix = tagName.slice(0,nsp);\n\t\tlocalName = el.localName = tagName.slice(nsp+1);\n\t}else{\n\t\tprefix = null;//important!!\n\t\tlocalName = el.localName = tagName;\n\t}\n\t//no prefix element has default namespace\n\tvar ns = el.uri = currentNSMap[prefix || ''];\n\tdomBuilder.startElement(ns,localName,tagName,el);\n\t//endPrefixMapping and startPrefixMapping have not any help for dom builder\n\t//localNSMap = null\n\tif(el.closed){\n\t\tdomBuilder.endElement(ns,localName,tagName);\n\t\tif(localNSMap){\n\t\t\tfor (prefix in localNSMap) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}else{\n\t\tel.currentNSMap = currentNSMap;\n\t\tel.localNSMap = localNSMap;\n\t\t//parseStack.push(el);\n\t\treturn true;\n\t}\n}\nfunction parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){\n\tif(/^(?:script|textarea)$/i.test(tagName)){\n\t\tvar elEndStart =  source.indexOf('</'+tagName+'>',elStartEnd);\n\t\tvar text = source.substring(elStartEnd+1,elEndStart);\n\t\tif(/[&<]/.test(text)){\n\t\t\tif(/^script$/i.test(tagName)){\n\t\t\t\t//if(!/\\]\\]>/.test(text)){\n\t\t\t\t\t//lexHandler.startCDATA();\n\t\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\t\t//lexHandler.endCDATA();\n\t\t\t\t\treturn elEndStart;\n\t\t\t\t//}\n\t\t\t}//}else{//text area\n\t\t\t\ttext = text.replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\treturn elEndStart;\n\t\t\t//}\n\n\t\t}\n\t}\n\treturn elStartEnd+1;\n}\nfunction fixSelfClosed(source,elStartEnd,tagName,closeMap){\n\t//if(tagName in closeMap){\n\tvar pos = closeMap[tagName];\n\tif(pos == null){\n\t\t//console.log(tagName)\n\t\tpos =  source.lastIndexOf('</'+tagName+'>')\n\t\tif(pos<elStartEnd){//忘记闭合\n\t\t\tpos = source.lastIndexOf('</'+tagName)\n\t\t}\n\t\tcloseMap[tagName] =pos\n\t}\n\treturn pos<elStartEnd;\n\t//}\n}\n\nfunction _copy (source, target) {\n\tfor (var n in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, n)) {\n\t\t\ttarget[n] = source[n];\n\t\t}\n\t}\n}\n\nfunction parseDCC(source,start,domBuilder,errorHandler){//sure start with '<!'\n\tvar next= source.charAt(start+2)\n\tswitch(next){\n\tcase '-':\n\t\tif(source.charAt(start + 3) === '-'){\n\t\t\tvar end = source.indexOf('-->',start+4);\n\t\t\t//append comment source.substring(4,end)//<!--\n\t\t\tif(end>start){\n\t\t\t\tdomBuilder.comment(source,start+4,end-start-4);\n\t\t\t\treturn end+3;\n\t\t\t}else{\n\t\t\t\terrorHandler.error(\"Unclosed comment\");\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}else{\n\t\t\t//error\n\t\t\treturn -1;\n\t\t}\n\tdefault:\n\t\tif(source.substr(start+3,6) == 'CDATA['){\n\t\t\tvar end = source.indexOf(']]>',start+9);\n\t\t\tdomBuilder.startCDATA();\n\t\t\tdomBuilder.characters(source,start+9,end-start-9);\n\t\t\tdomBuilder.endCDATA()\n\t\t\treturn end+3;\n\t\t}\n\t\t//<!DOCTYPE\n\t\t//startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId)\n\t\tvar matchs = split(source,start);\n\t\tvar len = matchs.length;\n\t\tif(len>1 && /!doctype/i.test(matchs[0][0])){\n\t\t\tvar name = matchs[1][0];\n\t\t\tvar pubid = false;\n\t\t\tvar sysid = false;\n\t\t\tif(len>3){\n\t\t\t\tif(/^public$/i.test(matchs[2][0])){\n\t\t\t\t\tpubid = matchs[3][0];\n\t\t\t\t\tsysid = len>4 && matchs[4][0];\n\t\t\t\t}else if(/^system$/i.test(matchs[2][0])){\n\t\t\t\t\tsysid = matchs[3][0];\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar lastMatch = matchs[len-1]\n\t\t\tdomBuilder.startDTD(name, pubid, sysid);\n\t\t\tdomBuilder.endDTD();\n\n\t\t\treturn lastMatch.index+lastMatch[0].length\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n\nfunction parseInstruction(source,start,domBuilder){\n\tvar end = source.indexOf('?>',start);\n\tif(end){\n\t\tvar match = source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\n\t\tif(match){\n\t\t\tvar len = match[0].length;\n\t\t\tdomBuilder.processingInstruction(match[1], match[2]) ;\n\t\t\treturn end+2;\n\t\t}else{//error\n\t\t\treturn -1;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction ElementAttributes(){\n\tthis.attributeNames = {}\n}\nElementAttributes.prototype = {\n\tsetTagName:function(tagName){\n\t\tif(!tagNamePattern.test(tagName)){\n\t\t\tthrow new Error('invalid tagName:'+tagName)\n\t\t}\n\t\tthis.tagName = tagName\n\t},\n\taddValue:function(qName, value, offset) {\n\t\tif(!tagNamePattern.test(qName)){\n\t\t\tthrow new Error('invalid attribute:'+qName)\n\t\t}\n\t\tthis.attributeNames[qName] = this.length;\n\t\tthis[this.length++] = {qName:qName,value:value,offset:offset}\n\t},\n\tlength:0,\n\tgetLocalName:function(i){return this[i].localName},\n\tgetLocator:function(i){return this[i].locator},\n\tgetQName:function(i){return this[i].qName},\n\tgetURI:function(i){return this[i].uri},\n\tgetValue:function(i){return this[i].value}\n//\t,getIndex:function(uri, localName)){\n//\t\tif(localName){\n//\n//\t\t}else{\n//\t\t\tvar qName = uri\n//\t\t}\n//\t},\n//\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\n//\tgetType:function(uri,localName){}\n//\tgetType:function(i){},\n}\n\n\n\nfunction split(source,start){\n\tvar match;\n\tvar buf = [];\n\tvar reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\n\treg.lastIndex = start;\n\treg.exec(source);//skip <\n\twhile(match = reg.exec(source)){\n\t\tbuf.push(match);\n\t\tif(match[1])return buf;\n\t}\n}\n\nexports.XMLReader = XMLReader;\nexports.ParseError = ParseError;\n",null,"import {INDENT_STRING, NEWLINE_STRING, IToXmlOptions} from '../options.ts';\nimport {\n\tIElement,\n\tassertXmlTagName,\n\txmlElementChildElements,\n\txmlElementText\n} from '../util.ts';\nimport {Value} from '../value.ts';\n\nimport {ValueArray} from './array.ts';\nimport {ValueBoolean} from './boolean.ts';\nimport {ValueData} from './data.ts';\nimport {ValueInteger} from './integer.ts';\nimport {ValueReal} from './real.ts';\nimport {ValueString} from './string.ts';\n\nlet childTagNames: Readonly<Map<string, new () => Value>>;\n\n/**\n * ValueDict object.\n */\nexport class ValueDict extends Value {\n\t/**\n\t * Value type.\n\t */\n\tpublic static readonly TYPE = 'dict';\n\n\t/**\n\t * Tag names.\n\t */\n\tpublic static readonly TAG_NAMES = ['dict'];\n\n\t/**\n\t * Child tag names.\n\t *\n\t * @returns Child tag names map.\n\t */\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tpublic static get CHILD_TAG_NAMES() {\n\t\tif (!childTagNames) {\n\t\t\tchildTagNames = new Map();\n\t\t\tfor (const ValueType of [\n\t\t\t\tValueArray,\n\t\t\t\tValueBoolean,\n\t\t\t\tValueData,\n\t\t\t\tValueDict,\n\t\t\t\tValueInteger,\n\t\t\t\tValueReal,\n\t\t\t\tValueString\n\t\t\t]) {\n\t\t\t\tfor (const t of ValueType.TAG_NAMES) {\n\t\t\t\t\tchildTagNames.set(t, ValueType);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn childTagNames;\n\t}\n\n\t/**\n\t * Value value.\n\t */\n\tpublic value = new Map<string, Value>();\n\n\t/**\n\t * ValueDict constructor.\n\t *\n\t * @param value The value.\n\t */\n\tconstructor(value = new Map<string, Value>()) {\n\t\tsuper();\n\n\t\tthis.value = value;\n\t}\n\n\t/**\n\t * Dictionary size.\n\t *\n\t * @returns The size.\n\t */\n\tpublic get size() {\n\t\treturn this.value.size;\n\t}\n\n\t/**\n\t * Check if key exists.\n\t *\n\t * @param key Dictionary key.\n\t * @returns The value or null.\n\t */\n\tpublic has(key: string) {\n\t\treturn this.value.has(key);\n\t}\n\n\t/**\n\t * Get value for key or null if does not exist.\n\t *\n\t * @param key Dictionary key.\n\t * @returns The value or null.\n\t */\n\tpublic get(key: string) {\n\t\treturn this.value.get(key) || null;\n\t}\n\n\t/**\n\t * Get value for key or throw.\n\t *\n\t * @param key Dictionary key.\n\t * @returns The value.\n\t */\n\tpublic getValue(key: string) {\n\t\tconst r = this.get(key);\n\t\tif (!r) {\n\t\t\tthrow new Error(`Key is null: ${key}`);\n\t\t}\n\t\treturn r;\n\t}\n\n\t/**\n\t * Set value for key.\n\t *\n\t * @param key Dictionary key.\n\t * @param value Value object.\n\t */\n\tpublic set(key: string, value: Value) {\n\t\tthis.value.set(key, value);\n\t}\n\n\t/**\n\t * Delete value for key.\n\t *\n\t * @param key Dictionary key.\n\t */\n\tpublic delete(key: string) {\n\t\tthis.value.delete(key);\n\t}\n\n\t/**\n\t * Clear dictionary.\n\t */\n\tpublic clear() {\n\t\tthis.value.clear();\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic fromXmlElement(element: Readonly<IElement>) {\n\t\tassertXmlTagName(element, 'dict');\n\t\tconst children = xmlElementChildElements(element);\n\t\tconst l = children.length;\n\t\tif (l % 2) {\n\t\t\tthrow new Error(`Uneven number of child elements: ${l}`);\n\t\t}\n\t\tconst v: Map<string, Value> = new Map();\n\t\tfor (let i = 0; i < l; i += 2) {\n\t\t\tconst eK = children[i];\n\t\t\tconst eV = children[i + 1];\n\t\t\tassertXmlTagName(eK, 'key');\n\t\t\tconst key = xmlElementText(eK)?.nodeValue || '';\n\t\t\tconst value = this.childFromXmlElement(eV);\n\t\t\tv.set(key, value);\n\t\t}\n\t\tthis.value = v;\n\t}\n\n\t/**\n\t * Decode child element from XML element.\n\t *\n\t * @param element XML element.\n\t * @returns Value element.\n\t */\n\tpublic childFromXmlElement(element: Readonly<IElement>) {\n\t\tconst {tagName} = element;\n\t\tconst {CHILD_TAG_NAMES} = this.constructor as typeof ValueDict;\n\t\tconst Value = CHILD_TAG_NAMES.get(tagName) || null;\n\t\tif (!Value) {\n\t\t\tthrow new Error(`Unknown element type: ${tagName}`);\n\t\t}\n\t\tconst r = new Value();\n\t\tr.fromXmlElement(element);\n\t\treturn r;\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic toXml(options: Readonly<IToXmlOptions> | null = null, depth = 0) {\n\t\tconst i = options?.indentString ?? INDENT_STRING;\n\t\tconst n = options?.newlineString ?? NEWLINE_STRING;\n\t\tconst p = i.repeat(depth);\n\t\tconst v = this.value;\n\t\tif (!v.size) {\n\t\t\treturn `${p}<dict/>`;\n\t\t}\n\t\tconst p2 = i.repeat(depth + 1);\n\t\tlet r = `${p}<dict>`;\n\t\tfor (const [key, val] of v) {\n\t\t\tconst e = key\n\t\t\t\t.replaceAll('&', '&amp;')\n\t\t\t\t.replaceAll('<', '&lt;')\n\t\t\t\t.replaceAll('>', '&gt;');\n\t\t\tr += `${n}${p2}<key>${e}</key>${n}${val.toXml(options, depth + 1)}`;\n\t\t}\n\t\tr += `${n}${p}</dict>`;\n\t\treturn r;\n\t}\n}\n",null,"import {IToXmlOptions} from './options.ts';\nimport {IElement, xmlDecode} from './util.ts';\n\n/**\n * Value object.\n */\nexport abstract class Value {\n\t/**\n\t * Value type.\n\t */\n\tpublic static readonly TYPE: string;\n\n\t/**\n\t * Tag names.\n\t */\n\tpublic static readonly TAG_NAMES: string[];\n\n\t/**\n\t * Value constructor.\n\t */\n\tconstructor() {}\n\n\t/**\n\t * Value type.\n\t *\n\t * @returns Type string.\n\t */\n\tpublic get type() {\n\t\treturn (this.constructor as typeof Value).TYPE;\n\t}\n\n\t/**\n\t * Cast to specific type or null.\n\t *\n\t * @param Type Type constructor.\n\t * @returns This object or null.\n\t */\n\tpublic castTo<T extends typeof Value>(Type: T): T['prototype'] | null {\n\t\treturn this.type === Type.TYPE ? this : null;\n\t}\n\n\t/**\n\t * Cast to specific type or throw.\n\t *\n\t * @param Type Type constructor.\n\t * @returns This object.\n\t */\n\tpublic castAs<T extends typeof Value>(Type: T): T['prototype'] {\n\t\tconst casted = this.castTo(Type);\n\t\tif (!casted) {\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot cast type '${this.type}' to '${Type.TYPE}'`\n\t\t\t);\n\t\t}\n\t\treturn casted;\n\t}\n\n\t/**\n\t * Decode document from string.\n\t *\n\t * @param xml XML string.\n\t */\n\tpublic fromXml(xml: string) {\n\t\tconst {documentElement} = xmlDecode(xml);\n\t\tthis.fromXmlElement(documentElement);\n\t}\n\n\t/**\n\t * Decode value from element.\n\t *\n\t * @param element XML element.\n\t */\n\tpublic abstract fromXmlElement(element: Readonly<IElement>): void;\n\n\t/**\n\t * Encode Value to string.\n\t *\n\t * @param options Options object.\n\t * @param depth Indent depth.\n\t * @returns Xml string.\n\t */\n\tpublic abstract toXml(\n\t\toptions?: Readonly<IToXmlOptions> | null,\n\t\tdepth?: number\n\t): string;\n}\n",null,"import {INDENT_STRING, NEWLINE_STRING, IToXmlOptions} from '../options.ts';\nimport {IElement, assertXmlTagName, xmlElementChildElements} from '../util.ts';\nimport {Value} from '../value.ts';\n\nimport {ValueBoolean} from './boolean.ts';\nimport {ValueData} from './data.ts';\nimport {ValueDict} from './dict.ts';\nimport {ValueInteger} from './integer.ts';\nimport {ValueReal} from './real.ts';\nimport {ValueString} from './string.ts';\n\nlet childTagNames: Readonly<Map<string, new () => Value>>;\n\n/**\n * ValueArray object.\n */\nexport class ValueArray extends Value {\n\t/**\n\t * Value type.\n\t */\n\tpublic static readonly TYPE = 'array';\n\n\t/**\n\t * Tag names.\n\t */\n\tpublic static readonly TAG_NAMES = ['array'];\n\n\t/**\n\t * Child tag names.\n\t *\n\t * @returns Child tag names map.\n\t */\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tpublic static get CHILD_TAG_NAMES() {\n\t\tif (!childTagNames) {\n\t\t\tchildTagNames = new Map();\n\t\t\tfor (const ValueType of [\n\t\t\t\tValueArray,\n\t\t\t\tValueBoolean,\n\t\t\t\tValueData,\n\t\t\t\tValueDict,\n\t\t\t\tValueInteger,\n\t\t\t\tValueReal,\n\t\t\t\tValueString\n\t\t\t]) {\n\t\t\t\tfor (const t of ValueType.TAG_NAMES) {\n\t\t\t\t\tchildTagNames.set(t, ValueType);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn childTagNames;\n\t}\n\n\t/**\n\t * Value value.\n\t */\n\tpublic value: Value[] = [];\n\n\t/**\n\t * ValueArray constructor.\n\t *\n\t * @param value The value.\n\t */\n\tconstructor(value: Value[] = []) {\n\t\tsuper();\n\n\t\tthis.value = value;\n\t}\n\n\t/**\n\t * Array length.\n\t *\n\t * @returns The length.\n\t */\n\tpublic get length() {\n\t\treturn this.value.length;\n\t}\n\n\t/**\n\t * Get value at index or null if out of bounds.\n\t *\n\t * @param index Array index.\n\t * @returns The value or null.\n\t */\n\tpublic get(index: number) {\n\t\tconst {value} = this;\n\t\treturn index < this.length ? value[index] : null;\n\t}\n\n\t/**\n\t * Get value at index or throw.\n\t *\n\t * @param index Array index.\n\t * @returns The value.\n\t */\n\tpublic getValue(index: number) {\n\t\tconst r = this.get(index);\n\t\tif (!r) {\n\t\t\tthrow new Error(`Index out of bounds: ${index}`);\n\t\t}\n\t\treturn r;\n\t}\n\n\t/**\n\t * Set value at index.\n\t *\n\t * @param index Array index.\n\t * @param value Value object.\n\t */\n\tpublic set(index: number, value: Value) {\n\t\tthis.value[index] = value;\n\t}\n\n\t/**\n\t * Push values onto array.\n\t *\n\t * @param values Value objects.\n\t */\n\tpublic push(...values: Value[]) {\n\t\tthis.value.push(...values);\n\t}\n\n\t/**\n\t * Pop value off array or null.\n\t *\n\t * @returns Value object or null.\n\t */\n\tpublic pop() {\n\t\treturn this.value.pop() || null;\n\t}\n\n\t/**\n\t * Pop value off array or throw.\n\t *\n\t * @returns Value object or null.\n\t */\n\tpublic popValue() {\n\t\tconst r = this.pop();\n\t\tif (!r) {\n\t\t\tthrow new Error('Cannot pop empty array');\n\t\t}\n\t\treturn r;\n\t}\n\n\t/**\n\t * Shift value off array or null.\n\t *\n\t * @returns Value object or null.\n\t */\n\tpublic shift() {\n\t\treturn this.value.shift() || null;\n\t}\n\n\t/**\n\t * Pop value off array or throw.\n\t *\n\t * @returns Value object or null.\n\t */\n\tpublic shiftValue() {\n\t\tconst r = this.shift();\n\t\tif (!r) {\n\t\t\tthrow new Error('Cannot shift empty array');\n\t\t}\n\t\treturn r;\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic fromXmlElement(element: Readonly<IElement>) {\n\t\tassertXmlTagName(element, 'array');\n\t\tconst children = xmlElementChildElements(element);\n\t\tthis.value = children.map(el => this.childFromXmlElement(el));\n\t}\n\n\t/**\n\t * Decode child element from XML element.\n\t *\n\t * @param element XML element.\n\t * @returns Value element.\n\t */\n\tpublic childFromXmlElement(element: Readonly<IElement>) {\n\t\tconst {tagName} = element;\n\t\tconst {CHILD_TAG_NAMES} = this.constructor as typeof ValueArray;\n\t\tconst Value = CHILD_TAG_NAMES.get(tagName) || null;\n\t\tif (!Value) {\n\t\t\tthrow new Error(`Unknown element type: ${tagName}`);\n\t\t}\n\t\tconst r = new Value();\n\t\tr.fromXmlElement(element);\n\t\treturn r;\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic toXml(options: Readonly<IToXmlOptions> | null = null, depth = 0) {\n\t\tconst n = options?.newlineString ?? NEWLINE_STRING;\n\t\tconst p = (options?.indentString ?? INDENT_STRING).repeat(depth);\n\t\tconst v = this.value;\n\t\tif (!v.length) {\n\t\t\treturn `${p}<array/>`;\n\t\t}\n\t\tlet r = `${p}<array>`;\n\t\tfor (const el of v) {\n\t\t\tr += `${n}${el.toXml(options, depth + 1)}`;\n\t\t}\n\t\tr += `${n}${p}</array>`;\n\t\treturn r;\n\t}\n}\n",null,"import {INDENT_STRING, IToXmlOptions} from '../options.ts';\nimport {\n\tIElement,\n\tassertNoXmlElementChildNodes,\n\tassertXmlTagName\n} from '../util.ts';\nimport {Value} from '../value.ts';\n\n/**\n * ValueBoolean object.\n */\nexport class ValueBoolean extends Value {\n\t/**\n\t * Value type.\n\t */\n\tpublic static readonly TYPE = 'boolean';\n\n\t/**\n\t * Tag names.\n\t */\n\tpublic static readonly TAG_NAMES = ['true', 'false'];\n\n\t/**\n\t * Value value.\n\t */\n\tpublic value = false;\n\n\t/**\n\t * ValueBoolean constructor.\n\t *\n\t * @param value The value.\n\t */\n\tconstructor(value = false) {\n\t\tsuper();\n\n\t\tthis.value = value;\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic fromXmlElement(element: Readonly<IElement>) {\n\t\tassertNoXmlElementChildNodes(element);\n\t\tswitch (element.tagName) {\n\t\t\tcase 'true': {\n\t\t\t\tthis.value = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcase 'false': {\n\t\t\t\tthis.value = false;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tthrow assertXmlTagName(element, '');\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic toXml(options: Readonly<IToXmlOptions> | null = null, depth = 0) {\n\t\tconst p = (options?.indentString ?? INDENT_STRING).repeat(depth);\n\t\treturn this.value ? `${p}<true/>` : `${p}<false/>`;\n\t}\n}\n",null,"import {\n\tDATA_COLUMNS,\n\tINDENT_STRING,\n\tIToXmlOptions,\n\tNEWLINE_STRING\n} from '../options.ts';\nimport {\n\tIElement,\n\tassertXmlTagName,\n\tbase64Decode,\n\tbase64Encode,\n\txmlElementText\n} from '../util.ts';\nimport {Value} from '../value.ts';\n\n/**\n * ValueData object.\n */\nexport class ValueData extends Value {\n\t/**\n\t * Value type.\n\t */\n\tpublic static readonly TYPE = 'data';\n\n\t/**\n\t * Tag names.\n\t */\n\tpublic static readonly TAG_NAMES = ['data'];\n\n\t/**\n\t * Value value.\n\t */\n\tpublic value: Uint8Array;\n\n\t/**\n\t * ValueData constructor.\n\t *\n\t * @param value The value.\n\t */\n\tconstructor(value = new Uint8Array(0)) {\n\t\tsuper();\n\n\t\tthis.value = value;\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic fromXmlElement(element: Readonly<IElement>) {\n\t\tassertXmlTagName(element, 'data');\n\t\tconst text = xmlElementText(element)?.nodeValue || '';\n\t\tthis.value = base64Decode(text);\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic toXml(options: Readonly<IToXmlOptions> | null = null, depth = 0) {\n\t\tconst n = options?.newlineString ?? NEWLINE_STRING;\n\t\tconst c = options?.dataColumns ?? DATA_COLUMNS;\n\t\tconst p = (options?.indentString ?? INDENT_STRING).repeat(depth);\n\t\tlet r = `${p}<data>`;\n\t\tif (c > 0) {\n\t\t\tfor (let s = base64Encode(this.value); s; s = s.slice(c)) {\n\t\t\t\tr += `${n}${p}${s.slice(0, c)}`;\n\t\t\t}\n\t\t} else {\n\t\t\tr += `${n}${p}${base64Encode(this.value)}`;\n\t\t}\n\t\tr += `${n}${p}</data>`;\n\t\treturn r;\n\t}\n}\n",null,"import {INDENT_STRING, IToXmlOptions} from '../options.ts';\nimport {IElement, assertXmlTagName, xmlElementText} from '../util.ts';\nimport {Value} from '../value.ts';\n\nconst MAX_NUM = 0x1fffffffffffff;\n\n/**\n * Assert number is integer.\n *\n * @param value Number value.\n */\nfunction assertInteger(value: number | bigint) {\n\tif (typeof value === 'number' && !Number.isInteger(value)) {\n\t\t// eslint-disable-next-line unicorn/prefer-type-error\n\t\tthrow new Error(`Value not an integer: ${value}`);\n\t}\n}\n\n/**\n * ValueInteger object.\n */\nexport class ValueInteger extends Value {\n\t/**\n\t * Value type.\n\t */\n\tpublic static readonly TYPE = 'integer';\n\n\t/**\n\t * Tag names.\n\t */\n\tpublic static readonly TAG_NAMES = ['integer'];\n\n\t/**\n\t * Value value.\n\t */\n\tpublic value: number | bigint = 0;\n\n\t/**\n\t * ValueInteger constructor.\n\t *\n\t * @param value The value.\n\t */\n\tconstructor(value: number | bigint = 0) {\n\t\tsuper();\n\n\t\tassertInteger(value);\n\t\tthis.value = value;\n\t}\n\n\t/**\n\t * Get value as BigInt.\n\t *\n\t * @returns Value as a BigInt.\n\t */\n\tpublic asBigInt() {\n\t\treturn BigInt(this.value);\n\t}\n\n\t/**\n\t * Get value as Number, possibly losing some precision.\n\t *\n\t * @returns Value as a Number.\n\t */\n\tpublic asNumber() {\n\t\treturn Number(this.value);\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic fromXmlElement(element: Readonly<IElement>) {\n\t\tassertXmlTagName(element, 'integer');\n\t\tconst text = xmlElementText(element)?.nodeValue || '';\n\t\tif (!/^[+-]?\\d+$/.test(text)) {\n\t\t\tthrow new Error(`Invalid integer data: ${text}`);\n\t\t}\n\t\tconst num = +text;\n\t\tthis.value = num > MAX_NUM || num < -MAX_NUM ? BigInt(text) : num;\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic toXml(options: Readonly<IToXmlOptions> | null = null, depth = 0) {\n\t\tconst p = (options?.indentString ?? INDENT_STRING).repeat(depth);\n\t\tconst v = this.value;\n\t\tassertInteger(v);\n\t\treturn `${p}<integer>${v}</integer>`;\n\t}\n}\n",null,"import {INDENT_STRING, IToXmlOptions} from '../options.ts';\nimport {IElement, assertXmlTagName, xmlElementText} from '../util.ts';\nimport {Value} from '../value.ts';\n\n/**\n * ValueReal object.\n */\nexport class ValueReal extends Value {\n\t/**\n\t * Value type.\n\t */\n\tpublic static readonly TYPE = 'real';\n\n\t/**\n\t * Tag names.\n\t */\n\tpublic static readonly TAG_NAMES = ['real'];\n\n\t/**\n\t * Value value.\n\t */\n\tpublic value = 0;\n\n\t/**\n\t * ValueReal constructor.\n\t *\n\t * @param value The value.\n\t */\n\tconstructor(value = 0) {\n\t\tsuper();\n\n\t\tthis.value = value;\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic fromXmlElement(element: Readonly<IElement>) {\n\t\tassertXmlTagName(element, 'real');\n\t\tconst text = xmlElementText(element)?.nodeValue || '';\n\t\tif (!/^[+-]?(\\d+|\\d*\\.\\d+)$/.test(text)) {\n\t\t\tthrow new Error(`Invalid real data: ${text}`);\n\t\t}\n\t\tthis.value = +text;\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic toXml(options: Readonly<IToXmlOptions> | null = null, depth = 0) {\n\t\tconst p = (options?.indentString ?? INDENT_STRING).repeat(depth);\n\t\tconst v = this.value;\n\t\treturn `${p}<real>${v}</real>`;\n\t}\n}\n",null,"import {INDENT_STRING, IToXmlOptions} from '../options.ts';\nimport {IElement, assertXmlTagName, xmlElementText} from '../util.ts';\nimport {Value} from '../value.ts';\n\n/**\n * ValueString object.\n */\nexport class ValueString extends Value {\n\t/**\n\t * Value type.\n\t */\n\tpublic static readonly TYPE = 'string';\n\n\t/**\n\t * Tag names.\n\t */\n\tpublic static readonly TAG_NAMES = ['string'];\n\n\t/**\n\t * Value value.\n\t */\n\tpublic value = '';\n\n\t/**\n\t * ValueString constructor.\n\t *\n\t * @param value The value.\n\t */\n\tconstructor(value = '') {\n\t\tsuper();\n\n\t\tthis.value = value;\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic fromXmlElement(element: Readonly<IElement>) {\n\t\tassertXmlTagName(element, 'string');\n\t\tthis.value = xmlElementText(element)?.nodeValue || '';\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic toXml(options: Readonly<IToXmlOptions> | null = null, depth = 0) {\n\t\tconst p = (options?.indentString ?? INDENT_STRING).repeat(depth);\n\t\tconst e = this.value\n\t\t\t.replaceAll('&', '&amp;')\n\t\t\t.replaceAll('<', '&lt;')\n\t\t\t.replaceAll('>', '&gt;');\n\t\treturn `${p}<string>${e}</string>`;\n\t}\n}\n",null,"/* eslint-disable max-classes-per-file */\n\nimport {createWriteStream} from 'node:fs';\nimport {mkdir, rm, writeFile} from 'node:fs/promises';\nimport {dirname, resolve} from 'node:path';\nimport {Readable, pipeline} from 'node:stream';\nimport {promisify} from 'node:util';\n\nconst pipe = promisify(pipeline);\n\nimport {PathType} from './types';\nimport {\n\tfsChmod,\n\tfsLchmod,\n\tfsLstatExists,\n\tfsLutimes,\n\tfsSymlink,\n\tfsUtimes,\n\tmodePermissionBits,\n\tpathNormalize,\n\tpathResourceFork,\n\tstreamToBuffer\n} from './util';\n\nexport interface IArchiveAfterReadSetAttributesEntry {\n\t/**\n\t * Extract path, relative.\n\t */\n\tpath: string;\n\n\t/**\n\t * Entry.\n\t */\n\tentry: Entry;\n\n\t/**\n\t * Extract options.\n\t */\n\toptions: IExtractOptions;\n}\n\nexport interface IExtractOptions {\n\t/**\n\t * Replace whatever may be at the path.\n\t * A directory will not replace another directory.\n\t *\n\t * @default false\n\t */\n\treplace?: boolean;\n\n\t/**\n\t * Ignore permissions when extracting.\n\t *\n\t * @default false\n\t */\n\tignorePermissions?: boolean;\n\n\t/**\n\t * Ignore file modification and access times when extracting.\n\t *\n\t * @default false\n\t */\n\tignoreTimes?: boolean;\n\n\t/**\n\t * Extract resource fork as a file.\n\t *\n\t * @default false\n\t */\n\tresourceForkAsFile?: boolean;\n\n\t/**\n\t * Extract symlink as a file.\n\t *\n\t * @default false\n\t */\n\tsymlinkAsFile?: boolean;\n}\n\nexport interface IEntryInfo {\n\t/**\n\t * Entry archive.\n\t */\n\tarchive: Archive;\n\n\t/**\n\t * Entry type.\n\t */\n\ttype: PathType;\n\n\t/**\n\t * Entry path, raw.\n\t */\n\tpathRaw: string;\n\n\t/**\n\t * Entry size.\n\t */\n\tsize?: number | null;\n\n\t/**\n\t * Entry size, compressed.\n\t */\n\tsizeComp?: number | null;\n\n\t/**\n\t * Entry mode.\n\t */\n\tmode?: number | null;\n\n\t/**\n\t * Entry uid.\n\t */\n\tuid?: number | null;\n\n\t/**\n\t * Entry gid.\n\t */\n\tgid?: number | null;\n\n\t/**\n\t * Entry uname.\n\t */\n\tuname?: string | null;\n\n\t/**\n\t * Entry gname.\n\t */\n\tgname?: string | null;\n\n\t/**\n\t * Entry atime.\n\t */\n\tatime?: Date | null;\n\n\t/**\n\t * Entry mtime.\n\t */\n\tmtime?: Date | null;\n\n\t/**\n\t * Read data.\n\t */\n\treadData?: (() => Promise<Readable | null>) | null;\n\n\t/**\n\t * Read rsrc.\n\t */\n\treadRsrc?: (() => Promise<Readable | null>) | null;\n\n\t/**\n\t * Read symlink.\n\t */\n\treadSymlink?: (() => Promise<Buffer>) | null;\n}\n\n/**\n * Entry object.\n */\nexport abstract class Entry {\n\t/**\n\t * Entry archive.\n\t */\n\tpublic readonly archive: Archive;\n\n\t/**\n\t * Entry type.\n\t */\n\tpublic readonly type: PathType;\n\n\t/**\n\t * Entry path.\n\t */\n\tpublic readonly path: string;\n\n\t/**\n\t * Entry path, raw.\n\t */\n\tpublic readonly pathRaw: string;\n\n\t/**\n\t * Entry size.\n\t */\n\tpublic readonly size: number | null;\n\n\t/**\n\t * Entry size, compressed.\n\t */\n\tpublic readonly sizeComp: number | null;\n\n\t/**\n\t * Entry mode.\n\t */\n\tpublic readonly mode: number | null;\n\n\t/**\n\t * Entry uid.\n\t */\n\tpublic readonly uid: number | null;\n\n\t/**\n\t * Entry gid.\n\t */\n\tpublic readonly gid: number | null;\n\n\t/**\n\t * Entry uname.\n\t */\n\tpublic readonly uname: string | null;\n\n\t/**\n\t * Entry gname.\n\t */\n\tpublic readonly gname: string | null;\n\n\t/**\n\t * Entry atime.\n\t */\n\tpublic readonly atime: Date | null;\n\n\t/**\n\t * Entry mtime.\n\t */\n\tpublic readonly mtime: Date | null;\n\n\t/**\n\t * Read data.\n\t */\n\tprotected readonly _readData: (() => Promise<Readable | null>) | null;\n\n\t/**\n\t * Read rsrc.\n\t */\n\tprotected readonly _readRsrc: (() => Promise<Readable | null>) | null;\n\n\t/**\n\t * Read symlink.\n\t */\n\tprotected readonly _readSymlink: (() => Promise<Buffer>) | null;\n\n\t/**\n\t * Entry triggering.\n\t */\n\tprotected _triggering = false;\n\n\t/**\n\t * Entry triggered.\n\t */\n\tprotected _triggered = false;\n\n\t/**\n\t * Entry extracted.\n\t */\n\tprotected _extracted = false;\n\n\t/**\n\t * Entry constructor.\n\t *\n\t * @param info Info object.\n\t */\n\tconstructor(info: Readonly<IEntryInfo>) {\n\t\tthis.archive = info.archive;\n\t\tthis.type = info.type;\n\t\tthis.pathRaw = info.pathRaw;\n\t\tthis.path = pathNormalize(info.pathRaw);\n\t\tthis.size = info.size ?? null;\n\t\tthis.sizeComp = info.sizeComp ?? null;\n\t\tthis.mode = info.mode ?? null;\n\t\tthis.uid = info.uid ?? null;\n\t\tthis.gid = info.gid ?? null;\n\t\tthis.uname = info.uname ?? null;\n\t\tthis.gname = info.gname ?? null;\n\t\tthis.atime = info.atime ?? null;\n\t\tthis.mtime = info.mtime ?? null;\n\t\tthis._readData = info.readData ?? null;\n\t\tthis._readRsrc = info.readRsrc ?? null;\n\t\tthis._readSymlink = info.readSymlink ?? null;\n\t}\n\n\t/**\n\t * This entry path includes named volume.\n\t *\n\t * @returns Entry has volume name in path.\n\t */\n\tpublic get hasNamedVolume() {\n\t\treturn this.archive.hasNamedVolumes;\n\t}\n\n\t/**\n\t * This entry volume name, or null.\n\t *\n\t * @returns Entry path volume name.\n\t */\n\tpublic get volumeName() {\n\t\tif (this.hasNamedVolume) {\n\t\t\tconst {path} = this;\n\t\t\treturn path.substring(0, path.indexOf('/'));\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * This entry path without any possible volume name.\n\t *\n\t * @returns Entry path without the volume name.\n\t */\n\tpublic get volumePath() {\n\t\tconst {path} = this;\n\t\tif (this.hasNamedVolume) {\n\t\t\treturn path.substring(path.indexOf('/') + 1);\n\t\t}\n\t\treturn path;\n\t}\n\n\t/**\n\t * Read entry as stream, or null if nothing to read.\n\t * Consuming function will need to wait for stream to close.\n\t *\n\t * @returns Readable stream or null if nothing to read.\n\t */\n\tpublic async stream() {\n\t\tthis._beginExtract();\n\t\treturn this._stream();\n\t}\n\n\t/**\n\t * Read entire entry into a Buffer.\n\t *\n\t * @returns Buffer or null if nothing to be read.\n\t */\n\tpublic async read() {\n\t\tthis._beginExtract();\n\t\tconst stream = await this._stream();\n\t\treturn stream ? streamToBuffer(stream) : null;\n\t}\n\n\t/**\n\t * Extract entry.\n\t *\n\t * @param path Extract path.\n\t * @param options Extract options.\n\t */\n\tpublic async extract(\n\t\tpath: string,\n\t\toptions: Readonly<IExtractOptions> = {}\n\t) {\n\t\tthis._beginExtract();\n\t\tawait this._extract(path, options);\n\t}\n\n\t/**\n\t * Trigger on itterator function.\n\t *\n\t * @param itter Itterator function.\n\t * @returns Return value.\n\t */\n\tpublic async trigger<T, U extends (entry: this) => Promise<T>>(itter: U) {\n\t\tlet r: T;\n\t\tif (this._triggered) {\n\t\t\tthrow new Error('Archive entry already triggered');\n\t\t}\n\t\tthis._triggered = this._triggering = true;\n\t\ttry {\n\t\t\tr = await itter(this);\n\t\t} finally {\n\t\t\tthis._triggering = false;\n\t\t}\n\t\treturn r;\n\t}\n\n\t/**\n\t * Run again after reading.\n\t *\n\t * @param path Extract path, relative.\n\t * @param pathFull An optional full path to be used.\n\t * @param options Extract options.\n\t */\n\tpublic async setAttributes(\n\t\tpath: string,\n\t\tpathFull: string | null = null,\n\t\toptions: Readonly<IExtractOptions> = {}\n\t) {\n\t\tconst pathSet = pathFull === null ? path : pathFull;\n\n\t\tconst {ignorePermissions, ignoreTimes} = options;\n\n\t\tconst {type, mode, atime, mtime} = this;\n\n\t\tlet link = false;\n\t\tswitch (type) {\n\t\t\tcase PathType.FILE: {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase PathType.RESOURCE_FORK: {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase PathType.DIRECTORY: {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase PathType.SYMLINK: {\n\t\t\t\tlink = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tthrow new Error(`Unsupported path type: ${type as string}`);\n\t\t\t}\n\t\t}\n\n\t\tconst atimeSet = atime || mtime || null;\n\t\tconst mtimeSet = mtime || atime || null;\n\n\t\tif (!ignorePermissions && mode !== null) {\n\t\t\tconst chmod = link ? fsLchmod : fsChmod;\n\t\t\tconst modeSet = modePermissionBits(mode);\n\t\t\tawait chmod(pathSet, modeSet);\n\t\t}\n\n\t\tif (!ignoreTimes && atimeSet && mtimeSet) {\n\t\t\tconst utimes = link ? fsLutimes : fsUtimes;\n\t\t\tawait utimes(pathSet, atimeSet, mtimeSet);\n\t\t}\n\t}\n\n\t/**\n\t * Method to call before begining extraction.\n\t * Throws error if extraction already started or entry not active.\n\t */\n\tprotected _beginExtract() {\n\t\tif (!this._triggering) {\n\t\t\tthrow new Error('Archive entry is not active');\n\t\t}\n\t\tif (this._extracted) {\n\t\t\tthrow new Error('Archive entry can only be extracted once');\n\t\t}\n\t\tthis._extracted = true;\n\t}\n\n\t/**\n\t * Create an extract error for path that exists.\n\t *\n\t * @param path Extract path.\n\t * @returns Error object.\n\t */\n\tprotected _errorExtractPathExists(path: string) {\n\t\treturn new Error(`Extract path already exists: ${path}`);\n\t}\n\n\t/**\n\t * Create an extract error for a resource fork not going to a file.\n\t *\n\t * @param path Extract path.\n\t * @returns Error object.\n\t */\n\tprotected _errorNoResourceFork(path: string) {\n\t\treturn new Error(`Extract path for resource fork not a file: ${path}`);\n\t}\n\n\t/**\n\t * Extract entry.\n\t *\n\t * @param path Extract path.\n\t * @param options Extract options.\n\t */\n\tprotected async _extract(path: string, options: Readonly<IExtractOptions>) {\n\t\tthis.archive.afterReadSetAttributesRemove(path);\n\n\t\tconst {type} = this;\n\t\tswitch (type) {\n\t\t\tcase PathType.FILE: {\n\t\t\t\tawait this._extractFile(path, options);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase PathType.RESOURCE_FORK: {\n\t\t\t\tawait this._extractResourceFork(path, options);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase PathType.DIRECTORY: {\n\t\t\t\tawait this._extractDirectory(path, options);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase PathType.SYMLINK: {\n\t\t\t\tawait this._extractSymlink(path, options);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tthrow new Error(`Unsupported path type: ${type as string}`);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Base function for extracting stream to a file.\n\t *\n\t * @param path Extract path.\n\t * @param reader Reader function.\n\t * @param options Extract options.\n\t */\n\tprotected async _extractStreamToFile(\n\t\tpath: string,\n\t\treader: () => Promise<Readable | null>,\n\t\toptions: Readonly<IExtractOptions>\n\t) {\n\t\tconst {replace} = options;\n\n\t\t// Check if something exists at path, optionally removing.\n\t\tconst stat = await fsLstatExists(path);\n\t\tif (stat) {\n\t\t\t// If replacing, then remove, else throw.\n\t\t\tif (replace) {\n\t\t\t\tawait rm(path, {recursive: true, force: true});\n\t\t\t} else {\n\t\t\t\tthrow this._errorExtractPathExists(path);\n\t\t\t}\n\t\t} else {\n\t\t\tawait mkdir(dirname(path), {recursive: true});\n\t\t}\n\n\t\t// Write file.\n\t\tawait writeFile(path, Buffer.alloc(0));\n\t\tconst stream = await reader();\n\t\tif (stream) {\n\t\t\tawait pipe(stream, createWriteStream(path));\n\t\t}\n\n\t\t// Set attributes.\n\t\tawait this.setAttributes(path, null, options);\n\t}\n\n\t/**\n\t * Extract as a file.\n\t *\n\t * @param path Extract path.\n\t * @param options Extract options.\n\t */\n\tprotected async _extractFile(\n\t\tpath: string,\n\t\toptions: Readonly<IExtractOptions>\n\t) {\n\t\tconst readData = this._readData;\n\t\tif (!readData) {\n\t\t\tthrow new Error('Internal error');\n\t\t}\n\n\t\tawait this._extractStreamToFile(path, readData, options);\n\t}\n\n\t/**\n\t * Extract as resource fork to an existing file.\n\t *\n\t * @param path Extract path.\n\t * @param options Extract options.\n\t */\n\tprotected async _extractResourceFork(\n\t\tpath: string,\n\t\toptions: Readonly<IExtractOptions>\n\t) {\n\t\tconst readRsrc = this._readRsrc;\n\t\tif (!readRsrc) {\n\t\t\tthrow new Error('Internal error');\n\t\t}\n\n\t\t// Optionally extract as a data file.\n\t\tif (options.resourceForkAsFile) {\n\t\t\tawait this._extractStreamToFile(path, readRsrc, options);\n\t\t\treturn;\n\t\t}\n\n\t\t// Check if file exists at path, else throw.\n\t\tconst stat = await fsLstatExists(path);\n\t\tif (!stat || !stat.isFile()) {\n\t\t\tthrow this._errorNoResourceFork(path);\n\t\t}\n\n\t\t// Create resource fork path.\n\t\tconst pathRsrc = pathResourceFork(path);\n\n\t\t// Write the resource fork.\n\t\tconst stream = await readRsrc();\n\t\tif (stream) {\n\t\t\tawait pipe(stream, createWriteStream(pathRsrc));\n\t\t} else {\n\t\t\tawait writeFile(pathRsrc, Buffer.alloc(0));\n\t\t}\n\n\t\t// Set attributes.\n\t\tawait this.setAttributes(path, null, options);\n\t}\n\n\t/**\n\t * Extract as a directory.\n\t *\n\t * @param path Extract path.\n\t * @param options Extract options.\n\t */\n\tprotected async _extractDirectory(\n\t\tpath: string,\n\t\toptions: Readonly<IExtractOptions>\n\t) {\n\t\tconst {replace} = options;\n\n\t\t// Check if something exists at path, else create.\n\t\tconst stat = await fsLstatExists(path);\n\t\tif (stat) {\n\t\t\t// If not directory, then remove and replace it, else throw.\n\t\t\tif (!stat.isDirectory()) {\n\t\t\t\tif (replace) {\n\t\t\t\t\tawait rm(path, {recursive: true, force: true});\n\t\t\t\t\tawait mkdir(path, {recursive: true});\n\t\t\t\t} else {\n\t\t\t\t\tthrow this._errorExtractPathExists(path);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tawait mkdir(path, {recursive: true});\n\t\t}\n\n\t\t// Set directory attributes after any children are added.\n\t\tthis.archive.afterReadSetAttributes(path, this, {...options});\n\t}\n\n\t/**\n\t * Extract as a symlink.\n\t *\n\t * @param path Extract path.\n\t * @param options Extract options.\n\t */\n\tprotected async _extractSymlink(\n\t\tpath: string,\n\t\toptions: Readonly<IExtractOptions>\n\t) {\n\t\tconst readSymlink = this._readSymlink;\n\t\tif (!readSymlink) {\n\t\t\tthrow new Error('Internal error');\n\t\t}\n\n\t\tconst {replace, symlinkAsFile} = options;\n\n\t\t// Check if something exists at path, optionally removing.\n\t\tconst stat = await fsLstatExists(path);\n\t\tif (stat) {\n\t\t\t// If replacing, then remove, else throw.\n\t\t\tif (replace) {\n\t\t\t\tawait rm(path, {recursive: true, force: true});\n\t\t\t} else {\n\t\t\t\tthrow this._errorExtractPathExists(path);\n\t\t\t}\n\t\t} else {\n\t\t\t// Ensure base directory exists.\n\t\t\tawait mkdir(dirname(path), {recursive: true});\n\t\t}\n\n\t\t// Read target.\n\t\tconst target = await readSymlink();\n\n\t\t// Create link, optionally as a file.\n\t\tif (symlinkAsFile) {\n\t\t\tawait writeFile(path, target);\n\t\t} else {\n\t\t\tawait fsSymlink(path, target);\n\t\t}\n\n\t\t// Set attributes.\n\t\tawait this.setAttributes(path, null, options);\n\t}\n\n\t/**\n\t * Read as stream.\n\t *\n\t * @returns Readable stream.\n\t */\n\tprotected async _stream() {\n\t\tconst {type} = this;\n\t\tswitch (type) {\n\t\t\tcase PathType.FILE: {\n\t\t\t\treturn this._streamFile();\n\t\t\t}\n\t\t\tcase PathType.RESOURCE_FORK: {\n\t\t\t\treturn this._streamResourceFork();\n\t\t\t}\n\t\t\tcase PathType.DIRECTORY: {\n\t\t\t\treturn this._streamDirectory();\n\t\t\t}\n\t\t\tcase PathType.SYMLINK: {\n\t\t\t\treturn this._streamSymlink();\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tthrow new Error(`Unsupported path type: ${type as string}`);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Read file as stream.\n\t *\n\t * @returns Readable stream.\n\t */\n\tprotected async _streamFile() {\n\t\tconst readData = this._readData;\n\t\tif (!readData) {\n\t\t\tthrow new Error('Internal error');\n\t\t}\n\t\treturn readData();\n\t}\n\n\t/**\n\t * Read resource fork as stream.\n\t *\n\t * @returns Readable stream.\n\t */\n\tprotected async _streamResourceFork() {\n\t\tconst readRsrc = this._readRsrc;\n\t\tif (!readRsrc) {\n\t\t\tthrow new Error('Internal error');\n\t\t}\n\t\treturn readRsrc();\n\t}\n\n\t/**\n\t * Read directory null stream.\n\t *\n\t * @returns Null stream.\n\t */\n\t// eslint-disable-next-line @typescript-eslint/require-await\n\tprotected async _streamDirectory() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * Read symlink as stream.\n\t *\n\t * @returns Readable stream.\n\t */\n\t// eslint-disable-next-line @typescript-eslint/require-await\n\tprotected async _streamSymlink() {\n\t\tconst readSymlink = this._readSymlink;\n\t\tif (!readSymlink) {\n\t\t\tthrow new Error('Internal error');\n\t\t}\n\t\tconst r = new Readable({\n\t\t\t// eslint-disable-next-line jsdoc/require-jsdoc\n\t\t\tread: () => {\n\t\t\t\treadSymlink().then(\n\t\t\t\t\td => {\n\t\t\t\t\t\tr.push(d);\n\t\t\t\t\t\tr.push(null);\n\t\t\t\t\t},\n\t\t\t\t\terr => {\n\t\t\t\t\t\tr.emit('error', err);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\treturn r;\n\t}\n}\n\n/**\n * Archive object.\n */\nexport abstract class Archive {\n\t/**\n\t * List of file extensions, or null.\n\t */\n\tpublic static readonly FILE_EXTENSIONS: Readonly<string[]> | null = null;\n\n\t/**\n\t * Archive has named volumes that each entry will be under.\n\t */\n\tpublic static readonly HAS_NAMED_VOLUMES: boolean = false;\n\n\t/**\n\t * Entry constructor.\n\t */\n\tpublic readonly Entry = Entry;\n\n\t/**\n\t * File path.\n\t */\n\tpublic readonly path: string;\n\n\t/**\n\t * Flag for currently reading.\n\t */\n\tprotected _reading = false;\n\n\t/**\n\t * Map of entries to set attributes on after reading.\n\t */\n\tprotected _afterReadSetAttributes: Map<\n\t\tstring,\n\t\tReadonly<IArchiveAfterReadSetAttributesEntry>\n\t> | null = null;\n\n\t/**\n\t * Archive constructor.\n\t *\n\t * @param path File path.\n\t */\n\tconstructor(path: string) {\n\t\tthis.path = path;\n\t}\n\n\t/**\n\t * List of file extensions used by this format.\n\t *\n\t * @returns List of file extensions.\n\t */\n\tpublic get fileExtensions() {\n\t\treturn (this.constructor as typeof Archive).FILE_EXTENSIONS || null;\n\t}\n\n\t/**\n\t * Archive has named volumes that each entry will be under.\n\t *\n\t * @returns Archive has named volumns.\n\t */\n\tpublic get hasNamedVolumes() {\n\t\treturn (this.constructor as typeof Archive).HAS_NAMED_VOLUMES;\n\t}\n\n\t/**\n\t * Add an instance to set attributes after the read finishes.\n\t *\n\t * @param path Path string.\n\t * @param entry Entry instance.\n\t * @param options Extract options.\n\t */\n\tpublic afterReadSetAttributes(\n\t\tpath: string,\n\t\tentry: Entry,\n\t\toptions: Readonly<IExtractOptions> = {}\n\t) {\n\t\tconst afters = this._afterReadSetAttributes;\n\t\tif (!afters) {\n\t\t\tthrow new Error(\n\t\t\t\t'Archive after read callbacks can only be added while reading'\n\t\t\t);\n\t\t}\n\t\tafters.set(resolve(path), {\n\t\t\tpath,\n\t\t\tentry,\n\t\t\toptions\n\t\t});\n\t}\n\n\t/**\n\t * Remove an instance to set attributes after the read finishes.\n\t *\n\t * @param path Path string.\n\t */\n\tpublic afterReadSetAttributesRemove(path: string) {\n\t\tconst afters = this._afterReadSetAttributes;\n\t\tif (!afters) {\n\t\t\tthrow new Error(\n\t\t\t\t'Archive after read callbacks can only be removed while reading'\n\t\t\t);\n\t\t}\n\t\tafters.delete(resolve(path));\n\t}\n\n\t/**\n\t * Read archive.\n\t * If the itter callback returns false, reading ends.\n\t * If the itter callback returns null, skip descent where available.\n\t *\n\t * @param itter Async callback for each archive entry.\n\t */\n\tpublic async read(itter: (entry: Entry) => Promise<unknown>) {\n\t\tif (this._reading) {\n\t\t\tthrow new Error('Archive already being read');\n\t\t}\n\t\tthis._reading = true;\n\n\t\t// Reset the after entries.\n\t\tthis._afterReadSetAttributes = new Map();\n\n\t\t// Read and handle all the afters, reset after.\n\t\ttry {\n\t\t\tawait this._read(itter);\n\t\t\tawait this._afterReadSetAttributesTrigger();\n\t\t} finally {\n\t\t\tthis._afterReadSetAttributes = null;\n\t\t\tthis._reading = false;\n\t\t}\n\t}\n\n\t/**\n\t * Run all after read set attributes.\n\t */\n\tprotected async _afterReadSetAttributesTrigger() {\n\t\tconst afters = this._afterReadSetAttributes;\n\t\tif (!afters) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Prioritize by path length.\n\t\tconst resolves: string[] = [];\n\t\tfor (const [resolved] of afters) {\n\t\t\tresolves.push(resolved);\n\t\t}\n\t\tresolves.sort((a, b) => b.length - a.length);\n\n\t\tfor (const resolved of resolves) {\n\t\t\tconst ent = afters.get(resolved);\n\t\t\tif (!ent) {\n\t\t\t\tthrow new Error('Internal error');\n\t\t\t}\n\t\t\tconst {entry, path, options} = ent;\n\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\tawait entry.setAttributes(path, resolved, options);\n\t\t}\n\t}\n\n\t/**\n\t * Read archive, class implementation.\n\t * If the itter callback returns false, reading ends.\n\t * If the itter callback returns null, skip descent where available.\n\t *\n\t * @param itter Async callback for each archive entry.\n\t */\n\tprotected abstract _read(\n\t\titter: (entry: Entry) => Promise<unknown>\n\t): Promise<void>;\n}\n",null,"export enum PathType {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tDIRECTORY = 'directory',\n\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tFILE = 'file',\n\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tSYMLINK = 'symlink',\n\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tRESOURCE_FORK = 'resource-fork'\n}\n",null,"import {Stats, constants as fsConstants} from 'node:fs';\nimport {\n\tchmod,\n\tlstat,\n\topen,\n\treaddir,\n\treadlink,\n\tsymlink,\n\tutimes\n} from 'node:fs/promises';\nimport {join as pathJoin} from 'node:path';\nimport {Readable, Writable} from 'node:stream';\nimport {pipeline} from 'node:stream/promises';\n\nimport {PathType} from './types';\n\nexport interface IFsWalkOptions {\n\t/**\n\t * Ignore unreadable directores when walking directory.\n\t *\n\t * @default false\n\t */\n\tignoreUnreadableDirectories?: boolean;\n}\n\nconst {O_WRONLY, O_SYMLINK} = fsConstants;\nexport const fsLchmodSupported = !!O_SYMLINK;\nexport const fsLutimesSupported = !!O_SYMLINK;\n\n/**\n * Normalize an entry path.\n *\n * @param path Path string.\n * @returns Normalized path.\n */\nexport function pathNormalize(path: string) {\n\treturn path.replace(/\\\\/g, '/').replace(/([^/])\\/+$/, '$1');\n}\n\n/**\n * Get path to the resource fork pseudo-file.\n *\n * @param path Path string.\n * @returns Resource fork pseudo-file path.\n */\nexport function pathResourceFork(path: string) {\n\treturn pathJoin(path, '..namedfork', 'rsrc');\n}\n\n/**\n * Get path type from stat object, or null if unsupported.\n *\n * @param stat Stats object.\n * @returns Path type.\n */\nexport function statToPathType(stat: Readonly<Stats>) {\n\tif (stat.isSymbolicLink()) {\n\t\treturn PathType.SYMLINK;\n\t}\n\tif (stat.isDirectory()) {\n\t\treturn PathType.DIRECTORY;\n\t}\n\tif (stat.isFile()) {\n\t\treturn PathType.FILE;\n\t}\n\treturn null;\n}\n\n/**\n * Get path type from stat mode, or null if unsupported.\n *\n * @param mode Stat mode.\n * @returns Path type.\n */\nexport function modeToPathType(mode: number) {\n\tif (bitwiseAndEqual(mode, 0o0120000)) {\n\t\treturn PathType.SYMLINK;\n\t}\n\tif (bitwiseAndEqual(mode, 0o0040000)) {\n\t\treturn PathType.DIRECTORY;\n\t}\n\tif (bitwiseAndEqual(mode, 0o0100000)) {\n\t\treturn PathType.FILE;\n\t}\n\treturn null;\n}\n\n/**\n * Get permission bits from mode value.\n *\n * @param mode Stat mode.\n * @returns Permission bits.\n */\nexport function modePermissionBits(mode: number) {\n\t// eslint-disable-next-line no-bitwise\n\treturn mode & 0b111111111;\n}\n\n/**\n * Check if all the bits set.\n *\n * @param value Bits value.\n * @param mask Mask value.\n * @returns True of all the bits set.\n */\nexport function bitwiseAndEqual(value: number, mask: number) {\n\t// eslint-disable-next-line no-bitwise\n\treturn (value & mask) === mask;\n}\n\n/**\n * Read a stream into a buffer.\n * Reading a stream into a buffer should be avoided where possible.\n * This is however useful for some small streams.\n *\n * @param stream Readable stream.\n * @returns Full buffer.\n */\nexport async function streamToBuffer(stream: Readable) {\n\tconst datas: Buffer[] = [];\n\tlet size = 0;\n\tawait pipeline(\n\t\tstream,\n\t\tnew Writable({\n\t\t\t// eslint-disable-next-line jsdoc/require-jsdoc\n\t\t\twrite: (data: Buffer, _encoding: unknown, cb) => {\n\t\t\t\tdatas.push(data);\n\t\t\t\tsize += data.length;\n\t\t\t\tcb();\n\t\t\t}\n\t\t})\n\t);\n\treturn Buffer.concat(datas, size);\n}\n\n/**\n * Wrapper for lchmod, does nothing on unsupported platforms.\n *\n * @param path File path.\n * @param mode File mode.\n */\nexport async function fsLchmod(path: string, mode: number) {\n\t// Skip if not supported.\n\tif (!fsLchmodSupported) {\n\t\treturn;\n\t}\n\n\t// eslint-disable-next-line no-bitwise\n\tconst fd = await open(path, O_WRONLY | O_SYMLINK);\n\ttry {\n\t\tawait fd.chmod(mode);\n\t} finally {\n\t\tawait fd.close();\n\t}\n}\n\n/**\n * Wrapper for utimes.\n *\n * @param path File path.\n * @param atime Access time.\n * @param mtime Modification time.\n */\nexport async function fsUtimes(\n\tpath: string,\n\tatime: Readonly<Date>,\n\tmtime: Readonly<Date>\n) {\n\tawait utimes(path, atime, mtime);\n}\n\n/**\n * Implementation of lutimes, does nothing on unsupported platforms.\n *\n * @param path File path.\n * @param atime Access time.\n * @param mtime Modification time.\n */\nexport async function fsLutimes(\n\tpath: string,\n\tatime: Readonly<Date>,\n\tmtime: Readonly<Date>\n) {\n\t// Skip if not supported.\n\tif (!fsLutimesSupported) {\n\t\treturn;\n\t}\n\n\t// eslint-disable-next-line no-bitwise\n\tconst fd = await open(path, O_WRONLY | O_SYMLINK);\n\ttry {\n\t\tawait fd.utimes(atime, mtime);\n\t} finally {\n\t\tawait fd.close();\n\t}\n}\n\n/**\n * A readlink wrapper that returns raw link buffer.\n *\n * @param path Link path.\n * @returns Raw link.\n */\nexport async function fsReadlinkRaw(path: string) {\n\treturn readlink(path, 'buffer');\n}\n\n/**\n * Wrapper for symlink.\n *\n * @param path Path of symbolic link.\n * @param target Target of symbolic link.\n */\nexport async function fsSymlink(\n\tpath: string | Readonly<Buffer>,\n\ttarget: string | Readonly<Buffer>\n) {\n\tawait symlink(target, path);\n}\n\n/**\n * Wrapper for chmod.\n *\n * @param path File path.\n * @param mode File mode.\n */\nexport async function fsChmod(path: string, mode: number) {\n\tawait chmod(path, mode);\n}\n\n/**\n * A readdir wrapper with consistent output.\n *\n * @param path Directory path.\n * @returns Directory listing.\n */\nexport async function fsReaddir(path: string) {\n\treturn (await readdir(path)).sort();\n}\n\n/**\n * An lstat wrapper.\n *\n * @param path Path string.\n * @returns Stat object.\n */\nexport async function fsLstat(path: string) {\n\treturn lstat(path);\n}\n\n/**\n * An lstat wrapper returning null if not exist.\n *\n * @param path Path string.\n * @returns Stat object.\n */\nexport async function fsLstatExists(path: string) {\n\ttry {\n\t\treturn await fsLstat(path);\n\t} catch (err) {\n\t\tconst {code} = err as {code: string};\n\t\tif (code === 'ENOENT' || code === 'ENOTDIR') {\n\t\t\treturn null;\n\t\t}\n\t\tthrow err;\n\t}\n}\n\n/**\n * Walk file system path.\n * If callback returns false skips recursing a directory.\n * If callback returns null aborts walking.\n *\n * @param base Directory path.\n * @param itter Callback for each entry.\n * @param options Walk options.\n */\nexport async function fsWalk(\n\tbase: string,\n\titter: (path: string, stat: Stats) => Promise<boolean | null | void>,\n\toptions: Readonly<IFsWalkOptions> = {}\n) {\n\tconst {ignoreUnreadableDirectories} = options;\n\tconst stack = (await fsReaddir(base)).reverse();\n\twhile (stack.length) {\n\t\tconst entry = stack.pop() as string;\n\t\tconst fullPath = pathJoin(base, entry);\n\t\t// eslint-disable-next-line no-await-in-loop\n\t\tconst stat = await fsLstat(fullPath);\n\n\t\t// Callback, possibly stop recursion on directory.\n\t\t// eslint-disable-next-line no-await-in-loop\n\t\tconst recurse = await itter(entry, stat);\n\t\tif (recurse === null) {\n\t\t\tbreak;\n\t\t}\n\t\tif (recurse === false || !stat.isDirectory()) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Recurse down.\n\t\tlet subs: string[] = [];\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\tsubs = await fsReaddir(fullPath);\n\t\t} catch (err) {\n\t\t\tif (\n\t\t\t\t!(\n\t\t\t\t\terr &&\n\t\t\t\t\tignoreUnreadableDirectories &&\n\t\t\t\t\t(err as {code: string}).code === 'EACCES'\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\t\tfor (let i = subs.length; i--; ) {\n\t\t\tstack.push(pathJoin(entry, subs[i]));\n\t\t}\n\t}\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport * as stream from \"stream\"\nimport { promisify } from \"util\"\n\n// biome-ignore lint: lint/complexity/noBannedTypes\nexport const pipeline = \"promises\" in stream && \"pipeline\" in (stream as any).promises\n  // biome-ignore lint: lint/complexity/noBannedTypes\n  ? ((stream.promises as any).pipeline as Function)\n  : promisify(stream.pipeline)\n\n// biome-ignore lint: lint/complexity/noBannedTypes\nexport const finished = \"promises\" in stream && \"finished\" in (stream as any).promises\n  // biome-ignore lint: lint/complexity/noBannedTypes\n  ? ((stream.promises as any).finished as Function)\n  : promisify(stream.finished)\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","parcelRequire","$parcel$global","globalThis","parcelRegister","register","createReadStream","$4U4iP$createReadStream","createWriteStream","$4U4iP$createWriteStream","constants","$4U4iP$constants","basename","$4U4iP$basename","join","$4U4iP$join","dirname","$4U4iP$dirname","resolve","$4U4iP$resolve","spawn","$4U4iP$spawn","spawnSync","$4U4iP$spawnSync","pipeline","$4U4iP$pipeline","Readable","$4U4iP$Readable","Writable","$4U4iP$Writable","promisify","$4U4iP$promisify","$4U4iP$stream","$4U4iP$promisify1","module","exports","$a4901e9b8621201e$export$c1aa0fd1ad465eab","$aTQMW","$23Sbd","$2qKQL","$aYbnF","$a4901e9b8621201e$var$walkOpts","ignoreUnreadableDirectories","$a4901e9b8621201e$var$ejectOptions","force","$a4901e9b8621201e$export$6bde309da83df86d","Entry","sizeComp","uname","gname","constructor","info","archive","size","mode","uid","gid","atime","mtime","rsrcPathRaw","pathResourceFork","pathRaw","rsrcPath","pathNormalize","path","Archive","FILE_EXTENSIONS","HAS_NAMED_VOLUMES","mounterMac","Mounter","nobrowse","read","itter","_read","each","pathFull","stat","type","statToPathType","readData","PathType","FILE","readSymlink","SYMLINK","fsReadlinkRaw","entry","ret","trigger","rsrcPathFull","rsrcStat","fsLstatExists","sizeRsrc","readRsrc","entryRsrc","RESOURCE_FORK","attach","readonly","device","devices","mountPoint","volumeName","fsWalk","pathRel","eject","$17d6798f68a81f78$export$2109cd350bcf6eda","$1gbqu","$5wocU","$41IcW","$iDF5K","$iZNym","options","hdiutil","file","ejectOnExit","_runAttach","_argsAttach","ejectSync","_createEjects","attachSync","_runAttachSync","_runEject","_argsEject","_runEjectSync","args","push","_fileArg","stdouts","proc","stdout","on","data","code","Promise","reject","once","Error","_parseDevices","Buffer","concat","toString","status","error","startsWith","xml","plist","Plist","fromXml","systemEntities","valueCastAs","ValueDict","getValue","castAs","ValueArray","r","value","dict","devEntry","ValueString","potentiallyMountable","ValueBoolean","contentHint","unmappedContentHint","volumeKind","_findRootDevice","length","shutdown","process","off","$5f8c883a4a5890e6$export$2a65c73fe54050b8","$jujKN","$2pNoI","$5f8c883a4a5890e6$var$xmlDeclaration","$5f8c883a4a5890e6$var$xmlDoctype","XML_DECLARATION","XML_DOCTYPE","xmlDeclaration","xmlDoctype","valueCastTo","Type","castTo","casted","TYPE","declaration","doctype","documentElement","xmlDecode","fromXmlElement","element","tagName","childElements","xmlElementChildElements","childElementsL","childFromXmlElement","a","toXml","ir","indentRoot","INDENT_ROOT","newlineString","NEWLINE_STRING","filter","Boolean","$20da2d731ce3920d$export$1e80556a1db28146","$20da2d731ce3920d$export$ed174037a9bdff2c","$20da2d731ce3920d$export$5c824d2ec83ff619","$20da2d731ce3920d$export$6d03a526e379b09b","$hjo8B","$e5341827650c2a02$export$18944fc6e74f8282","errors","doc","parser","DOMParser","locator","errorHandler","warning","fatalError","parseFromString","childNodes","i","l","childNode","str","test","$e5341827650c2a02$export$ed00f817df6be0c9","nodeValue","$e5341827650c2a02$export$17118775901adc6b","$e5341827650c2a02$export$1aae4f5e3a8a9756","tn","$e5341827650c2a02$export$6f0da40b035c9e7a","$e5341827650c2a02$export$e510a73ee562749","b","c","o","$e5341827650c2a02$var$C64","$e5341827650c2a02$var$B6","$e5341827650c2a02$export$c62426fdd000a97e","base64","OUTER","d","m","z","$e5341827650c2a02$var$C64M","charCodeAt","$e5341827650c2a02$var$B8","Uint8Array","$c9a6ef462a918486$export$1059c6e7d2ce5669","$62CS1","DOMImplementation","XMLSerializer","$466114d0db30daf6$export$455426655eab1d48","$466114d0db30daf6$export$64f0bed4ae6f0f24","$fKAiq","$466114d0db30daf6$var$find","$466114d0db30daf6$var$NAMESPACE","$466114d0db30daf6$var$NodeType","$466114d0db30daf6$var$ELEMENT_NODE","$466114d0db30daf6$var$ATTRIBUTE_NODE","$466114d0db30daf6$var$TEXT_NODE","$466114d0db30daf6$var$CDATA_SECTION_NODE","$466114d0db30daf6$var$ENTITY_REFERENCE_NODE","$466114d0db30daf6$var$ENTITY_NODE","$466114d0db30daf6$var$PROCESSING_INSTRUCTION_NODE","$466114d0db30daf6$var$COMMENT_NODE","$466114d0db30daf6$var$DOCUMENT_NODE","$466114d0db30daf6$var$DOCUMENT_TYPE_NODE","$466114d0db30daf6$var$DOCUMENT_FRAGMENT_NODE","$466114d0db30daf6$var$NOTATION_NODE","$466114d0db30daf6$var$ExceptionCode","$466114d0db30daf6$var$ExceptionMessage","$466114d0db30daf6$var$HIERARCHY_REQUEST_ERR","$466114d0db30daf6$var$NOT_FOUND_ERR","$466114d0db30daf6$var$INUSE_ATTRIBUTE_ERR","$466114d0db30daf6$var$notEmptyString","input","$466114d0db30daf6$var$orderedSetReducer","current","hasOwnProperty","$466114d0db30daf6$var$toOrderedSet","keys","list","split","reduce","$466114d0db30daf6$var$copy","src","dest","p","prototype","call","$466114d0db30daf6$var$_extends","Class","Super","pt","t","console","$466114d0db30daf6$var$DOMException","message","captureStackTrace","$466114d0db30daf6$var$NodeList","$466114d0db30daf6$var$LiveNodeList","node","refresh","_node","_refresh","$466114d0db30daf6$var$_updateLiveList","inc","_inc","ownerDocument","ls","$466114d0db30daf6$var$__set__","$$length","$466114d0db30daf6$var$NamedNodeMap","$466114d0db30daf6$var$_findNodeIndex","$466114d0db30daf6$var$_addNamedNode","el","newAttr","oldAttr","ownerElement","$466114d0db30daf6$var$_onRemoveAttribute","namespaceURI","XMLNS","_nsMap","prefix","localName","$466114d0db30daf6$var$_removeNamedNode","attr","lastIndex","$466114d0db30daf6$var$DOMImplementation","$466114d0db30daf6$var$Node","$466114d0db30daf6$var$_xmlEncoder","$466114d0db30daf6$var$_visitNode","callback","firstChild","nextSibling","$466114d0db30daf6$var$Document","remove","$466114d0db30daf6$var$_onUpdateChild","newChild","cs","child","$466114d0db30daf6$var$_removeChild","parentNode","previous","previousSibling","next","lastChild","$466114d0db30daf6$var$isDocTypeNode","nodeType","DOCUMENT_TYPE_NODE","$466114d0db30daf6$var$isElementNode","ELEMENT_NODE","$466114d0db30daf6$var$isTextNode","TEXT_NODE","$466114d0db30daf6$var$isElementInsertionPossible","parentChildNodes","docTypeNode","indexOf","$466114d0db30daf6$var$isElementReplacementPossible","$466114d0db30daf6$var$assertPreReplacementValidityInDocument","parent","nodeChildNodes","DOCUMENT_FRAGMENT_NODE","nodeChildElements","parentElementChild","$466114d0db30daf6$var$_insertBefore","_inDocumentAssertion","$466114d0db30daf6$var$assertPreInsertionValidity1to5","DOCUMENT_NODE","COMMENT_NODE","PROCESSING_INSTRUCTION_NODE","cp","removeChild","newFirst","newLast","pre","$466114d0db30daf6$var$Element","$466114d0db30daf6$var$Attr","$466114d0db30daf6$var$CharacterData","$466114d0db30daf6$var$Text","$466114d0db30daf6$var$Comment","$466114d0db30daf6$var$CDATASection","$466114d0db30daf6$var$DocumentType","$466114d0db30daf6$var$Notation","$466114d0db30daf6$var$Entity","$466114d0db30daf6$var$EntityReference","$466114d0db30daf6$var$DocumentFragment","$466114d0db30daf6$var$ProcessingInstruction","$466114d0db30daf6$var$XMLSerializer","$466114d0db30daf6$var$nodeSerializeToString","isHtml","nodeFilter","buf","refNode","uri","lookupPrefix","visibleNamespaces","namespace","$466114d0db30daf6$var$serializeToString","$466114d0db30daf6$var$needNamespaceDefine","isHTML","XML","ns","$466114d0db30daf6$var$addSerializedAttribute","qualifiedName","replace","defaultNS","attrs","attributes","len","nodeName","prefixedNodeName","ai","item","name","nsi","slice","pubid","publicId","sysid","systemId","sub","internalSubset","target","object","key","find","NAMESPACE","ATTRIBUTE_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","NOTATION_NODE","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","HIERARCHY_REQUEST_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","NOT_FOUND_ERR","NOT_SUPPORTED_ERR","INUSE_ATTRIBUTE_ERR","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","index","predicate","Array","getNamedItem","setNamedItem","_ownerElement","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","feature","version","createDocument","implementation","appendChild","root","createElementNS","createDocumentType","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","cloneNode","deep","$466114d0db30daf6$var$cloneNode","node2","attrs2","setAttributeNode","normalize","appendData","isSupported","hasAttributes","map","lookupNamespaceURI","isDefaultNamespace","importNode","importedNode","$466114d0db30daf6$var$importNode","getElementById","id","rtv","getAttribute","getElementsByClassName","classNames","classNamesSet","base","nodeClassNames","matches","nodeClassNamesSet","every","createElement","createDocumentFragment","createTextNode","createComment","createCDATASection","createProcessingInstruction","createAttribute","specified","createEntityReference","pl","createAttributeNS","hasAttribute","getAttributeNode","setAttribute","removeAttribute","removeAttributeNode","setAttributeNodeNS","removeAttributeNS","old","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagName","getElementsByTagNameNS","substringData","offset","count","substring","text","insertData","replaceData","deleteData","start","splitText","newText","newNode","serializeToString","getTextContent","String","$b7774e9396b5187f$export$71aa6c912b956294","$b7774e9396b5187f$export$792f3d81ea979f55","$b7774e9396b5187f$export$6aad947bda0f3f46","$b7774e9396b5187f$var$MIME_TYPE","$b7774e9396b5187f$var$NAMESPACE","$b7774e9396b5187f$var$freeze","oc","undefined","freeze","HTML","XML_APPLICATION","XML_TEXT","XML_XHTML_APPLICATION","XML_SVG_IMAGE","SVG","ac","$7e3c4643cf32896e$export$1059c6e7d2ce5669","$h9wKd","$bci2R","$7e3c4643cf32896e$var$DOMImplementation","$7e3c4643cf32896e$var$NAMESPACE","$7e3c4643cf32896e$var$ParseError","$7e3c4643cf32896e$var$XMLReader","$7e3c4643cf32896e$var$normalizeLineEndings","$7e3c4643cf32896e$var$DOMParser","$7e3c4643cf32896e$var$DOMHandler","cdata","$7e3c4643cf32896e$var$position","lineNumber","columnNumber","$7e3c4643cf32896e$var$_locator","$7e3c4643cf32896e$var$_toString","chars","substr","java","lang","$7e3c4643cf32896e$var$appendElement","hander","currentElement","ParseError","XMLReader","source","mimeType","sax","domBuilder","defaultNSMap","xmlns","entityMap","HTML_ENTITIES","XML_ENTITIES","setDocumentLocator","$7e3c4643cf32896e$var$buildErrorHandler","errorImpl","isCallback","build","fn","msg","Function","normalizeLineEndings","parse","startDocument","documentURI","startElement","qName","getURI","getQName","getLocator","endElement","startPrefixMapping","endPrefixMapping","processingInstruction","ins","ignorableWhitespace","ch","characters","apply","arguments","charNode","skippedEntity","endDocument","comment","comm","startCDATA","endCDATA","startDTD","impl","dt","warn","$c7ccad4cdae4dce5$export$91f0e5ff03dc84f","$c7ccad4cdae4dce5$export$b7e4d4631df36afa","$c7ccad4cdae4dce5$require$freeze","amp","apos","gt","lt","quot","Aacute","aacute","Abreve","abreve","acd","acE","Acirc","acirc","acute","Acy","acy","AElig","aelig","af","Afr","afr","Agrave","agrave","alefsym","aleph","Alpha","alpha","Amacr","amacr","amalg","AMP","And","and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","Aogon","aogon","Aopf","aopf","ap","apacir","apE","ape","apid","ApplyFunction","approx","approxeq","Aring","aring","Ascr","ascr","Assign","ast","asymp","asympeq","Atilde","atilde","Auml","auml","awconint","awint","backcong","backepsilon","backprime","backsim","backsimeq","Backslash","Barv","barvee","Barwed","barwed","barwedge","bbrk","bbrktbrk","bcong","Bcy","bcy","bdquo","becaus","Because","because","bemptyv","bepsi","bernou","Bernoullis","Beta","beta","beth","between","Bfr","bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block","bne","bnequiv","bNot","bnot","Bopf","bopf","bot","bottom","bowtie","boxbox","boxDL","boxDl","boxdL","boxdl","boxDR","boxDr","boxdR","boxdr","boxH","boxh","boxHD","boxHd","boxhD","boxhd","boxHU","boxHu","boxhU","boxhu","boxminus","boxplus","boxtimes","boxUL","boxUl","boxuL","boxul","boxUR","boxUr","boxuR","boxur","boxV","boxv","boxVH","boxVh","boxvH","boxvh","boxVL","boxVl","boxvL","boxvl","boxVR","boxVr","boxvR","boxvr","bprime","Breve","breve","brvbar","Bscr","bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub","bull","bullet","bump","bumpE","bumpe","Bumpeq","bumpeq","Cacute","cacute","Cap","cap","capand","capbrcup","capcap","capcup","capdot","CapitalDifferentialD","caps","caret","caron","Cayleys","ccaps","Ccaron","ccaron","Ccedil","ccedil","Ccirc","ccirc","Cconint","ccups","ccupssm","Cdot","cdot","cedil","Cedilla","cemptyv","cent","CenterDot","centerdot","Cfr","cfr","CHcy","chcy","check","checkmark","Chi","chi","cir","circ","circeq","circlearrowleft","circlearrowright","circledast","circledcirc","circleddash","CircleDot","circledR","circledS","CircleMinus","CirclePlus","CircleTimes","cirE","cire","cirfnint","cirmid","cirscir","ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote","clubs","clubsuit","Colon","colon","Colone","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","Congruent","Conint","conint","ContourIntegral","Copf","copf","coprod","Coproduct","COPY","copy","copysr","CounterClockwiseContourIntegral","crarr","Cross","cross","Cscr","cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","Cup","cup","cupbrcap","CupCap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","Dagger","dagger","daleth","Darr","dArr","darr","dash","Dashv","dashv","dbkarow","dblac","Dcaron","dcaron","Dcy","dcy","DD","dd","ddagger","ddarr","DDotrahd","ddotseq","deg","Del","Delta","delta","demptyv","dfisht","Dfr","dfr","dHar","dharl","dharr","DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","diam","Diamond","diamond","diamondsuit","diams","die","DifferentialD","digamma","disin","div","divide","divideontimes","divonx","DJcy","djcy","dlcorn","dlcrop","dollar","Dopf","dopf","Dot","dot","DotDot","doteq","doteqdot","DotEqual","dotminus","dotplus","dotsquare","doublebarwedge","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrow","Downarrow","downarrow","DownArrowBar","DownArrowUpArrow","DownBreve","downdownarrows","downharpoonleft","downharpoonright","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","DownTee","DownTeeArrow","drbkarow","drcorn","drcrop","Dscr","dscr","DScy","dscy","dsol","Dstrok","dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","DZcy","dzcy","dzigrarr","Eacute","eacute","easter","Ecaron","ecaron","ecir","Ecirc","ecirc","ecolon","Ecy","ecy","eDDot","Edot","eDot","edot","ee","efDot","Efr","efr","eg","Egrave","egrave","egs","egsdot","Element","elinters","ell","els","elsdot","Emacr","emacr","empty","emptyset","EmptySmallSquare","emptyv","EmptyVerySmallSquare","emsp","emsp13","emsp14","ENG","eng","ensp","Eogon","eogon","Eopf","eopf","epar","eparsl","eplus","epsi","Epsilon","epsilon","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","Equal","equals","EqualTilde","equest","Equilibrium","equiv","equivDD","eqvparsl","erarr","erDot","Escr","escr","esdot","Esim","esim","Eta","eta","ETH","eth","Euml","euml","euro","excl","exist","Exists","expectation","ExponentialE","exponentiale","fallingdotseq","Fcy","fcy","female","ffilig","fflig","ffllig","Ffr","ffr","filig","FilledSmallSquare","FilledVerySmallSquare","fjlig","flat","fllig","fltns","fnof","Fopf","fopf","ForAll","forall","fork","forkv","Fouriertrf","fpartint","frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown","Fscr","fscr","gacute","Gamma","gamma","Gammad","gammad","gap","Gbreve","gbreve","Gcedil","Gcirc","gcirc","Gcy","gcy","Gdot","gdot","gE","ge","gEl","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles","Gfr","gfr","Gg","gg","ggg","gimel","GJcy","gjcy","gl","gla","glE","glj","gnap","gnapprox","gnE","gne","gneq","gneqq","gnsim","Gopf","gopf","grave","GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde","Gscr","gscr","gsim","gsime","gsiml","Gt","GT","gtcc","gtcir","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvnE","Hacek","hairsp","half","hamilt","HARDcy","hardcy","hArr","harr","harrcir","harrw","Hat","hbar","Hcirc","hcirc","hearts","heartsuit","hellip","hercon","Hfr","hfr","HilbertSpace","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","Hopf","hopf","horbar","HorizontalLine","Hscr","hscr","hslash","Hstrok","hstrok","HumpDownHump","HumpEqual","hybull","hyphen","Iacute","iacute","ic","Icirc","icirc","Icy","icy","Idot","IEcy","iecy","iexcl","iff","Ifr","ifr","Igrave","igrave","ii","iiiint","iiint","iinfin","iiota","IJlig","ijlig","Im","Imacr","imacr","image","ImaginaryI","imagline","imagpart","imath","imof","imped","Implies","in","incare","infin","infintie","inodot","Int","int","intcal","integers","Integral","intercal","Intersection","intlarhk","intprod","InvisibleComma","InvisibleTimes","IOcy","iocy","Iogon","iogon","Iopf","iopf","Iota","iota","iprod","iquest","Iscr","iscr","isin","isindot","isinE","isins","isinsv","isinv","it","Itilde","itilde","Iukcy","iukcy","Iuml","iuml","Jcirc","jcirc","Jcy","jcy","Jfr","jfr","jmath","Jopf","jopf","Jscr","jscr","Jsercy","jsercy","Jukcy","jukcy","Kappa","kappa","kappav","Kcedil","kcedil","Kcy","kcy","Kfr","kfr","kgreen","KHcy","khcy","KJcy","kjcy","Kopf","kopf","Kscr","kscr","lAarr","Lacute","lacute","laemptyv","lagran","Lambda","lambda","Lang","langd","langle","lap","Laplacetrf","laquo","Larr","lArr","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","lAtail","latail","late","lates","lBarr","lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","Lcaron","lcaron","Lcedil","lcedil","lceil","lcub","Lcy","lcy","ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh","lE","le","LeftAngleBracket","LeftArrow","Leftarrow","leftarrow","LeftArrowBar","LeftArrowRightArrow","leftarrowtail","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftFloor","leftharpoondown","leftharpoonup","leftleftarrows","LeftRightArrow","Leftrightarrow","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","leftthreetimes","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","lEg","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","LessEqualGreater","LessFullEqual","LessGreater","lessgtr","LessLess","lesssim","LessSlantEqual","LessTilde","lfisht","lfloor","Lfr","lfr","lg","lgE","lHar","lhard","lharu","lharul","lhblk","LJcy","ljcy","Ll","ll","llarr","llcorner","Lleftarrow","llhard","lltri","Lmidot","lmidot","lmoust","lmoustache","lnap","lnapprox","lnE","lne","lneq","lneqq","lnsim","loang","loarr","lobrk","LongLeftArrow","Longleftarrow","longleftarrow","LongLeftRightArrow","Longleftrightarrow","longleftrightarrow","longmapsto","LongRightArrow","Longrightarrow","longrightarrow","looparrowleft","looparrowright","lopar","Lopf","lopf","loplus","lotimes","lowast","lowbar","LowerLeftArrow","LowerRightArrow","loz","lozenge","lozf","lpar","lparlt","lrarr","lrcorner","lrhar","lrhard","lrm","lrtri","lsaquo","Lscr","lscr","Lsh","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","Lstrok","lstrok","Lt","LT","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltri","ltrie","ltrif","ltrPar","lurdshar","luruhar","lvertneqq","lvnE","macr","male","malt","maltese","Map","mapsto","mapstodown","mapstoleft","mapstoup","marker","mcomma","Mcy","mcy","mdash","mDDot","measuredangle","MediumSpace","Mellintrf","Mfr","mfr","mho","micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu","MinusPlus","mlcp","mldr","mnplus","models","Mopf","mopf","mp","Mscr","mscr","mstpos","Mu","mu","multimap","mumap","nabla","Nacute","nacute","nang","nap","napE","napid","napos","napprox","natur","natural","naturals","nbsp","nbump","nbumpe","ncap","Ncaron","ncaron","Ncedil","ncedil","ncong","ncongdot","ncup","Ncy","ncy","ndash","ne","nearhk","neArr","nearr","nearrow","nedot","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","nequiv","nesear","nesim","NestedGreaterGreater","NestedLessLess","NewLine","nexist","nexists","Nfr","nfr","ngE","nge","ngeq","ngeqq","ngeqslant","nges","nGg","ngsim","nGt","ngt","ngtr","nGtv","nhArr","nharr","nhpar","ni","nis","nisd","niv","NJcy","njcy","nlArr","nlarr","nldr","nlE","nle","nLeftarrow","nleftarrow","nLeftrightarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nLl","nlsim","nLt","nlt","nltri","nltrie","nLtv","nmid","NoBreak","NonBreakingSpace","Nopf","nopf","Not","not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","notin","notindot","notinE","notinva","notinvb","notinvc","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","notni","notniva","notnivb","notnivc","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar","npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq","nrArr","nrarr","nrarrc","nrarrw","nRightarrow","nrightarrow","nrtri","nrtrie","nsc","nsccue","nsce","Nscr","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq","ntgl","Ntilde","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","Nu","nu","num","numero","numsp","nvap","nVDash","nVdash","nvDash","nvdash","nvge","nvgt","nvHarr","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim","nwarhk","nwArr","nwarr","nwarrow","nwnear","Oacute","oacute","oast","ocir","Ocirc","ocirc","Ocy","ocy","odash","Odblac","odblac","odiv","odot","odsold","OElig","oelig","ofcir","Ofr","ofr","ogon","Ograve","ograve","ogt","ohbar","ohm","oint","olarr","olcir","olcross","oline","olt","Omacr","omacr","Omega","omega","Omicron","omicron","omid","ominus","Oopf","oopf","opar","OpenCurlyDoubleQuote","OpenCurlyQuote","operp","oplus","Or","or","orarr","ord","order","orderof","ordf","ordm","origof","oror","orslope","orv","oS","Oscr","oscr","Oslash","oslash","osol","Otilde","otilde","Otimes","otimes","otimesas","Ouml","ouml","ovbar","OverBar","OverBrace","OverBracket","OverParenthesis","par","para","parallel","parsim","parsl","part","PartialD","Pcy","pcy","percnt","period","permil","perp","pertenk","Pfr","pfr","Phi","phi","phiv","phmmat","phone","Pi","pi","pitchfork","piv","planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","PlusMinus","plusmn","plussim","plustwo","pm","Poincareplane","pointint","Popf","popf","pound","Pr","pr","prap","prcue","prE","prec","precapprox","preccurlyeq","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","preceq","precnapprox","precneqq","precnsim","precsim","Prime","prime","primes","prnap","prnE","prnsim","prod","Product","profalar","profline","profsurf","prop","Proportion","Proportional","propto","prsim","prurel","Pscr","pscr","Psi","psi","puncsp","Qfr","qfr","qint","Qopf","qopf","qprime","Qscr","qscr","quaternions","quatint","quest","questeq","QUOT","rAarr","race","Racute","racute","radic","raemptyv","Rang","rang","rangd","range","rangle","raquo","Rarr","rArr","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","Rarrtl","rarrtl","rarrw","rAtail","ratail","ratio","rationals","RBarr","rBarr","rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu","Rcaron","rcaron","Rcedil","rcedil","rceil","rcub","Rcy","rcy","rdca","rdldhar","rdquo","rdquor","rdsh","Re","real","realine","realpart","reals","rect","REG","reg","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium","rfisht","rfloor","Rfr","rfr","rHar","rhard","rharu","rharul","Rho","rho","rhov","RightAngleBracket","RightArrow","Rightarrow","rightarrow","RightArrowBar","RightArrowLeftArrow","rightarrowtail","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightFloor","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","RightTee","RightTeeArrow","RightTeeVector","rightthreetimes","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar","ring","risingdotseq","rlarr","rlhar","rlm","rmoust","rmoustache","rnmid","roang","roarr","robrk","ropar","Ropf","ropf","roplus","rotimes","RoundImplies","rpar","rpargt","rppolint","rrarr","Rrightarrow","rsaquo","Rscr","rscr","Rsh","rsh","rsqb","rsquo","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","RuleDelayed","ruluhar","rx","Sacute","sacute","sbquo","Sc","sc","scap","Scaron","scaron","sccue","scE","sce","Scedil","scedil","Scirc","scirc","scnap","scnE","scnsim","scpolint","scsim","Scy","scy","sdot","sdotb","sdote","searhk","seArr","searr","searrow","sect","semi","seswar","setminus","setmn","sext","Sfr","sfr","sfrown","sharp","SHCHcy","shchcy","SHcy","shcy","ShortDownArrow","ShortLeftArrow","shortmid","shortparallel","ShortRightArrow","ShortUpArrow","shy","Sigma","sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr","slarr","SmallCircle","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","SOFTcy","softcy","sol","solb","solbar","Sopf","sopf","spades","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","Sqrt","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","Square","square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion","squarf","squf","srarr","Sscr","sscr","ssetmn","ssmile","sstarf","Star","star","starf","straightepsilon","straightphi","strns","Sub","subdot","subE","sube","subedot","submult","subnE","subne","subplus","subrarr","Subset","subset","subseteq","subseteqq","SubsetEqual","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","succeq","succnapprox","succneqq","succnsim","succsim","SuchThat","Sum","sum","sung","Sup","sup","sup1","sup2","sup3","supdot","supdsub","supE","supe","supedot","Superset","SupersetEqual","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","Supset","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swarhk","swArr","swarr","swarrow","swnwar","szlig","Tab","Tau","tau","tbrk","Tcaron","tcaron","Tcedil","tcedil","Tcy","tcy","tdot","telrec","Tfr","tfr","there4","Therefore","therefore","Theta","theta","thetasym","thetav","thickapprox","thicksim","ThickSpace","thinsp","ThinSpace","thkap","thksim","THORN","thorn","Tilde","tilde","TildeEqual","TildeFullEqual","TildeTilde","times","timesb","timesbar","timesd","tint","toea","top","topbot","topcir","Topf","topf","topfork","tosa","tprime","TRADE","trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","TripleDot","triplus","trisb","tritime","trpezium","Tscr","tscr","TScy","tscy","TSHcy","tshcy","Tstrok","tstrok","twixt","twoheadleftarrow","twoheadrightarrow","Uacute","uacute","Uarr","uArr","uarr","Uarrocir","Ubrcy","ubrcy","Ubreve","ubreve","Ucirc","ucirc","Ucy","ucy","udarr","Udblac","udblac","udhar","ufisht","Ufr","ufr","Ugrave","ugrave","uHar","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","Umacr","umacr","uml","UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus","Uogon","uogon","Uopf","uopf","UpArrow","Uparrow","uparrow","UpArrowBar","UpArrowDownArrow","UpDownArrow","Updownarrow","updownarrow","UpEquilibrium","upharpoonleft","upharpoonright","uplus","UpperLeftArrow","UpperRightArrow","Upsi","upsi","upsih","Upsilon","upsilon","UpTee","UpTeeArrow","upuparrows","urcorn","urcorner","urcrop","Uring","uring","urtri","Uscr","uscr","utdot","Utilde","utilde","utri","utrif","uuarr","Uuml","uuml","uwangle","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","vArr","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","Vbar","vBar","vBarv","Vcy","vcy","VDash","Vdash","vDash","vdash","Vdashl","Vee","vee","veebar","veeeq","vellip","Verbar","verbar","Vert","vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace","Vfr","vfr","vltri","vnsub","vnsup","Vopf","vopf","vprop","vrtri","Vscr","vscr","vsubnE","vsubne","vsupnE","vsupne","Vvdash","vzigzag","Wcirc","wcirc","wedbar","Wedge","wedge","wedgeq","weierp","Wfr","wfr","Wopf","wopf","wp","wr","wreath","Wscr","wscr","xcap","xcirc","xcup","xdtri","Xfr","xfr","xhArr","xharr","Xi","xi","xlArr","xlarr","xmap","xnis","xodot","Xopf","xopf","xoplus","xotime","xrArr","xrarr","Xscr","xscr","xsqcup","xuplus","xutri","xvee","xwedge","Yacute","yacute","YAcy","yacy","Ycirc","ycirc","Ycy","ycy","yen","Yfr","yfr","YIcy","yicy","Yopf","yopf","Yscr","yscr","YUcy","yucy","Yuml","yuml","Zacute","zacute","Zcaron","zcaron","Zcy","zcy","Zdot","zdot","zeetrf","ZeroWidthSpace","Zeta","zeta","Zfr","zfr","ZHcy","zhcy","zigrarr","Zopf","zopf","Zscr","zscr","zwj","zwnj","$826ed0110d21e5cb$export$ccbc9f9f018333e9","$826ed0110d21e5cb$export$f9c837a54db411d","$826ed0110d21e5cb$require$NAMESPACE","$826ed0110d21e5cb$var$nameChar","$826ed0110d21e5cb$var$tagNamePattern","$826ed0110d21e5cb$var$ParseError","$826ed0110d21e5cb$var$XMLReader","$826ed0110d21e5cb$var$copyLocator","f","$826ed0110d21e5cb$var$appendElement","currentNSMap","localNSMap","nsp","nsPrefix","$826ed0110d21e5cb$var$_copy","closed","$826ed0110d21e5cb$var$ElementAttributes","attributeNames","RegExp","$826ed0110d21e5cb$var$nameStartChar","$826ed0110d21e5cb$var$parse","defaultNSMapCopy","entityReplacer","k","charAt","parseInt","fromCharCode","appendText","end","xt","position","lineEnd","linePattern","exec","lineStart","parseStack","closeMap","tagStart","match","config","pop","endMatch","toLowerCase","$826ed0110d21e5cb$var$parseInstruction","$826ed0110d21e5cb$var$parseDCC","matchs","$826ed0110d21e5cb$var$split","lastMatch","endDTD","$826ed0110d21e5cb$var$parseElementStartPart","addAttribute","qname","startIndex","addValue","attrName","setTagName","$826ed0110d21e5cb$var$fixSelfClosed","elStartEnd","pos","lastIndexOf","locator2","$826ed0110d21e5cb$var$parseHtmlSpecialContent","elEndStart","Math","max","getLocalName","$8603f6000d300c9d$var$childTagNames","$8603f6000d300c9d$export$eb6d03473e8f6fd","$hEhQD","$52A4d","$cfC0L","$htfZz","Value","TAG_NAMES","CHILD_TAG_NAMES","ValueType","ValueData","ValueInteger","ValueReal","has","delete","clear","assertXmlTagName","children","eK","eV","xmlElementText","depth","indentString","INDENT_STRING","repeat","p2","val","replaceAll","$0c6ae379152bcc8a$export$4c8d1a57a761ef94","$d7e2e7cb119b7bcd$var$childTagNames","$d7e2e7cb119b7bcd$export$efd6342825622772","values","popValue","shift","shiftValue","$672fe79a0082f581$export$70ba2e51e03d3dca","assertNoXmlElementChildNodes","$a2d927542a51ce26$export$b52eba92ad5c7245","base64Decode","dataColumns","DATA_COLUMNS","base64Encode","$b0f8580fae03c70d$var$assertInteger","Number","isInteger","$b0f8580fae03c70d$export$28790b87716bcc55","asBigInt","BigInt","asNumber","$d7d6885bd521d3ea$export$7870216e9baa6b53","$ed8fb54d984acf63$export$a5a3bdd166fb5151","$b7de880ec19b15be$export$3bb977b3ba9d3b59","$b7de880ec19b15be$export$767c3cfd836ab901","$h63wN","$b7de880ec19b15be$var$pipe","_triggering","_triggered","_extracted","_readData","_readRsrc","_readSymlink","hasNamedVolume","hasNamedVolumes","volumePath","stream","_beginExtract","_stream","streamToBuffer","extract","_extract","setAttributes","pathSet","ignorePermissions","ignoreTimes","link","DIRECTORY","atimeSet","mtimeSet","chmod","fsLchmod","fsChmod","modeSet","modePermissionBits","utimes","fsLutimes","fsUtimes","_errorExtractPathExists","_errorNoResourceFork","afterReadSetAttributesRemove","_extractFile","_extractResourceFork","_extractDirectory","_extractSymlink","_extractStreamToFile","reader","rm","recursive","mkdir","writeFile","alloc","resourceForkAsFile","isFile","pathRsrc","isDirectory","afterReadSetAttributes","symlinkAsFile","fsSymlink","_streamFile","_streamResourceFork","_streamDirectory","_streamSymlink","then","err","emit","_reading","_afterReadSetAttributes","fileExtensions","afters","_afterReadSetAttributesTrigger","resolves","resolved","sort","ent","$c8e805784ff5e7d6$export$1ede5f4f7cadbc19","$gAjmt","$9b262c047d735c2c$export$68cdc037c5be95b7","$9b262c047d735c2c$export$213610777f3cbb95","$9b262c047d735c2c$export$2e57a8497aead096","isSymbolicLink","$9b262c047d735c2c$export$ca46d8333b51aa81","$9b262c047d735c2c$export$f207b56f03ffaaa2","datas","write","_encoding","cb","$9b262c047d735c2c$export$723e24d2d3d59491","$9b262c047d735c2c$export$5249736f3cc47f82","fd","open","$9b262c047d735c2c$var$O_WRONLY","$9b262c047d735c2c$var$O_SYMLINK","close","$9b262c047d735c2c$export$e60cbb801cdc66af","$9b262c047d735c2c$export$64e420d57313a055","$9b262c047d735c2c$export$356fc6a6fe321aa3","$9b262c047d735c2c$export$b8fdb3c5f4cc1051","readlink","$9b262c047d735c2c$export$59d9fa9158086022","symlink","$9b262c047d735c2c$export$af454a5fce713aea","$9b262c047d735c2c$export$d0e0ec41151e4b6a","readdir","$9b262c047d735c2c$export$8b5a7be0b507a2b7","lstat","$9b262c047d735c2c$export$aed0caf4b29264f6","$9b262c047d735c2c$export$ae01bfa74017ee13","stack","reverse","fullPath","recurse","subs","O_WRONLY","O_SYMLINK","$dad6cbf3dff47f68$export$43f28b24e1eb8181","promises","finished","pathJoin","walkOpts","ejectOptions","EntryHdi","ArchiveHdi","B6","B8","C64","C64M","childTagNames","MAX_NUM","assertInteger","pipe","fsConstants","fsLchmodSupported","fsLutimesSupported","modeToPathType","bitwiseAndEqual","mask","fsReaddir","fsLstat"],"version":3,"file":"hdi.6b26b058.js.map","sourceRoot":"../../"}