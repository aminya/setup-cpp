import { setupBrew } from "setup-brew";
import { setupBazel } from "./bazel/bazel.js";
import { setupCcache } from "./ccache/ccache.js";
import { setupChocolatey } from "./chocolatey/chocolatey.js";
import { setupCmake } from "./cmake/cmake.js";
import { setupCmakelang } from "./cmakelang/cmakelang.js";
import { setupConan } from "./conan/conan.js";
import { setupCppcheck } from "./cppcheck/cppcheck.js";
import { setupCpplint } from "./cpplint/cpplint.js";
import { setupDoxygen } from "./doxygen/doxygen.js";
import { setupFlawfinder } from "./flawfinder/flawfinder.js";
import { setupGcc } from "./gcc/gcc.js";
import { setupMingw } from "./gcc/mingw.js";
import { setupGcovr } from "./gcovr/gcovr.js";
import { setupGit } from "./git/git.js";
import { setupGraphviz } from "./graphviz/graphviz.js";
import { setupInfer } from "./infer/infer.js";
import { setupKcov } from "./kcov/kcov.js";
import { setupLizard } from "./lizard/lizard.js";
import { setupAppleClang } from "./llvm/apple-clang.js";
import { setupClangFormat, setupClangTools, setupLLVM } from "./llvm/llvm.js";
import { setupMake } from "./make/make.js";
import { setupMeson } from "./meson/meson.js";
import { setupMSVC } from "./msvc/msvc.js";
import { setupNala } from "./nala/nala.js";
import { setupNinja } from "./ninja/ninja.js";
import { setupOpencppcoverage } from "./opencppcoverage/opencppcoverage.js";
import { setupPowershell } from "./powershell/powershell.js";
import { setupPython } from "./python/python.js";
import { setupSccache } from "./sccache/sccache.js";
import { setupSevenZip } from "./sevenzip/sevenzip.js";
import { setupTask } from "./task/task.js";
import { setupVcpkg } from "./vcpkg/vcpkg.js";
import { setupVCVarsall } from "./vcvarsall/vcvarsall.js";
export declare const llvmSetups: {
    readonly llvm: typeof setupLLVM;
    readonly clang: typeof setupLLVM;
    readonly "clang++": typeof setupLLVM;
};
export declare const gccSetups: {
    readonly gcc: typeof setupGcc;
    readonly "g++": typeof setupGcc;
};
export declare const mingwSetups: {
    readonly mingw: typeof setupMingw;
};
export declare const msvcSetups: {
    readonly msvc: typeof setupMSVC;
    readonly cl: typeof setupMSVC;
    readonly msbuild: typeof setupMSVC;
    readonly visualstudio: typeof setupMSVC;
};
export declare const appleClangSetups: {
    readonly appleclang: typeof setupAppleClang;
    readonly applellvm: typeof setupAppleClang;
    readonly "apple-clang": typeof setupAppleClang;
    readonly "apple-llvm": typeof setupAppleClang;
};
export declare const llvmTools: string[];
/** The setup functions */
export declare const setups: {
    readonly cmake: typeof setupCmake;
    readonly ninja: typeof setupNinja;
    readonly vcpkg: typeof setupVcpkg;
    readonly bazel: typeof setupBazel;
    readonly conan: typeof setupConan;
    readonly meson: typeof setupMeson;
    readonly gcovr: typeof setupGcovr;
    readonly opencppcoverage: typeof setupOpencppcoverage;
    readonly OpenCppCoverage: typeof setupOpencppcoverage;
    readonly ccache: typeof setupCcache;
    readonly sccache: typeof setupSccache;
    readonly doxygen: typeof setupDoxygen;
    readonly graphviz: typeof setupGraphviz;
    readonly cppcheck: typeof setupCppcheck;
    readonly cpplint: typeof setupCpplint;
    readonly flawfinder: typeof setupFlawfinder;
    readonly lizard: typeof setupLizard;
    readonly infer: typeof setupInfer;
    readonly "clang-tidy": typeof setupClangTools;
    readonly clangtidy: typeof setupClangTools;
    readonly "clang-format": typeof setupClangFormat;
    readonly clangformat: typeof setupClangFormat;
    readonly vcvarsall: typeof setupVCVarsall;
    readonly kcov: typeof setupKcov;
    readonly make: typeof setupMake;
    readonly task: typeof setupTask;
    readonly sevenzip: typeof setupSevenZip;
    readonly "7zip": typeof setupSevenZip;
    readonly "7z": typeof setupSevenZip;
    readonly cmakelang: typeof setupCmakelang;
    readonly "cmake-lint": typeof setupCmakelang;
    readonly "cmake-format": typeof setupCmakelang;
    readonly cmakelint: typeof setupCmakelang;
    readonly cmakeformat: typeof setupCmakelang;
    readonly appleclang: typeof setupAppleClang;
    readonly applellvm: typeof setupAppleClang;
    readonly "apple-clang": typeof setupAppleClang;
    readonly "apple-llvm": typeof setupAppleClang;
    readonly msvc: typeof setupMSVC;
    readonly cl: typeof setupMSVC;
    readonly msbuild: typeof setupMSVC;
    readonly visualstudio: typeof setupMSVC;
    readonly mingw: typeof setupMingw;
    readonly gcc: typeof setupGcc;
    readonly "g++": typeof setupGcc;
    readonly llvm: typeof setupLLVM;
    readonly clang: typeof setupLLVM;
    readonly "clang++": typeof setupLLVM;
    readonly git: typeof setupGit;
    readonly nala: typeof setupNala;
    readonly brew: typeof setupBrew;
    readonly choco: typeof setupChocolatey;
    readonly python: typeof setupPython;
    readonly powershell: typeof setupPowershell;
    readonly pwsh: typeof setupPowershell;
};
export type ToolName = keyof typeof setups;
/** The tools that can be installed */
export declare const tools: Array<ToolName>;
/** The possible inputs to the program */
export type Inputs = keyof typeof setups | "compiler" | "architecture" | "timeout";
/** An array of possible inputs */
export declare const inputs: Array<Inputs>;
