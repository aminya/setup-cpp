{
  "name": "setup-cpp",
  "version": "0.32.1",
  "description": "Install all the tools required for building and testing C++/C projects.",
  "repository": "https://github.com/aminya/setup-cpp",
  "license": "Apache-2.0",
  "author": "Amin Yahyaabadi",
  "main": "dist/legacy/setup-cpp.js",
  "actions": "./dist/actions/setup-cpp.js",
  "modern": "./dist/modern/setup-cpp.js",
  "source": "./src/main.ts",
  "bin": {
    "setup-cpp": "dist/legacy/setup-cpp.js"
  },
  "files": [
    "action.yml",
    ".dockerignore",
    "dist",
    "src",
    "packages",
    "dev/docker",
    "dev/docker/__tests__",
    "README.md",
    "LICENSE.txt",
    "LICENSE.dependencies.txt",
    "package.json",
    "package-version.json",
    "tsconfig.json"
  ],
  "scripts": {
    "build": "shx rm -rf dist/ && shx mkdir -p ./dist/legacy ./dist/actions ./dist/modern && run-p lint.tsc build.parcel copy.matchers",
    "build.parcel": "cross-env NODE_ENV=production parcel build && babel ./dist --out-dir dist --plugins @upleveled/babel-plugin-remove-node-prefix --compact --no-babelrc --source-maps true",
    "bump": "ncu -u -x numerous && pnpm update",
    "clean": "shx rm -rf .parcel-cache dist exe",
    "copy.matchers": "run-p copy.matchers.legacy copy.matchers.actions copy.matchers.modern",
    "copy.matchers.legacy": "shx cp ./src/gcc/gcc_matcher.json ./dist/legacy/ && shx cp ./src/msvc/msvc_matcher.json ./dist/legacy/ && shx cp ./src/python/python_matcher.json ./dist/legacy/ && shx cp ./src/llvm/llvm_matcher.json ./dist/legacy/",
    "copy.matchers.actions": "shx cp ./src/gcc/gcc_matcher.json ./dist/actions/ && shx cp ./src/msvc/msvc_matcher.json ./dist/actions/ && shx cp ./src/python/python_matcher.json ./dist/actions/ && shx cp ./src/llvm/llvm_matcher.json ./dist/actions/",
    "copy.matchers.modern": "shx cp ./src/gcc/gcc_matcher.json ./dist/modern/ && shx cp ./src/msvc/msvc_matcher.json ./dist/modern/ && shx cp ./src/python/python_matcher.json ./dist/modern/ && shx cp ./src/llvm/llvm_matcher.json ./dist/modern/",
    "dev": "cross-env NODE_ENV=development parcel watch",
    "docs": "shx rm -rf packages/*/README.md && pnpm -r exec readme --path ../../dev/readme/template.md -y && pnpm -r exec ts-readme",
    "format": "run-s lint.prettier",
    "lint": "run-p --aggregate-output --continue-on-error lint.cspell lint.eslint lint.prettier lint.tsc",
    "lint.cspell": "cspell lint --no-progress --show-suggestions --cache --cache-location ./.cache/cspell/.cspellcache",
    "lint.eslint": "eslint **/*.{ts,tsx,js,jsx,cjs,mjs,json,yaml} --no-error-on-unmatched-pattern --cache --cache-location ./.cache/eslint/ --fix",
    "lint.prettier": "prettier --list-different --write .",
    "lint.tsc": "tsc --noEmit",
    "pack.exe": "shx rm -rf ./dist/tsconfig.tsbuildinfo && node ./dev/scripts/pack-exe.mjs",
    "prepare": "pnpm run -r build && pnpm run -w build && rm ./dist/tsconfig.tsbuildinfo",
    "start.docker": "docker run -t setup-cpp .",
    "start.docker.arch": "docker run -t setup-cpp:arch .",
    "start.docker.fedora": "docker run -t setup-cpp:fedora .",
    "start.docker.ubuntu": "docker run -t setup-cpp:ubuntu .",
    "test": "run-p --continue-on-error test.lint test.unit",
    "test.lint": "run-p --aggregate-output --continue-on-error lint.cspell test.lint.eslint test.lint.prettier lint.tsc",
    "test.lint.eslint": "eslint **/*.{ts,tsx,js,jsx,cjs,mjs,json,yaml} --no-error-on-unmatched-pattern --cache --cache-location ./.cache/eslint/",
    "test.lint.prettier": "prettier . --check",
    "test.unit": "jest --runInBand",
    "build.docker_tests": "pnpm build && node ./dev/scripts/generate-docker-tests.mjs",
    "build.docker.arch": "pnpm build.docker_tests && docker build -f ./dev/docker/__tests__/arch.dockerfile -t setup-cpp:arch .",
    "build.docker.fedora": "pnpm build.docker_tests && docker build -f ./dev/docker/__tests__/fedora.dockerfile -t setup-cpp:fedora .",
    "build.docker.ubuntu": "pnpm build.docker_tests && docker build -f ./dev/docker/__tests__/ubuntu.dockerfile -t setup-cpp:ubuntu .",
    "test.docker.arch": "pnpm build.docker.arch && container-structure-test test --image setup-cpp:arch --config ./dev/docker/__tests__/arch.yml",
    "test.docker.fedora": "pnpm build.docker.fedora && container-structure-test test --image setup-cpp:fedora --config ./dev/docker/__tests__/fedora.yml",
    "test.docker.ubuntu": "pnpm build.docker.ubuntu && container-structure-test test --image setup-cpp:ubuntu --config ./dev/docker/__tests__/ubuntu.yml"
  },
  "prettier": "prettier-config-atomic",
  "devDependencies": {
    "@actions/core": "^1.10.0",
    "@actions/exec": "^1.1.1",
    "@actions/io": "^1.1.3",
    "@actions/tool-cache": "^2.0.1",
    "@babel/cli": "^7.22.9",
    "@types/cross-spawn": "^6.0.2",
    "@types/eslint": "^8.44.0",
    "@types/jest": "^29.5.3",
    "@types/mri": "^1.1.1",
    "@types/node": "^20.4.2",
    "@types/npmcli__ci-detect": "^2.0.0",
    "@types/prettier": "2.7.3",
    "@types/semver": "^7.5.0",
    "@types/which": "^3.0.0",
    "@upleveled/babel-plugin-remove-node-prefix": "github:aminya/babel-plugin-remove-node-prefix#95fcbd92405b99a6eece48c493548996f12e6519",
    "admina": "^0.1.3",
    "caxa": "^3.0.1",
    "ci-info": "^3.8.0",
    "ci-log": "workspace:*",
    "cross-env": "7.0.3",
    "cross-spawn": "^7.0.3",
    "cspell": "^6.31.1",
    "escape-path-with-spaces": "^1.0.2",
    "escape-quotes": "^1.0.2",
    "escape-string-regexp": "^5.0.0",
    "eslint": "^8.45.0",
    "eslint-config-atomic": "^1.19.3",
    "exec-powershell": "workspace:*",
    "execa": "^7.1.1",
    "fast-glob": "^3.3.0",
    "find-up": "^6.3.0",
    "gen-readme": "^1.6.0",
    "is-url-online": "^1.5.0",
    "jest": "^29.6.1",
    "micro-memoize": "^4.1.2",
    "mri": "^1.2.0",
    "msvc-dev-cmd": "github:aminya/msvc-dev-cmd#9f672c1",
    "npm-check-updates": "^16.10.15",
    "npm-run-all2": "^6.0.6",
    "numerous": "1.0.3",
    "parcel": "2.9.3",
    "path-exists": "^5.0.0",
    "patha": "^0.4.1",
    "prettier": "2.8.8",
    "prettier-config-atomic": "^3.1.0",
    "quote-unquote": "^1.0.0",
    "readme-md-generator": "^1.0.0",
    "retry-as-promised": "^7.0.4",
    "semver": "7.5.3",
    "setup-python": "github:actions/setup-python#v4.6.1",
    "shx": "0.3.4",
    "simple-update-notifier": "^2.0.0",
    "time-delta": "github:aminya/time-delta#69d91a41cef28e569be9a2991129f5f7d1f0d00e",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.1",
    "ts-readme": "^1.1.3",
    "typescript": "^5.1.6",
    "ubuntu-version": "^2.0.0",
    "untildify-user": "workspace:*",
    "user-access": "workspace:*",
    "which": "^3.0.1"
  },
  "engines": {
    "node": ">=12.x"
  },
  "keywords": [
    "github-actions",
    "actions",
    "github",
    "setup-cpp",
    "c++",
    "cpp",
    "cxx",
    "cc",
    "llvm",
    "clang",
    "gcc",
    "mingw",
    "msvc",
    "cl",
    "cmake",
    "ninja",
    "meson"
  ],
  "alias": {
    "electron": false,
    "patha": "patha/dist/index.node.mjs",
    "admina": "admina/dist/index.mjs"
  },
  "pnpm": {
    "overrides": {
      "whatwg-url": "^12"
    }
  },
  "targets": {
    "main": {
      "context": "node",
      "engines": {
        "node": ">=12.x"
      },
      "includeNodeModules": {
        "update-notifier": false
      },
      "optimize": true,
      "outputFormat": "commonjs"
    },
    "actions": {
      "context": "node",
      "engines": {
        "node": ">=16.x"
      },
      "includeNodeModules": {
        "update-notifier": false
      },
      "optimize": true,
      "outputFormat": "commonjs"
    },
    "modern": {
      "context": "node",
      "engines": {
        "node": ">=20.x"
      },
      "includeNodeModules": true,
      "optimize": true,
      "outputFormat": "commonjs"
    }
  }
}
